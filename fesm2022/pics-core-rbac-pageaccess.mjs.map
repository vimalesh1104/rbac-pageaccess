{"version":3,"file":"pics-core-rbac-pageaccess.mjs","sources":["../../../../projects/pics-core/rbac-pageaccess/src/lib/rbac-pageaccess.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/rbac-url.config.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/store.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/permissions/permission.store.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/data-store.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/constants/app-constants.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/dynamic-tab-page-url.config.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/dynamic-tab-page-service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/page-header-url.config.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/page-header.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/config/auth-url.config.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/alert.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/auth/auth.state.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/auth/auth.store.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/credentials.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/storage.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/local.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/auth.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/access-management-url.config.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/page-access.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/urls/access-management-common.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/directives/permission.directive.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/manage-access-radio/manage-access-radio.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/manage-access-radio/manage-access-radio.component.html","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/alert/alert.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/alert/alert.component.html","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/pageaccess/pageaccess.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/pageaccess/pageaccess.component.html","../../../../projects/pics-core/rbac-pageaccess/src/lib/rbac-pageaccess.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/directives/show-field.directives.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/directives/directives.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/microstrategy.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/rbac.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/alert/alert.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/primeng.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/pipe/filter.pipe.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/pipe/ssnMask.pipe.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/pipe/shared-pipes.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/grid-list/grid-list.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/grid-list/grid-list.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/grid-list/grid-list.component.html","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/material-ui/material-ui.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/grid-list/grid-list.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/organization-dropdown/organization-dropdown.component.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/organization-dropdown/organization-dropdown.component.html","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/organization-dropdown/organization-dropdown.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@shared/common-components/manage-access-radio/manage-access-radio.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/@core/service/share-data.service.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/pics-rbac-pageaccess/pics-rbac-pageaccess.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/lib/rbac-pageaccess.module.ts","../../../../projects/pics-core/rbac-pageaccess/src/public-api.ts","../../../../projects/pics-core/rbac-pageaccess/src/pics-core-rbac-pageaccess.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RbacPageaccessService {\r\n\r\n  constructor() { }\r\n}\r\n","export class RoleConfig {\r\n  public static EndPoint = {\r\n    role: {\r\n      getAllUserRole: '/access-control/role',\r\n      createRole: '/access-control/role/create',\r\n      getLandingPage: '/platform/menu/application',\r\n      addPolicyGroup: '/access-control/role',\r\n      getAllOrgRole: '/access-control/role/organization/{orgid}',\r\n      dossier: '/dossier'\r\n    }\r\n  };\r\n}\r\n\r\nexport class UserConfig {\r\n  public static EndPoint = {\r\n    User: {\r\n      getAllUserList: '/org/user',\r\n      getAllUserActiveInactive: '/org/user?includeInactiveUsers=true',\r\n      activateUser: '/org/user/activate',\r\n      createUser: '/org/user/create',\r\n      userRole: '/org/user/role',\r\n      managementgroup: '/org/team/managementgroup',\r\n      getAllUserOrgList: '/org/user/organization/'\r\n    },\r\n    Provider: {\r\n      getProviderList: '/ref/provider',\r\n      searchProviderList: '/ref/provider/search',\r\n      addProviderUser: '/ref/provider/create/account'\r\n    }\r\n  };\r\n}\r\nexport class AttachmentConfig {\r\n  public static EndPoint = {\r\n    Attachments: {\r\n      GetAttachmentReferral: '/ref/attachment/referral',\r\n      GetCategoryLookup: '/platform/master/lookup/lookupbycategoryname',\r\n      UploadKey: '/common/files/upload-key',\r\n      DownloadKey: '/common/files/download-key',\r\n      PostAttachment: '/ref/attachment/create',\r\n      PutAttachment: '/ref/attachment'\r\n    }\r\n  };\r\n}\r\nexport class PolicyGroupConfig {\r\n  public static EndPoint = {\r\n    policyGroup: {\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup',\r\n      getAllPolicyGroupList: '/platform/page-designer/policyGroup/all',\r\n      createPolicyGroup: '/platform/page-designer/policyGroup',\r\n      getOrgPolicyGroups: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    }\r\n  };\r\n}\r\nexport class PermissionsURL {\r\n  public static EndPoints = {\r\n    permission: {\r\n      permissionRoleById: '/access-control/permission/role/{id}',\r\n      pagePermission: '/access-control/permission/page',\r\n      getPermission: '/access-control/permission/{id}',\r\n      createPermission: '/access-control/permission/create',\r\n      updateDeletePermission: '/access-control/permission/{permissionid}',\r\n      getPermissionTree: '/access-control/permission/page/{pageid}/{parentid}',\r\n      getPermissionTypes: '/access-control/permission/type/{applicationid}',\r\n      applicationPermissionsTree: '/access-control/permission/application/{applicationid}'\r\n    },\r\n    page: {\r\n      createPage: '/platform/menu/create',\r\n      updateDeletePage: '/platform/menu/{pageid}',\r\n      AllPageTree: '/platform/menu/tree/{applicationid}'\r\n    }\r\n  };\r\n}\r\n// export class AccessManagementConfig {\r\n//   public static EndPoint = {\r\n//     Organization: {\r\n//       getOrganizationList: '/org/organization/all',\r\n//       getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n//     }\r\n//   };\r\n// }\r\n\r\nexport class AccessManagementConfig {\r\n  public static EndPoint = {\r\n    Organization: {\r\n      getOrganizationList: '/platform/page-designer/page/organization/all',\r\n      getOrganization:\r\n        '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n    },\r\n    Page: {\r\n      getPage: '/page'\r\n    },\r\n    Asset: {\r\n      getAsset: 'asset',\r\n      getPageAsset: '/platform/page-designer/asset/getpagebyid',\r\n      getUserAsset: '/platform/page-designer/asset/getUserAssets',\r\n      getRoleAsset: '/platform/page-designer/asset/getRoleAssets/',\r\n      getPolicyGroupAsset: '/platform/page-designer/asset/getPolicyGroupAssets'\r\n    },\r\n    User: {\r\n      getUser: '/org/user/',\r\n      getUserList: '/org/user/all',\r\n      getUserorgList: '/org/user/organization/'\r\n    },\r\n    PolicyGroup: {\r\n      getPolicyGroup: '/platform/page-designer/policyGroup/',\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    },\r\n    Role: {\r\n      getRole: '/access-control/role/',\r\n      getRoleList: '/access-control/role/organization/{orgid}'\r\n    }\r\n  };\r\n}\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}\r\n\r\nexport class DataBaseConfig {\r\n  public static EndPoint = {\r\n    Database: {\r\n      checkObjectType: '/database/checkObjectType',\r\n    }\r\n  };\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Store } from '../service/store.service';\r\n\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any): void {\r\n    if(data){\r\n      this.setState({ ...this.state, ...data });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state);\r\n    else return of(this.state);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    if(array){\r\n      array.forEach(item => {\r\n        result.push(item);\r\n        if (item && Array.isArray(item)) {\r\n          result = result.concat(this.flat(item));\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach((key) => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","export class AppConstants {\r\n  public static errorMessage = 'Something went wrong!';\r\n  public static regexEmail = '^[0-9a-zA-Z.-]+[@][0-9a-zA-Z.-]+[.][0-9a-zA-Z]{2,}$';\r\n}","export class DynamicTabPageConfig {\r\n  public static EndPoint = {\r\n    Page: {\r\n      getActivePage: '/platform/page-designer/pageversion/{id}',\r\n      getPage: '/platform/page-designer/page',\r\n      getPageById: '/platform/page-designer/page/{id}',\r\n      getResponseByPageId: '/solution/formresponse/{responseId}/getByPageId/{pageId}',\r\n      createFormResponse: '/solution/formresponse/create',\r\n      patchFormResponse: '/solution/formresponse',\r\n      updateFormResponse: '/pagedata/'\r\n    },\r\n    Narrative: {\r\n      getIncidentListById: '/incident/listBySourceId/{id}'\r\n    },\r\n    Notification: {\r\n      createSurveyConfig: '/surveyconfig/usersurvey/{id}/{status}/{pagedataid}'\r\n    },\r\n    Finance: {\r\n      exportDocument: '/integrated/exportDocuments/',\r\n      uploadDocument: 'document/upload',\r\n      getUniqueId: '/uniqueIdLogic/'\r\n    },\r\n    Attachments: {\r\n      createAttachment: '/solution/formresponse-attachment/create'\r\n    }\r\n  };\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DynamicTabPageConfig } from '../urls/dynamic-tab-page-url.config';\r\nimport { NgxfUploaderService } from 'ngxf-uploader';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicTabPageService {\r\n  private isPageDesign = new BehaviorSubject<boolean>(false);\r\n  observePage = this.isPageDesign.asObservable();\r\n  httpService:any;\r\n  constructor(private uploadService: NgxfUploaderService, private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n\r\n  getActivePage(tabPageId: any, permission?: boolean) {\r\n    return this.httpService.get(\r\n      `${DynamicTabPageConfig.EndPoint.Page.getActivePage.replace('{id}', tabPageId)}${\r\n        permission ? '?applyPermissions=true' : ''\r\n      }`\r\n    );\r\n  }\r\n\r\n  getDynamicPage(pageId: any) {\r\n    return this.httpService.get(`${DynamicTabPageConfig.EndPoint.Page.getPage}/${pageId}`);\r\n  }\r\n\r\n  getPageById(pageId: any) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Page.getPageById.replace('{id}', pageId));\r\n  }\r\n\r\n  getListBySourceId(sourceId: any) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Narrative.getIncidentListById.replace('{id}', sourceId));\r\n  }\r\n\r\n  getResponseByPageId(responseId: any, pageId: any) {\r\n    return this.httpService.get(\r\n      DynamicTabPageConfig.EndPoint.Page.getResponseByPageId\r\n        .replace('{responseId}', responseId)\r\n        .replace('{pageId}', pageId)\r\n    );\r\n  }\r\n\r\n  createFormResponse(id: any, requestData) {\r\n    return this.httpService.post(\r\n      id\r\n        ? DynamicTabPageConfig.EndPoint.Page.updateFormResponse\r\n        : DynamicTabPageConfig.EndPoint.Page.createFormResponse,\r\n      requestData\r\n    );\r\n  }\r\n\r\n  createUserSurvey(history, Id: any) {\r\n    return this.httpService.post(\r\n      DynamicTabPageConfig.EndPoint.Notification.createSurveyConfig\r\n        .replace('{id}', history?.state?.usersurveyid)\r\n        .replace('{status}', 'Completed')\r\n        .replace('{pagedataid}', Id),\r\n      {}\r\n    );\r\n  }\r\n\r\n  updateFormResponse(id: any, requestData: any) {\r\n    return this.httpService.patch(`${DynamicTabPageConfig.EndPoint.Page.patchFormResponse}/${id}`, requestData);\r\n  }\r\n\r\n  exportReport(data: any) {\r\n    return this.httpService.post(DynamicTabPageConfig.EndPoint.Finance.exportDocument, data);\r\n  }\r\n\r\n  uploadFile(file: any) {\r\n    return this.uploadService.upload({\r\n      url: this.httpService.baseUrl + '/' + DynamicTabPageConfig.EndPoint.Finance.uploadDocument,\r\n      headers: new HttpHeaders()\r\n        .set('ctype', 'file')\r\n        .set('uniqueid', '6b61ac1e-221a-495c-957b-ad85f65be25a')\r\n        .set('role', 'role=CP_PUBLIC'),\r\n      files: file,\r\n      process: true\r\n    });\r\n  }\r\n\r\n  getUniqueId(api: string) {\r\n    return this.httpService.get(DynamicTabPageConfig.EndPoint.Finance.getUniqueId + api);\r\n  }\r\n\r\n  changePage(page) {\r\n    this.isPageDesign.next(page);\r\n  }\r\n\r\n  createFormResponseAttachment(data) {\r\n    return this.httpService.post(DynamicTabPageConfig.EndPoint.Attachments.createAttachment, data);\r\n  }\r\n}\r\n","export class PageHeaderURL {\r\n  public static EndPoints = {\r\n    page: {\r\n      getAuthorizedPages:\r\n        '/platform/page-designer/page/organization/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PageHeaderURL } from '../urls/page-header-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PageHeaderService {\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n\r\n  getAuthorizedPages(orgid) {\r\n    return this.httpService.get(PageHeaderURL.EndPoints.page.getAuthorizedPages.replace('{orgid}', orgid));\r\n  }\r\n}\r\n","export class AuthURL {\r\n  public static EndPoints = {\r\n    auth: {\r\n      user: {\r\n        conformMail: '/org/auth/forgot-password',\r\n        changePassword: '/org/auth/forgot-password-verification',\r\n        login: '/org/auth/login',\r\n        refreshToken: '/org/auth/refresh-token',\r\n        logout: '/org/auth/logout',\r\n        userInfo: '/org/user/page/list',\r\n        userRole: '/org/user/{id}',\r\n        routeToDynamicPage:\r\n          '/platform/page-designer/page/organization/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true',\r\n        authMe: '/org/auth/me',\r\n        resetPassword: '/org/user/reset-password',\r\n        orgList: '/org/management-group/organization/tree',\r\n        notification: '/worker/notification',\r\n        workerAvailability: '/worker/updateAvailablity',\r\n        getWorkerAvailability: '/worker/getByCurrentUser'\r\n      },\r\n      permission: {\r\n        permissionRoleById: '/access-control/permission/role/{id}',\r\n        pagePermission: '/access-control/permission/page',\r\n        pageLookupPermission: '/access-control/permission/page/lookup'\r\n      },\r\n      microstrategy: {\r\n        login: '/platform/microstrategy/login',\r\n        getLibrary: '/platform/microstrategy/library'\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\n  export class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n      // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n      router.events.subscribe(event => {\r\n        if (event instanceof NavigationStart) {\r\n          if (this.keepAfterRouteChange) {\r\n            // only keep for a single route change\r\n            this.keepAfterRouteChange = false;\r\n          } else {\r\n            // clear alert messages\r\n            this.clear();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    getAlert(): Observable<any> {\r\n      return this.subject.asObservable();\r\n    }\r\n\r\n    success(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n    }\r\n\r\n    error(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n    }\r\n\r\n    info(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n    }\r\n\r\n    warn(message: string, keepAfterRouteChange = false) {\r\n      this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n    }\r\n\r\n    alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n      this.keepAfterRouteChange = keepAfterRouteChange;\r\n      this.subject.next(<Alert>{ type: type, message: message });\r\n    }\r\n\r\n    clear() {\r\n      // clear alerts\r\n      this.subject.next(<any>{});\r\n    }\r\n  }\r\n  export interface DynamicObject {\r\n    [key: string]: any;\r\n  }\r\n\r\n  export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n  }\r\n  export class Alert {\r\n    type!: AlertType;\r\n    message!: string;\r\n  }\r\n  export interface Insights {\r\n    name: string;\r\n    series: Series[];\r\n  }\r\n  export interface Series {\r\n    value: number;\r\n    name: string;\r\n    month: string;\r\n  }\r\n\r\n  export interface Status {\r\n    name: string;\r\n    value: number;\r\n  }\r\n\r\n  export class UserGroupDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    constructor(data?: Partial<UserGroupDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRolePageDto {\r\n    id?: number;\r\n    name?: string;\r\n    route?: string;\r\n    icon?: string | null;\r\n    order?: number;\r\n    ismenu?: boolean;\r\n    constructor(data?: Partial<UserRolePageDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserRoleDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserRoleDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n\r\n  export class UserDto {\r\n    id?: number;\r\n    name?: string;\r\n    description?: string | null;\r\n    priority?: number;\r\n    order?: number;\r\n    defaultpage?: UserRolePageDto;\r\n    defaultpageid?: number;\r\n    parentid?: number | null;\r\n    parent?: UserRoleDto | null;\r\n    constructor(data?: Partial<UserDto>) {\r\n      Object.assign(this, data);\r\n    }\r\n  }\r\n  export class AccessManagementConfig {\r\n    public static EndPoint = {\r\n      Organization: {\r\n        getOrganizationList: '/org/organization/all',\r\n        getOrganization: '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n      }\r\n    };\r\n  }\r\n","import { UserDto } from '../common/common.entity';\r\n\r\nexport class AuthState {\r\n  user?: UserDto;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserDto } from '../common/common.entity';\r\nimport { Store } from '../service/store.service';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthURL } from '../config/auth-url.config';\r\nimport { AuthState } from './auth.state';\r\nimport { DataStoreService } from '../service/data-store.service';\r\n@Injectable()\r\nexport class AuthStore extends Store<AuthState> {\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    super(new AuthState());\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n\r\n  }\r\n  // constructor(private httpService: HttpService) {\r\n  // }\r\n\r\n  addAuthInfo(user: UserDto): void {\r\n    this.setState({ ...this.state, user });\r\n  }\r\n\r\n  getAuthInfo(): Observable<any> {\r\n    console.log(this.state);\r\n    if (this.state.user) {\r\n      return of(this.state.user);\r\n    } else {\r\n      return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n        tap(([user]) => {\r\n          return user;\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  // Customize received credentials here\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\nconst credentialsKey = 'jwt-token';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredentialsService {\r\n  private token: string | null = null;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this.token = savedCredentials;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  /**\r\n   * Gets the user credentials.\r\n   * @return The user credentials or null if the user is not authenticated.\r\n   */\r\n  get credentials(): string | null {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this.token = savedCredentials;\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * Sets the user credentials.\r\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\r\n   * Otherwise, the credentials are only persisted for the current session.\r\n   * @param credentials The user credentials.\r\n   * @param remember True to remember credentials across sessions.\r\n   */\r\n  setCredentials(credentials?: string) {\r\n    this.token = credentials || null;\r\n    if (credentials) {\r\n      sessionStorage.setItem(credentialsKey, credentials);\r\n    } else {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n","export class StorageService {\r\n  constructor(protected Storage: any) {}\r\n\r\n  public getItem(key: string): any {\r\n    return this.Storage.getItem(key);\r\n  }\r\n\r\n  public setItem(key: string, item: any): void {\r\n    return this.Storage.setItem(key, item);\r\n  }\r\n\r\n  public getObj(key: string, safe = true): any {\r\n    try {\r\n      const item = this.getItem(key);\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      if (!safe) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setObj(key: string, item: any): void {\r\n    return this.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  public removeItem(key: string): void {\r\n    this.Storage.removeItem(key);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.Storage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalService extends StorageService {\r\n  constructor() {\r\n    super(window.sessionStorage);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DynamicTabPageService } from '../service/dynamic-tab-page-service';\r\nimport { PageHeaderService } from '../service/page-header.service';\r\nimport { AuthStore } from '../auth/auth.store';\r\nimport { AuthURL } from '../config/auth-url.config';\r\nimport { BehaviorSubject, forkJoin, Observable, of } from 'rxjs';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\nimport { AppConstants } from '../constants/app-constants';\r\nimport { AlertService } from './alert.service';\r\nimport { CredentialsService } from './credentials.service';\r\nimport { LocalService } from './local.service';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  sharedInfo: any;\r\n  alertService: AlertService;\r\n  dynamicTabPageService: DynamicTabPageService;\r\n  pageHeaderService: PageHeaderService;\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService, injector: Injector,\r\n    private store: AuthStore,\r\n    private _router: Router,\r\n    private credentialsService: CredentialsService,\r\n    private localstore: LocalService)   \r\n  {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n    this.alertService = injector.get<AlertService>(AlertService);\r\n    this.dynamicTabPageService = injector.get<DynamicTabPageService>(DynamicTabPageService);\r\n    this.pageHeaderService = injector.get<PageHeaderService>(PageHeaderService);\r\n  }\r\n\r\n  public orgInfo = new BehaviorSubject<any>('');\r\n  currentOrgInfo = this.orgInfo.asObservable();\r\n\r\n  public currentMenu = new BehaviorSubject<any>('');\r\n  currentMenuInfo = this.currentMenu.asObservable();\r\n\r\n  feedOrgInfo(data: any) {\r\n    this.orgInfo.next(data);\r\n  }\r\n  getCurrentMenu(data: any) {\r\n    this.currentMenu.next(data);\r\n  }\r\n\r\n  getUserOrgList() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.orgList);\r\n  }\r\n\r\n  getUnNotified() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.notification);\r\n  }\r\n\r\n  updateUnNotified(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.notification, data);\r\n  }\r\n\r\n  updateWorkerAvailability(data) {\r\n    return this.httpService.patch(AuthURL.EndPoints.auth.user.workerAvailability, data);\r\n  }\r\n\r\n  getWorkerAvailability() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.getWorkerAvailability);\r\n  }\r\n\r\n  getMstrToken() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.microstrategy.login).pipe(res => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public login(email: string, password: string, otp: string): Observable<any> {\r\n    const body = {\r\n      email: email,\r\n      password: password,\r\n      secret: otp ? otp : ''\r\n    };\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.login, body).pipe(\r\n      mergeMap((res: any): Observable<[any]> => {\r\n        if (res['data'] === 'MFA_CODE_SEND') {\r\n          return of(res['data']);\r\n        }\r\n        this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n        sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n        sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n        sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n        sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n        return this.getUserInfo();\r\n      })\r\n    );\r\n  }\r\n\r\n  public refreshToken(platform = 'aws') {\r\n    const email = sessionStorage.getItem('email');\r\n    const refreshToken = sessionStorage.getItem('refreshToken');\r\n    const body = {\r\n      email,\r\n      refreshToken\r\n    };\r\n    if (platform === 'aws') {\r\n      return this.httpService.post(AuthURL.EndPoints.auth.user.refreshToken, body).pipe(\r\n        mergeMap((res: any): any => {\r\n          this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n          sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n          sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n          sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n          sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n          console.log('new token generated...', res['data'].idToken.jwtToken);\r\n          return [res['data'].idToken.jwtToken];\r\n        })\r\n      );\r\n    } else {\r\n      return this.httpService.post(AuthURL.EndPoints.auth.user.refreshToken, body).pipe(\r\n        mergeMap((res: any): any => {\r\n          this.credentialsService.setCredentials(res['data'].token);\r\n          sessionStorage.setItem('refreshToken', res['data'].refreshToken);\r\n          return [res['data'].token];\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public resetLoggedIn() {\r\n    this.httpService\r\n      .post(AuthURL.EndPoints.auth.user.logout, {\r\n        email: sessionStorage.getItem('email')\r\n      })\r\n      .subscribe(() => {\r\n        console.log('Logged in flag reset successful.');\r\n      });\r\n  }\r\n\r\n  public logout() {\r\n    this._router.navigate(['/login']);\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n  }\r\n\r\n  public getUserInfo(): Observable<any> {\r\n    return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n      tap(([user]) => {\r\n        this.store.addAuthInfo(user['data']);\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getUserRole(id): Observable<any> {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.userRole.replace('{id}', id)).pipe(res => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public routeToDynamicPage(orgid): Observable<any> {\r\n    return this.httpService\r\n      .get(AuthURL.EndPoints.auth.user.routeToDynamicPage.replace('{orgid}', orgid))\r\n      .pipe((res: any) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  getAuthMe() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.authMe);\r\n  }\r\n\r\n  ResetPassword(data: any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.resetPassword, data);\r\n  }\r\n\r\n  public getRoleKey() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.role) {\r\n      return user.role.rolekey;\r\n    }\r\n  }\r\n\r\n  public isAdmin() {\r\n    return 'ADM' === this.getRoleKey();\r\n  }\r\n\r\n  public getOrgID() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.userWorkInfo && user.userWorkInfo.organization && user.userWorkInfo.organization.id) {\r\n      return user.userWorkInfo.organization.id;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  conformMail(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.conformMail, data);\r\n  }\r\n\r\n  changePassword(data) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.changePassword, data);\r\n  }\r\n\r\n  setSharedMessage(data) {\r\n    this.sharedInfo = data;\r\n  }\r\n\r\n  getSharedMessage() {\r\n    return this.sharedInfo;\r\n  }\r\n\r\n  async checkDynamicPagePermission(pageId: any) {\r\n    const dynamicPages = await this.getAuthorizedPages();\r\n    if (pageId) {\r\n      this.dynamicTabPageService.getPageById(pageId).subscribe(res => {\r\n        if (dynamicPages.some(page => page.id === res['data'][0].activeVersion.id)) {\r\n          this._router.navigate([`pages/dynamic-search/search/${res['data'][0].activeVersion.id}`]);\r\n        } else {\r\n          this.alertService.error(\r\n            `You don't have permissions for ${res['data'][0].activeVersion.pagename} . Please Contact Administrator`\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      this.alertService.error(\r\n        'You don\\'t have permissions to perform the following operations .Please Contact Administrator'\r\n      );\r\n    }\r\n  }\r\n\r\n  getCurrentOrg() {\r\n    return this.getUserOrgList()\r\n      .toPromise()\r\n      .then(response => {\r\n        return response['data'][0].id;\r\n      });\r\n  }\r\n\r\n  async getAuthorizedPages() {\r\n    const orgId = await this.getCurrentOrg();\r\n    return this.pageHeaderService\r\n      .getAuthorizedPages(orgId)\r\n      .toPromise()\r\n      .then(\r\n        response => {\r\n          const dynamicPage = response['data'].filter(page => {\r\n            return (\r\n              page.activeVersion &&\r\n              (page.activeVersion.gridconfig || page.activeVersion.templatejson || this.getCustomPage(page))\r\n            );\r\n          });\r\n          return dynamicPage.map(page => ({\r\n            id: page.activeVersion.id,\r\n            name: page.activeVersion.pagename,\r\n            activeVersion: page.activeVersion\r\n          }));\r\n        },\r\n        _error => this.alertService.error(AppConstants.errorMessage)\r\n      );\r\n  }\r\n\r\n  getCustomPage(page) {\r\n    if (page.activeVersion.tabconfig) {\r\n      const routingTab = JSON.parse(page.activeVersion.tabconfig).filter(x => x.type === 'ROUTING');\r\n      return routingTab.length && page;\r\n    }\r\n  }\r\n}\r\n","export class AccessManagementConfig {\r\n  public static EndPoint = {\r\n    Organization: {\r\n      getOrganizationList: '/platform/page-designer/page/organization/all',\r\n      getOrganization:\r\n        '/platform/page-designer/page/organization/{orgId}?returnUserPage=false&excludeNoActiveVersionPages=true'\r\n    },\r\n    Page: {\r\n      getPage: '/page'\r\n    },\r\n    Asset: {\r\n      getAsset: 'asset',\r\n      getAssetDeselect: 'assetDeselect',\r\n      getPageAsset: '/platform/page-designer/asset/getpagebyid',\r\n      getUserAsset: '/platform/page-designer/asset/getUserAssets',\r\n      getRoleAsset: '/platform/page-designer/asset/getRoleAssets',\r\n      getPolicyGroupAsset: '/platform/page-designer/asset/getPolicyGroupAssets'\r\n    },\r\n    User: {\r\n      getUser: '/org/user/',\r\n      getUserList: '/org/user/all',\r\n      getUserorgList: '/org/user/organization/'\r\n    },\r\n    PolicyGroup: {\r\n      getPolicyGroup: '/platform/page-designer/policyGroup/',\r\n      getPolicyGroupList: '/platform/page-designer/policyGroup/organization/{organizationid}'\r\n    },\r\n    Role: {\r\n      getRole: '/access-control/role/',\r\n      getRoleList: '/access-control/role/organization/{orgid}'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { AccessManagementConfig } from '../../@core/urls/access-management-url.config';\r\nimport { DataStoreService } from '../service/data-store.service';\r\nimport { DataBaseConfig } from './rbac-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PageAccessService {\r\n  isfull = false;\r\n  hide = false;\r\n  isread = false;\r\n  isreadwrite = false;\r\n  // constructor(private httpService: HttpService) {\r\n  //    // This is intentional\r\n  // }\r\n  httpService: any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res) {\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * when user selected policy\r\n   * @param access Raw valur of RBac form\r\n   * @returns form array of DA\r\n   * @childFunction of saveRbac\r\n   */\r\n  accessByPolicy(access, id, policyGroupData, selectedFieldData, pageData): any[] {\r\n    const fullArray = [];\r\n    for (const value of id) {\r\n      const selectedData = policyGroupData.filter(key => key.id === value);\r\n      const formObj = {\r\n        id: '',\r\n        description: '',\r\n        policygroupname: '',\r\n        pageConfigs: [],\r\n        assetConfigs: []\r\n      };\r\n      this.setPolicyObj(formObj, selectedData, value);\r\n      this.loadAccessForPage(access, selectedData, formObj, value, pageData);\r\n      if (access.fieldLevelData.length) {\r\n        this.loadAccessForFields(access, selectedData, formObj, value, selectedFieldData, pageData);\r\n      }\r\n      fullArray.push(formObj);\r\n    }\r\n\r\n    return fullArray;\r\n  }\r\n\r\n  /**\r\n   * when user selected Persona\r\n   * @param access Raw valur of RBac form\r\n   * @returns form array of DA\r\n   * @childFunction of saveRbac\r\n   */\r\n  accessByPersona(access, personaId, id, roleAddedData, selectedFieldData, pageData) {\r\n    const fullArray = [];\r\n    // const personaId = this.rbacForm.get('roleid').value;\r\n    // const personaId = this.rbacForm.get('roleid').value;\r\n    const formObj = {\r\n      id: '',\r\n      rolekey: '',\r\n      rolename: '',\r\n      description: '',\r\n      effectivedate: '',\r\n      pageConfigs: [],\r\n      assetConfigs: [],\r\n      rolePolicyGroupConfigs: []\r\n    };\r\n\r\n    for (const item of personaId) {\r\n      const selectedData = roleAddedData.filter(key => key.id === item);\r\n      this.setRoleObj(formObj, selectedData, item, id);\r\n      this.loadAccessForPage(access, selectedData, formObj, item, pageData);\r\n      if (access.fieldLevelData.length) {\r\n        this.loadAccessForFields(access, selectedData, formObj, item, selectedFieldData, pageData);\r\n      }\r\n      fullArray.push(formObj);\r\n    }\r\n    return fullArray;\r\n  }\r\n\r\n  /**\r\n   * when user selected User\r\n   * @param access Raw valur of RBac form\r\n   * @returns form array of DA\r\n   * @childFunction of saveRbac\r\n   */\r\n  accessByUser(access, userId, id, roleids, userList, selectedFieldData, pageData) {\r\n    const fullArray = [];\r\n\r\n    for (const item of userId) {\r\n      const selectedData = userList.filter(key => key.id === item);\r\n      const formObj = { ...selectedData[0] };\r\n      formObj.pageConfigs = [];\r\n      formObj.assetConfigs = [];\r\n      formObj.policyGroupConfigs = [];\r\n      formObj.roleConfigs = [];\r\n      console.log('======');\r\n      this.setUserObj(formObj, selectedData, item, id, roleids);\r\n      console.log('======1');\r\n      this.loadAccessForPage(access, selectedData, formObj, item, pageData);\r\n      console.log('======2');\r\n      if (access.fieldLevelData.length) {\r\n        this.loadAccessForFields(access, selectedData, formObj, item, selectedFieldData, pageData);\r\n      }\r\n      fullArray.push(formObj);\r\n    }\r\n\r\n    return fullArray;\r\n  }\r\n\r\n  /**\r\n   * Fetch access list for dashboard access\r\n   * @param access\r\n   * @param assetDashBoardConfigs\r\n   * @param formObj\r\n   * @param id\r\n   */\r\n  loadAccessForPage(access, selectedData, formObj, id, pageData) {\r\n    const existPageConfigs = selectedData[0]['pageConfigs'];\r\n    for (const item of access.pageLevelData) {\r\n      const selectedModule = pageData.filter(key => key.id === item['pageid']);\r\n      const pageAccess = access.pageLevelData.filter(key => key.pageid === item['pageid']);\r\n      this.pageAccessCheck(pageAccess);\r\n      const pageKey = {\r\n        id: null,\r\n        isactive: true,\r\n        isfull: this.isfull,\r\n        hide: this.hide,\r\n        isread: this.isread,\r\n        isreadwrite: this.isreadwrite,\r\n        pageid: item['pageid'],\r\n        policygroupid: id,\r\n        modulekey: selectedModule[0]['modulekey'],\r\n        submodulekey: selectedModule[0]['submodulekey']\r\n      };\r\n      // check exist page length\r\n      if (existPageConfigs.length) {\r\n        const existIds = existPageConfigs.map(p => p.pageid);\r\n        const chkPage = existIds.includes(item['pageid']);\r\n        if (chkPage) {\r\n          const index = existIds.indexOf(item['pageid']);\r\n          if (index > -1) {\r\n            //if found\r\n            pageKey.id = existPageConfigs[index]['id'];\r\n            pageKey.isactive = false;\r\n            formObj.pageConfigs.push(pageKey);\r\n            existPageConfigs.splice(index, 1);\r\n          }\r\n        }\r\n        const d = { ...pageKey };\r\n        d.id = null;\r\n        d.isactive = true;\r\n        formObj.pageConfigs.push(d);\r\n      } else {\r\n        formObj.pageConfigs.push(pageKey);\r\n      }\r\n    }\r\n    // still existconfig length\r\n    if (existPageConfigs.length) {\r\n      existPageConfigs.map(t => {\r\n        t.isactive = false;\r\n        formObj.pageConfigs.push(t);\r\n        return t;\r\n      });\r\n    }\r\n  }\r\n  pageAccessCheck(pageAccess) {\r\n    if (pageAccess[0].pageAccess === '1') {\r\n      this.isfull = true;\r\n    } else if (pageAccess[0].pageAccess === '4') {\r\n      this.hide = true;\r\n    } else if (pageAccess[0].pageAccess === '3') {\r\n      this.isread = true;\r\n    } else if (pageAccess[0].pageAccess === '2') {\r\n      this.isreadwrite = true;\r\n    }\r\n  }\r\n  setPolicyObj(formObj, selectedData, id) {\r\n    formObj.id = id;\r\n    formObj.description = selectedData[0]['description'];\r\n    formObj.policygroupname = selectedData[0]['policygroupname'];\r\n  }\r\n\r\n  loadAccessForFields(access, selectedData, formObj, id, selectedFieldData, pageData) {\r\n    // console.log(selectedData)\r\n    const assetConfigs = selectedData[0]['assetConfigs'].filter(key => key.modulekey !== null);\r\n    // console.log('------------')\r\n    const selectedModule = pageData.filter(key => key.id === access.fpages[0]['id']);\r\n    // console.log(access.fieldLevelData)\r\n    selectedFieldData =\r\n      access.fieldLevelData !== null ? this.setSelectedFieldPage(access.fieldLevelData, selectedFieldData) : [];\r\n    // console.log(selectedData, assetConfigs)\r\n    for (const selectedField of selectedFieldData) {\r\n      if (selectedField.access === null) {\r\n        // continue;\r\n      }\r\n      console.log(selectedField);\r\n      let isfull = false;\r\n      let hide = false;\r\n      let isread = false;\r\n      let isreadwrite = false;\r\n\r\n      if (selectedField.access === '2' || selectedField.access === '1') {\r\n        isfull = true;\r\n      } else if (selectedField.access === '4') {\r\n        hide = true;\r\n      } else if (selectedField.access === '3') {\r\n        isread = true;\r\n      } else if (selectedField.access === '2') {\r\n        isreadwrite = true;\r\n      }\r\n      const aConfigs = {\r\n        id: selectedField['id'] ? selectedField['id'] : null,\r\n        isactive: true,\r\n        isfull: isfull,\r\n        hide: hide,\r\n        isread: isread,\r\n        isreadwrite: isreadwrite,\r\n        assetid: selectedField['assetid'],\r\n        policygroupid: id,\r\n        pageid: selectedField['pageId'] ? selectedField['pageId'] : access.fpages[0]['id'],\r\n        modulekey: selectedModule[0]['modulekey'],\r\n        submodulekey: selectedModule[0]['submodulekey']\r\n      };\r\n      // check exist page length\r\n      this.checkExistAsset(assetConfigs, selectedField, aConfigs, formObj);\r\n    }\r\n  }\r\n  checkExistAsset(assetConfigs, selectedField, aConfigs, formObj) {\r\n    if (assetConfigs.length) {\r\n      const existIds = assetConfigs.map(p => p.assetid);\r\n      const chkPage = existIds.includes(selectedField['assetid']);\r\n      if (chkPage) {\r\n        const index = existIds.indexOf(selectedField['assetid']);\r\n        if (index > -1) {\r\n          //if found\r\n          aConfigs.id = assetConfigs[index]['id'];\r\n          aConfigs.isactive = false;\r\n          formObj.assetConfigs.push(aConfigs);\r\n          assetConfigs.splice(index, 1);\r\n        }\r\n      }\r\n      const d = { ...aConfigs };\r\n      d.isactive = true;\r\n      d.id = null;\r\n      formObj.assetConfigs.push(d);\r\n    } else {\r\n      formObj.assetConfigs.push(aConfigs);\r\n    }\r\n  }\r\n\r\n  setRoleObj(formObj, selectedData, roleid, policyid) {\r\n    formObj.id = roleid;\r\n    formObj.rolekey = selectedData[0]['rolekey'];\r\n    formObj.rolename = selectedData[0]['rolename'];\r\n    formObj.effectivedate = selectedData[0]['effectivedate'];\r\n    formObj.description = selectedData[0]['description'];\r\n    // loop the policy group\r\n    const id = policyid;\r\n    const existRolePolicyConfig = selectedData[0]['rolePolicyGroupConfigs'];\r\n    for (const item of id) {\r\n      const rpolicyConfig = {\r\n        id: null,\r\n        isactive: true,\r\n        policygroupid: item, // group policy id\r\n        roleid: roleid // role id\r\n      };\r\n      // check exist page length\r\n      if (existRolePolicyConfig.length) {\r\n        const existIds = existRolePolicyConfig.map(p => p.policygroupid);\r\n        const chkPage = existIds.includes(item);\r\n        if (chkPage) {\r\n          const index = existIds.indexOf(item);\r\n          if (index > -1) {\r\n            //if found\r\n            rpolicyConfig.id = existRolePolicyConfig[index]['id'];\r\n            existRolePolicyConfig.splice(index, 1);\r\n          }\r\n        }\r\n      }\r\n      formObj.rolePolicyGroupConfigs.push(rpolicyConfig);\r\n    }\r\n    // still existconfig length\r\n    if (existRolePolicyConfig.length) {\r\n      existRolePolicyConfig.map(t => {\r\n        t.isactive = false;\r\n        formObj.rolePolicyGroupConfigs.push(t);\r\n        return t;\r\n      });\r\n    }\r\n  }\r\n\r\n  setUserObj(formObj, selectedData, userId, id, roleids) {\r\n    // loop the policy group\r\n    const existRolePolicyConfig = selectedData[0]['policyGroupConfigs'];\r\n    this.getCheckPolicyConfig(id, userId, existRolePolicyConfig, formObj);\r\n    // still existconfig length\r\n    if (existRolePolicyConfig.length) {\r\n      existRolePolicyConfig.map(t => {\r\n        t.isactive = false;\r\n        formObj.policyGroupConfigs.push(t);\r\n        return t;\r\n      });\r\n    }\r\n    // loop the role group\r\n    // const roleids = this.rbacForm.get('roleid').value;\r\n    const existRoleId = selectedData[0]['roleConfigs'];\r\n    for (const role of existRoleId) {\r\n      const chkRoleData = roleids.includes(role['roleid']);\r\n      const roleGrp = {\r\n        id: role['id'],\r\n        isactive: false,\r\n        isdefaultrole: role['isdefaultrole'],\r\n        userid: userId,\r\n        roleid: role['roleid'],\r\n        effectivedate: role['effectivedate']\r\n      };\r\n      if (chkRoleData) {\r\n        const index1 = roleids.indexOf(role['roleid']);\r\n        if (index1 > -1) {\r\n          //if found\r\n          roleids.splice(index1, 1);\r\n        }\r\n        roleGrp.isactive = true;\r\n      }\r\n      formObj.roleConfigs.push(roleGrp);\r\n    }\r\n    // check new roles group ids\r\n    if (roleids.length) {\r\n      for (const roleId of roleids) {\r\n        const roleGrp = {\r\n          id: null,\r\n          isactive: true,\r\n          isdefaultrole: false,\r\n          userid: userId,\r\n          roleid: roleId,\r\n          effectivedate: new Date()\r\n        };\r\n        formObj.roleConfigs.push(roleGrp);\r\n      }\r\n    }\r\n  }\r\n  getCheckPolicyConfig(id, userId, existRolePolicyConfig, formObj) {\r\n    for (const item of id) {\r\n      const rpolicyConfig = {\r\n        id: null,\r\n        isactive: true,\r\n        policygroupid: item, // group policy id\r\n        userid: userId // user id\r\n      };\r\n      // check exist page length\r\n      if (existRolePolicyConfig.length) {\r\n        const existIds = existRolePolicyConfig.map(p => p.policygroupid);\r\n        const chkPage = existIds.includes(item);\r\n        if (chkPage) {\r\n          const index = existIds.indexOf(item);\r\n          if (index > -1) {\r\n            //if found\r\n            rpolicyConfig.id = existRolePolicyConfig[index]['id'];\r\n            existRolePolicyConfig.splice(index, 1);\r\n          }\r\n        }\r\n      }\r\n      formObj.policyGroupConfigs.push(rpolicyConfig);\r\n    }\r\n  }\r\n  setSelectedFieldPage(updateArray, selectedFieldData) {\r\n    // console.log('=========>', updateArray, selectedFieldData)\r\n    if (updateArray?.length) {\r\n      if (selectedFieldData?.length >= updateArray.length) {\r\n        selectedFieldData = this.updateDuplicatesinArray([...selectedFieldData], [...updateArray]);\r\n        return selectedFieldData;\r\n      } else {\r\n        selectedFieldData = [...updateArray];\r\n        return selectedFieldData;\r\n      }\r\n    }\r\n  }\r\n  updateDuplicatesinArray(origArr: any[], updatingArr: any[]): any[] {\r\n    const updatingArrids = new Set(updatingArr.map(ele => ele.assetid));\r\n    return [...updatingArr, ...origArr.filter(ele => !updatingArrids.has(ele.assetid))];\r\n  }\r\n  getMostFrequentEle(arr) {\r\n    const hashMap = arr.reduce((acc, val) => {\r\n      acc[String(val)] = (acc[val] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    return Object.keys(hashMap).reduce((a, b) => (hashMap[a] > hashMap[b] ? a : b));\r\n  }\r\n  getAccessArrayOnClick(pagesFromField, pageData, selectedFieldData, savedPageAccessPatching, existingValue) {\r\n    const accessArray: any = [];\r\n    for (let i = 0; i < pagesFromField?.length; i++) {\r\n      const pageName = pageData.filter(key => key.id === pagesFromField[i]);\r\n      const fieldLevelExist = selectedFieldData.filter(ele => ele.pageId == pagesFromField[i]);\r\n      const pageAccessValue = this.checkFieldLevelExist(\r\n        fieldLevelExist,\r\n        savedPageAccessPatching,\r\n        pagesFromField,\r\n        existingValue,\r\n        i\r\n      );\r\n      if (!existingValue[i]) {\r\n        const activeVersion = pageName[0]?.activeVersion;\r\n        let tableSchemaConfig = activeVersion?.tableschemaconfig;\r\n        tableSchemaConfig = typeof tableSchemaConfig === 'string' ? JSON.parse(tableSchemaConfig) : tableSchemaConfig;\r\n          accessArray.push(\r\n            new FormGroup({\r\n              pageName: new FormControl(pageName[0]?.pagename),\r\n              pageid: new FormControl(pagesFromField[i]),\r\n              // pageAccess: new FormControl('3'),\r\n              pageAccessCreate: new FormControl(false),\r\n              pageAccessRead: new FormControl(true),\r\n              pageAccessUpdate: new FormControl(false),\r\n              pageAccessDelete: new FormControl({ value: false, disabled: pageName[0]?.activeVersion?.templatejson }),\r\n              pageAccessNone: new FormControl(false),\r\n              validity: new FormControl('0'),\r\n              condition: new FormControl('always'),\r\n              fallbackTo: new FormControl('n'),\r\n              accessdata: new FormControl('all')\r\n            })\r\n          );\r\n      } else {\r\n        accessArray.push(\r\n          new FormGroup({\r\n            pageName: new FormControl(pageName[0]?.pagename),\r\n            pageid: new FormControl(pagesFromField[i]),\r\n            // pageAccess: new FormControl(pageAccessValue ? pageAccessValue : '2'),\r\n            pageAccessCreate: new FormControl(pageAccessValue?.pageAccessCreate || false),\r\n            pageAccessRead: new FormControl(this.getPageReadAccess(pageAccessValue)),\r\n            pageAccessUpdate: new FormControl(pageAccessValue?.pageAccessUpdate || false),\r\n            pageAccessDelete: new FormControl({ value: pageAccessValue?.pageAccessDelete || false, disabled: pageName[0]?.activeVersion?.templatejson }),\r\n            pageAccessNone: new FormControl(pageAccessValue.pageAccessNone || false),\r\n            validity: new FormControl((pageAccessValue?.validity && String(pageAccessValue?.validity)) || '0'),\r\n            condition: new FormControl((pageAccessValue?.condition && pageAccessValue?.condition) || 'always'),\r\n            fallbackTo: new FormControl((pageAccessValue?.condition && pageAccessValue?.fallbackTo) || 'n'),\r\n            accessdata: new FormControl(pageAccessValue?.accessData || 'all')\r\n          })\r\n        );\r\n      }\r\n    }\r\n    return accessArray;\r\n  }\r\n\r\n  getPageReadAccess(pageAccessValue) {\r\n    if (pageAccessValue?.pageAccessCreate || pageAccessValue?.pageAccessUpdate || pageAccessValue?.pageAccessDelete) {\r\n      return { value: true, disabled: true };\r\n    }\r\n    else {\r\n      return pageAccessValue.pageAccessRead || false;\r\n    }\r\n  }\r\n\r\n  getFieldReadAccess(fieldAccessValue) {\r\n    if ((!fieldAccessValue?.c || !fieldAccessValue?.u || !fieldAccessValue?.r) && !fieldAccessValue?.hide) {\r\n      return true;\r\n    }\r\n    else {\r\n      return fieldAccessValue.r || false;\r\n    }\r\n  }\r\n\r\n  getReadFormAccess(pageAccess) {\r\n    if (pageAccess?.c || pageAccess?.u || pageAccess?.d) {\r\n      return { value: true, disabled: true };\r\n    }\r\n    else {\r\n      return pageAccess.r || false;\r\n    }\r\n  }\r\n\r\n  checkFieldLevelExist(fieldLevelExist, savedPageAccessPatching, pagesFromField, existingValue, i) {\r\n    let pageAccessValue: any;\r\n    if (fieldLevelExist?.length && savedPageAccessPatching) {\r\n      pageAccessValue = this.getMostFrequentEle(\r\n        fieldLevelExist?.filter(ele => (ele.pageId = pagesFromField[i]))?.map(e => (e.access ? Number(e.access) : 0))\r\n      );\r\n    } else {\r\n      pageAccessValue = existingValue?.find(ele => ele.pageid === pagesFromField[i]);\r\n    }\r\n    return pageAccessValue;\r\n  }\r\n  // This function for field level access\r\n  getAccess(access, fieldPageLevel) {\r\n    let accessField: any;\r\n    if (fieldPageLevel.length > 0) {\r\n      accessField = {\r\n        'c': access?.c,\r\n        'r': this.getFieldReadAccess(access),\r\n        'u': access?.u,\r\n        'hide': access?.hide\r\n      }\r\n    }\r\n    else {\r\n      accessField = {\r\n        'r': (!access?.hide && !access?.r) ? true : access.r,\r\n        'hide': access?.hide\r\n      }\r\n    }\r\n\r\n    return accessField;\r\n  }\r\n\r\n  getOrganizationPage(orgId: any) {\r\n    return this.httpService.get(AccessManagementConfig.EndPoint.Organization.getOrganization.replace('{orgId}', orgId));\r\n  }\r\n\r\n  getAssetByPageId(pId: any) {\r\n    return this.httpService.get(`${AccessManagementConfig.EndPoint.Asset.getPageAsset}/${pId}`);\r\n  }\r\n\r\n  createAsset(selectedAccess: any, selectedId: any, asset: any) {\r\n    let url: any;\r\n    if (selectedAccess === 'user') {\r\n      url = `org/user/${selectedId}`;\r\n    } else if (selectedAccess === 'role') {\r\n      url = `access-control/role/${selectedId}`;\r\n    } else {\r\n      url = `platform/page-designer/policygroup/${selectedId}`;\r\n    }\r\n    return this.httpService.post(`/${url}/${AccessManagementConfig.EndPoint.Asset.getAsset}`, asset);\r\n  }\r\n\r\n  updateAssetOnDeselect(selectedAccess: any, selectedId: any, asset: any) {\r\n    let url: any;\r\n    if (selectedAccess === 'user') {\r\n      url = `org/user/${selectedId}`;\r\n    } else if (selectedAccess === 'role') {\r\n      url = `access-control/role/${selectedId}`;\r\n    } else {\r\n      url = `platform/page-designer/policygroup/${selectedId}`;\r\n    }\r\n    return this.httpService.patch(`/${url}/${AccessManagementConfig.EndPoint.Asset.getAssetDeselect}`, asset);\r\n  }\r\n\r\n  getAssetById(selectedAccess: string, selectedId: any) {\r\n    let url: any;\r\n    if (selectedAccess === 'user') {\r\n      url = AccessManagementConfig.EndPoint.Asset.getUserAsset;\r\n    } else if (selectedAccess === 'role') {\r\n      url = AccessManagementConfig.EndPoint.Asset.getRoleAsset;\r\n    } else {\r\n      url = AccessManagementConfig.EndPoint.Asset.getPolicyGroupAsset;\r\n    }\r\n    return this.httpService.get(`${url}/${selectedId}`);\r\n  }\r\n\r\n  getPolicyGroupPage(policygroupid: any) {\r\n    return this.httpService.get(`/policygroup/${policygroupid}${AccessManagementConfig.EndPoint.Page.getPage}`);\r\n  }\r\n\r\n  getDynamicPage(selectedAccess: any, selectedId: any) {\r\n    let url: any;\r\n    if (selectedAccess === 'user') {\r\n      url = 'org/user';\r\n    } else if (selectedAccess === 'role') {\r\n      url = 'access-control/role';\r\n    } else {\r\n      url = 'platform/page-designer/policygroup';\r\n    }\r\n    return this.httpService.get(`/${url}/${selectedId}${AccessManagementConfig.EndPoint.Page.getPage}`);\r\n  }\r\n\r\n  updateDynamicPage(selectedAccess: any, selectedId: any, pageData: any) {\r\n    let url: any;\r\n    if (selectedAccess === 'user') {\r\n      url = 'org/user';\r\n    } else if (selectedAccess === 'role') {\r\n      url = 'access-control/role';\r\n    } else {\r\n      url = 'platform/page-designer/policygroup';\r\n    }\r\n    return this.httpService.put(`/${url}/${selectedId}${AccessManagementConfig.EndPoint.Page.getPage}`, pageData);\r\n  }\r\n\r\n  createAccess(fieldLevelAccess: boolean, accessBy: string, payload: any, userId: any, roleId: any, policyId: any) {\r\n    let url: any;\r\n    const createUrl = fieldLevelAccess\r\n      ? AccessManagementConfig.EndPoint.Asset.getAsset\r\n      : AccessManagementConfig.EndPoint.Page.getPage;\r\n    // check only policy group\r\n    if (accessBy === '3') {\r\n      url = `${AccessManagementConfig.EndPoint.PolicyGroup.getPolicyGroup}${policyId ? policyId : '0'}${createUrl}`;\r\n    }\r\n    // check persona with policy group\r\n    if (accessBy === '2') {\r\n      url = `${AccessManagementConfig.EndPoint.Role.getRole}${roleId ? roleId : '0'}${createUrl}`;\r\n    }\r\n    // check user, persona with policy group\r\n    if (accessBy === '1') {\r\n      url = `${AccessManagementConfig.EndPoint.User.getUser}${userId ? userId : '0'}${createUrl}`;\r\n    }\r\n    return this.httpService.post(url, payload);\r\n  }\r\n\r\n  getApplicationAccess() {\r\n    return this.httpService.get('/applicationaccess/');\r\n  }\r\n\r\n  checkObjectType(schema: string, table: string) {\r\n    return this.httpService.get(`${DataBaseConfig.EndPoint.Database.checkObjectType}/${schema}/${table}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AccessManagementConfig } from '../urls/access-management-url.config';\r\nimport { DataStoreService } from '../service/data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessManagementCommonService {\r\n  private urlData: any;\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n\r\n  set clickableData(data: any) {\r\n    this.urlData = data;\r\n  }\r\n  get clickableData() {\r\n    return this.urlData;\r\n  }\r\n\r\n  getUserList(orgid) {\r\n    return this.httpService.get(AccessManagementConfig.EndPoint.User.getUserorgList + orgid);\r\n  }\r\n\r\n  getPolicyGroupList(orgid) {\r\n    return this.httpService.get(\r\n      AccessManagementConfig.EndPoint.PolicyGroup.getPolicyGroupList.replace('{organizationid}', String(orgid))\r\n    );\r\n  }\r\n\r\n  getRoleList(orgid) {\r\n    return this.httpService.get(AccessManagementConfig.EndPoint.Role.getRoleList.replace('{orgid}', String(orgid)));\r\n  }\r\n\r\n  getOrganizationList() {\r\n    return this.httpService.get(AccessManagementConfig.EndPoint.Organization.getOrganizationList);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n\r\n@Directive({\r\n  selector: '[fieldKey]'\r\n})\r\nexport class PermissionDirective implements AfterViewInit {\r\n  @Input() fieldKey!: string;\r\n  permissions: any;\r\n  constructor(\r\n    private readonly renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private dataStore: PermissionStore\r\n  ) {\r\n  }\r\n  ngAfterViewInit() {\r\n    const permissions =  this.dataStore.state;\r\n     if (permissions) {\r\n      if (!permissions[this.fieldKey]) {\r\n        const template = this.elementRef.nativeElement;\r\n        if (template.tagName === 'A') {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.href = 'javascript:void(0);';\r\n            r['disabled'] = true;\r\n            r.className = template.className;\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else if (\r\n          template.tagName === 'P-MULTISELECT' ||\r\n          template.tagName === 'P-DROPDOWN' ||\r\n          template.tagName === 'P-CHECKBOX' ||\r\n          template.tagName === 'P-TREESELECT' ||\r\n          template.tagName === 'P-RADIOBUTTON' ||\r\n          template.tagName === 'P-CALENDAR'\r\n        ) {\r\n          if (template) {\r\n            const r = document.createElement(this.elementRef.nativeElement.tagName.toLowerCase());\r\n            r.innerHTML = template.innerHTML;\r\n            r.className = template.className;\r\n            r.className += ' p-disabled';\r\n            this.elementRef.nativeElement.parentNode.replaceChild(r, template);\r\n          }\r\n        } else {\r\n          this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', 'true');\r\n          const childInputNodes = this.elementRef.nativeElement.querySelectorAll(\r\n            'input, select, textarea, button, a, ng-select, div, lable'\r\n          );\r\n          childInputNodes.forEach((elem: any) => {\r\n            this.renderer.setAttribute(elem, 'disabled', 'true');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../@core/service/auth.service';\r\nimport { AccessManagementCommonService } from '../../../@core/urls/access-management-common.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataStoreService } from '../../../@core/service/data-store.service';\r\nimport { RBACINFO } from '../../../@core/urls/rbac-url.config';\r\n@Component({\r\n  selector: 'app-manage-access-radio',\r\n  templateUrl: './manage-access-radio.component.html',\r\n  styleUrls: ['./manage-access-radio.component.scss']\r\n})\r\nexport class ManageAccessRadioComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  rbacForm: FormGroup;\r\n  userList: any[] = [];\r\n  policyGroupData: any[] = [];\r\n  roleAddedData: any[] = [];\r\n  userDropDown = false;\r\n  roleDropDown = false;\r\n  policyDropDown = false;\r\n  @Output() accessBy = new EventEmitter<any>();\r\n  @Output() policyDropdown = new EventEmitter<any>();\r\n  @Output() roleDropdown = new EventEmitter<any>();\r\n  @Output() userDropdown = new EventEmitter<any>();\r\n  @Output() dropDownSelectedValues = new EventEmitter<any>();\r\n  @Input() reloadForm: boolean;\r\n  userDropdownSettings = {};\r\n  roleDropdownSettings = {};\r\n  policyDropdownSettings = {};\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  environment: any;\r\n  RBACORG: RBACINFO = new RBACINFO();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public cdRef: ChangeDetectorRef,\r\n    public accessManagementService: AccessManagementCommonService,\r\n    private _storeservice: DataStoreService,\r\n    // private authService: AuthService\r\n  ) {\r\n    // this.orgSubs = this.authService.orgInfo.subscribe(o => {\r\n    //   this.orgId = o;\r\n    //   console.log(this.orgId, 'manageaccessradio comp');\r\n    //   if (this.orgId) {\r\n    //     this.loadDropdowns();\r\n    //   }\r\n    // });\r\n    // this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\r\n    //   if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n    //     this.RBACORG = res['RBACORG'];\r\n    //     console.log(this.RBACORG, 'RBACORG Event Scheduler');\r\n    //     this.environment = this.RBACORG['environment'];\r\n    //     this.orgId = parseInt(this.RBACORG['orgID']);\r\n    //     if(this.environment){\r\n    //       this.loadDropdowns();\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n    this.userDropdownSettings = {\r\n      singleSelection: false,\r\n      text: 'Select User',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      enableSearchFilter: true,\r\n      labelKey: 'displayname',\r\n      searchBy: ['displayname']\r\n    };\r\n    this.roleDropdownSettings = {\r\n      singleSelection: false,\r\n      text: 'Select Persona',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      enableSearchFilter: true,\r\n      labelKey: 'name',\r\n      searchBy: ['name']\r\n    };\r\n    this.policyDropdownSettings = {\r\n      singleSelection: false,\r\n      text: 'Select Policy',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      enableSearchFilter: true,\r\n      labelKey: 'policygroupname',\r\n      searchBy: ['policygroupname']\r\n    };\r\n    this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        console.log(this.RBACORG, 'RBACORG Event Scheduler');\r\n        this.environment = this.RBACORG['environment'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        if(this.environment){\r\n          this.loadDropdowns();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n  ngAfterViewChecked() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n  loadDropdowns() {\r\n    this.loadUsername();\r\n    this.getPersona();\r\n    this.getPolicyGroup();\r\n  }\r\n\r\n  loadForm() {\r\n    this.rbacForm = this.formBuilder.group({\r\n      id: new FormControl(null),\r\n      accessBy: new FormControl(null),\r\n      userId: new FormControl('', Validators.required),\r\n      policyId: new FormControl(null, Validators.required),\r\n      roleId: new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  loadUsername() {\r\n    this.accessManagementService.getUserList(this.orgId).subscribe(res => {\r\n      this.userList = res['data'] && res['data'].length ? res['data'] : [];\r\n      this.userList.forEach(a => (a.displayname = `${a.firstname} ${a.lastname}`));\r\n      this.userDropdown.emit(this.userList);\r\n    });\r\n  }\r\n\r\n  getPolicyGroup() {\r\n    this.accessManagementService.getPolicyGroupList(this.orgId).subscribe(res => {\r\n      this.policyGroupData = res['data'] && res['data'].length ? res['data'] : [];\r\n      this.policyDropdown.emit(this.policyGroupData);\r\n    });\r\n  }\r\n\r\n  getPersona() {\r\n    this.accessManagementService.getRoleList(this.orgId).subscribe(res => {\r\n      console.log(this.orgId);\r\n      this.roleAddedData = res['data'] && res['data'].length ? res['data'] : [];\r\n      this.roleDropdown.emit(this.roleAddedData);\r\n    });\r\n  }\r\n\r\n  showDorpdowns(id) {\r\n    if (id === '1') {\r\n      this.userDropDown = true;\r\n      this.roleDropDown = this.policyDropDown = false;\r\n    } else if (id === '2') {\r\n      this.userDropDown = false;\r\n      this.roleDropDown = true;\r\n      this.policyDropDown = false;\r\n    } else if (id === '3') {\r\n      this.userDropDown = this.roleDropDown = false;\r\n      this.policyDropDown = true;\r\n    }\r\n    this.accessBy.emit(id);\r\n    this.resetForm(id);\r\n  }\r\n\r\n  // edit functionalites based on policy group\r\n  getDataBasedOnPolicy() {\r\n    const policyids = this.rbacForm.get('policyId').value;\r\n    const roleIds = this.rbacForm.get('roleId').value;\r\n    const userIds = this.rbacForm.get('userId').value;\r\n    const selectedValue = {\r\n      userid: userIds ? userIds.map(key => key.id) : null,\r\n      roleid: roleIds ? roleIds.map(key => key.id) : null,\r\n      policyid: policyids ? policyids.map(key => key.id) : null,\r\n      from: 'policy'\r\n      };\r\n    if (this.rbacForm.get('roleId').value !== null || this.rbacForm.get('userId').value !== null) {\r\n      this.dropDownSelectedValues.emit(selectedValue);\r\n      return;\r\n    }\r\n    if (policyids.length) {\r\n      this.dropDownSelectedValues.emit(selectedValue);\r\n    } else {\r\n      this.resetForm('3');\r\n      this.rbacForm.get('accessBy').setValue('3');\r\n    }\r\n  }\r\n\r\n  getDataBasedOnRole() {\r\n    const roleIds = this.rbacForm.get('roleId').value;\r\n    const userIds = this.rbacForm.get('userId').value;\r\n    const policyIds = this.rbacForm.get('policyId').value;\r\n    const selectedValue = {\r\n      userid: userIds ? userIds.map(key => key.id) : null,\r\n      roleid: roleIds ? roleIds.map(key => key.id) : null,\r\n      policyid: policyIds ? policyIds.map(key => key.id) : null,\r\n      from: 'role'\r\n    };\r\n    if (this.rbacForm.get('userId').value !== null) {\r\n      this.dropDownSelectedValues.emit(selectedValue);\r\n      return;\r\n    }\r\n    if (roleIds.length) {\r\n      let existPolicyIds = [];\r\n      // loop the role ids\r\n      for (const roleId of roleIds) {\r\n        const roleData = this.roleAddedData.filter(key => key.id === roleId.id);\r\n        const getPolicyIds = roleData[0]['rolePolicyGroupConfigs'].map(pId => pId.policygroupid);\r\n        existPolicyIds.push(getPolicyIds);\r\n      }\r\n      const myNewArray = [].concat(...existPolicyIds);\r\n      const uniquePolicy = [...new Set(myNewArray)];\r\n      existPolicyIds = uniquePolicy;\r\n      // set policy group values\r\n      const pList = this.policyGroupData.filter(key => existPolicyIds.includes(key.id));\r\n      this.rbacForm.get('policyId').setValue(pList);\r\n      const policyIdValues = this.rbacForm.get('policyId').value;\r\n      selectedValue.roleid = roleIds ? roleIds.map(key => key.id) : null;\r\n      selectedValue.policyid = policyIdValues ? policyIdValues.map(key => key.id) : null;\r\n      this.dropDownSelectedValues.emit(selectedValue);\r\n    } else {\r\n      this.resetForm('2');\r\n      this.rbacForm.get('accessBy').setValue('2');\r\n    }\r\n  }\r\n\r\n  getRoleAndPolicyData() {\r\n    const userIds = this.rbacForm.get('userId').value;\r\n    if (userIds.length) {\r\n      let existPolicyIds = [];\r\n      let existRoleIds = [];\r\n      // loop the role ids\r\n      for (const userId of userIds) {\r\n        const userData = this.userList.filter(key => key.id === userId.id);\r\n        const getPolicyIds = userData[0]['policyGroupConfigs'].map(pId => pId.policygroupid);\r\n        existPolicyIds.push(getPolicyIds);\r\n        const getRoleIds = userData[0]['roleConfigs'].map(pId => pId.roleid);\r\n        existRoleIds.push(getRoleIds);\r\n      }\r\n      const myNewPolicyAry = [].concat(...existPolicyIds);\r\n      const uniquePolicy = [...new Set(myNewPolicyAry)];\r\n      existPolicyIds = uniquePolicy;\r\n      // set policy group values\r\n      const pList = this.policyGroupData.filter(key => existPolicyIds.includes(key.id));\r\n      this.rbacForm.get('policyId').setValue(pList);\r\n\r\n      const myNewRoleAry = [].concat(...existRoleIds);\r\n      const uniqueRole = [...new Set(myNewRoleAry)];\r\n      existRoleIds = uniqueRole;\r\n      // set role values\r\n      const rList = this.roleAddedData.filter(key => existRoleIds.includes(key.id));\r\n      this.rbacForm.get('roleId').setValue(rList);\r\n      const roleIds = this.rbacForm.get('roleId').value;\r\n      const policyIds = this.rbacForm.get('policyId').value;\r\n      const selectedValue = {\r\n        userid: userIds ? userIds.map(key => key.id) : null,\r\n        roleid: roleIds ? roleIds.map(key => key.id) : null,\r\n        policyid: policyIds ? policyIds.map(key => key.id) : null,\r\n        from: 'user'\r\n      };\r\n      this.dropDownSelectedValues.emit(selectedValue);\r\n    } else {\r\n      this.resetForm('1');\r\n      this.rbacForm.get('accessBy').setValue('1');\r\n    }\r\n  }\r\n\r\n  resetForm(id = null) {\r\n    this.rbacForm.reset();\r\n    if (id !== null) {\r\n      this.rbacForm.get('accessBy').setValue(id);\r\n      this.accessBy.emit(id);\r\n    }\r\n  }\r\n  getOrgPages(type) {\r\n    const roleIds = this.rbacForm.get('roleId').value;\r\n    const userIds = this.rbacForm.get('userId').value;\r\n    const policyIds = this.rbacForm.get('policyId').value;\r\n    let name: string;\r\n    if (roleIds) {\r\n      name = this.roleAddedData.filter(role => role.id === roleIds)[0].name;\r\n    }\r\n    else if (userIds) {\r\n      name = this.userList.filter(user => user.id === userIds)[0].name;\r\n    }\r\n    else {\r\n      name = this.policyGroupData.filter(policygroup => policygroup.id === policyIds)[0].policygroupname;\r\n    }\r\n\r\n    const selectedValue = {\r\n      userid: userIds,\r\n      roleid: roleIds,\r\n      policyid: policyIds,\r\n      from: type,\r\n      name: name,\r\n    };\r\n\r\n    this.dropDownSelectedValues.emit(selectedValue);\r\n  }\r\n}\r\n","<form [formGroup]=\"rbacForm\" class=\"manage-access-radio\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"strip_head toggleleft\">\r\n        <span class=\"report_head font-weight-bold\">Manage Access By</span>\r\n      </div>\r\n      <mat-radio-group formControlName=\"accessBy\">\r\n        <mat-radio-button value=\"3\" (click)=\"showDorpdowns('3')\" fieldKey=\"SETTINGS_PAG_ACC_ACCESS_POLICY_GROUP\">Policy\r\n          Group</mat-radio-button>\r\n        <mat-radio-button value=\"2\" (click)=\"showDorpdowns('2')\"\r\n          fieldKey=\"SETTINGS_PAG_ACC_ACCESS_ROLE\">Role</mat-radio-button>\r\n        <mat-radio-button value=\"1\" (click)=\"showDorpdowns('1')\" fieldKey=\"SETTINGS_PAG_ACC_ACCESS_USERNAME\">User\r\n          Name</mat-radio-button>\r\n      </mat-radio-group>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3 col-12 mt-3\" *ngIf=\"userDropDown\">\r\n      <p class=\"radio-title\">Select User\r\n        <span class=\"requiredfield text-danger\">*</span>\r\n      </p>\r\n      <p-dropdown inputId=\"role\" [options]=\"userList\" placeholder=\"Select User\" formControlName=\"userId\"\r\n        styleClass=\"w-100\" fieldKey=\"SETTINGS_PAG_ACC_ACCESS_USERNAME_USER\" optionLabel=\"displayname\" optionValue=\"id\"\r\n        [resetFilterOnHide]=\"true\" [filter]=\"true\" ariaFilterLabel=\"null\" (onChange)=\"getOrgPages('user')\">\r\n        <ng-template let-item pTemplate=\"selectedItem\">\r\n          <div pTooltip=\"{{item?.displayname}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{ item?.displayname }}\r\n          </div>\r\n        </ng-template>\r\n        <ng-template let-object pTemplate=\"item\">\r\n          {{ object.displayname }}\r\n        </ng-template>\r\n      </p-dropdown>\r\n      <div *ngIf=\"rbacForm.get('userId').errors\">\r\n        <div *ngIf=\"rbacForm.get('userId').invalid && rbacForm.get('userId').touched\" class=\"p-error block mt-1\">User selection is required </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3 col-12 mt-3\" *ngIf=\"roleDropDown\">\r\n      <p class=\"radio-title\">Select Role\r\n        <span class=\"requiredfield text-danger\">*</span>\r\n      </p>\r\n      <p-dropdown inputId=\"role\" [options]=\"roleAddedData\" placeholder=\"Select Role\" formControlName=\"roleId\"\r\n        fieldKey=\"SETTINGS_PAG_ACC_ACCESS_ROLE_ROLE\" styleClass=\"w-100\" optionLabel=\"name\" optionValue=\"id\"\r\n        [resetFilterOnHide]=\"true\" [filter]=\"true\" ariaFilterLabel=\"null\" (onChange)=\"getOrgPages('role')\">\r\n        <ng-template let-item pTemplate=\"selectedItem\">\r\n          <div pTooltip=\"{{item?.name}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{ item?.name }}</div>\r\n        </ng-template>\r\n        <ng-template let-object pTemplate=\"item\">\r\n          {{ object.name }}\r\n        </ng-template>\r\n      </p-dropdown>\r\n      <div *ngIf=\"rbacForm.get('roleId').errors\">\r\n        <div *ngIf=\"rbacForm.get('roleId').invalid && rbacForm.get('roleId').touched\" class=\"p-error block mt-1\">Role selection is required </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3 col-12 mt-3\" *ngIf=\"policyDropDown\">\r\n      <p class=\"radio-title\">Select Policy Group\r\n        <span class=\"requiredfield text-danger\">*</span>\r\n      </p>\r\n      <p-dropdown inputId=\"role\" [options]=\"policyGroupData\" placeholder=\"Select Policy Group\"\r\n        formControlName=\"policyId\" styleClass=\"w-100\" fieldKey=\"SETTINGS_PAG_ACC_ACCESS_POLICY_GROUP_POLICY\"\r\n        optionLabel=\"policygroupname\" optionValue=\"id\" [resetFilterOnHide]=\"true\" [filter]=\"true\" ariaFilterLabel=\"null\"\r\n        (onChange)=\"getOrgPages('policy')\">\r\n        <ng-template let-item pTemplate=\"selectedItem\">\r\n          <div pTooltip=\"{{item?.policygroupname}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{\r\n            item?.policygroupname }}</div>\r\n        </ng-template>\r\n        <ng-template let-object pTemplate=\"item\">\r\n          {{ object.policygroupname }}\r\n        </ng-template>\r\n      </p-dropdown>\r\n      <div *ngIf=\"rbacForm.get('policyId').errors\">\r\n        <div *ngIf=\"rbacForm.get('policyId').invalid && rbacForm.get('policyId').touched\" class=\"p-error block mt-1\">Policy Group selection is required </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n<br />\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Alert, AlertService, AlertType } from '../../@core/service/alert.service';\r\nconst DISPLAY_IN_SECONDS = 8;\r\n@Component({\r\n  // moduleId: module.id,\r\n  selector: 'app-alert',\r\n  templateUrl: 'alert.component.html',\r\n  styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (!alert) {\r\n        // clear alerts when an empty alert is received\r\n        this.alerts = [];\r\n        return;\r\n      }\r\n\r\n      // add alert to array\r\n      this.alerts.push(alert);\r\n      // remove alert after 5 seconds\r\n      setTimeout(() => this.removeAlert(alert), DISPLAY_IN_SECONDS * 1000);\r\n    });\r\n  }\r\n\r\n  removeAlert(alert: Alert) {\r\n    this.alerts = this.alerts.filter(x => x !== alert);\r\n  }\r\n\r\n  cssClass(alert: Alert) {\r\n    if (!alert) {\r\n      return;\r\n    }\r\n\r\n    // return css class based on alert type\r\n    switch (alert.type) {\r\n      case AlertType.Success:\r\n        return 'alert alert-success';\r\n      case AlertType.Error:\r\n        return 'alert alert-danger';\r\n      case AlertType.Info:\r\n        return 'alert alert-info';\r\n      case AlertType.Warning:\r\n        return 'alert alert-warning';\r\n    }\r\n  }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert-animate {{ cssClass(alert) }} alert-dismissable\">\r\n  {{ alert.message }}\r\n  <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n</div>\r\n","import { ChangeDetectorRef, Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription, forkJoin } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { AppConstants } from '../@core/constants/app-constants';\r\nimport { AlertService } from '../@core/service/alert.service';\r\nimport { AuthService } from '../@core/service/auth.service';\r\nimport { DataStoreService } from '../@core/service/data-store.service';\r\nimport { Asset } from '../@core/urls/access_management_datamodel';\r\nimport { PageAccessService } from '../@core/urls/page-access.service';\r\nimport { RBACINFO } from '../@core/urls/rbac-url.config';\r\nimport { ManageAccessRadioComponent } from '../@shared/common-components/manage-access-radio/manage-access-radio.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'lib-pageaccess',\r\n  templateUrl: './pageaccess.component.html',\r\n  styleUrls: ['./pageaccess.component.scss']\r\n})\r\nexport class PageaccessComponent implements OnInit {\r\n\r\n  rbacForm: FormGroup;\r\n  userList: any[] = [];\r\n  policyGroupData: any[] = [];\r\n  roleAddedData: any[] = [];\r\n  dataLevelAccess = false;\r\n  pageLevelAccess = false;\r\n  multiPageAccess = false;\r\n  fieldLevelAccess = false;\r\n  moduleList = [];\r\n  subModuleList = [];\r\n  pageData = [];\r\n  pagesList = [];\r\n  loadedPagesList = [];\r\n  selectedPageData = [];\r\n  fData = [];\r\n  moduleDropdownSettings = {};\r\n  submoduleDropdownSettings = {};\r\n  pageDropdownSettings = {};\r\n  pageAccessDropdownSettings = {};\r\n  fieldAccessDropdownSettings = {};\r\n  @ViewChild(ManageAccessRadioComponent) AddComponent;\r\n  fieldLevelClick = false;\r\n  editPage = false;\r\n  selectedFieldData: any[] = [];\r\n  organisationid: any;\r\n  existingSelectedFieldData: any[];\r\n  savedPageAccessPatching: boolean;\r\n  savedFieldPagesPatching: any[];\r\n  selectedPageLevelData: any[];\r\n  selectedPageAccessChanges = [];\r\n  isRunCond = true;\r\n  selectedAccess: string;\r\n  updatePage: boolean;\r\n  selectedId: number;\r\n  selectedName: string;\r\n  assetList: any;\r\n  policyGroupPages: Array<any> = [];\r\n  policyGroupRolePages: Array<any> = [];\r\n  selectedRole = '';\r\n  conditions: Array<any> = [];\r\n  permissions: Array<any> = [];\r\n  dataAccess: Array<any> = [];\r\n  showFieldValidity: boolean;\r\n  pageAccessService: PageAccessService;\r\n  orgSubs: Subscription;\r\n  orgId: any;\r\n  environment: any;\r\n  RBACORG: RBACINFO = new RBACINFO();\r\n  PERMISSION: any;\r\n  authService: AuthService;\r\n  pId: any;\r\n  fullArray: any;\r\n  mergedAsset: any;\r\n  httpService: any;\r\n  permissionUpdatedPages: Array<any> = [];\r\n  fieldPageLevel: [];\r\n  fieldLevelCheckCount: any;\r\n  pagelevelaccesssavedisable: boolean = true;\r\n  pagelevelaccesscount: any;\r\n  selectedPages: Array<number> = [];\r\n  previousSelection: Array<number> = [];\r\n  isPageDeselectSave: boolean = false;\r\n  deselectedItemIds: Array<number> = [];\r\n  isRemoveAllFields: boolean = false;\r\n  deselectAssetIds: Array<number> = [];\r\n  enablesave: boolean = true;\r\n  pagelevelaccesscountdisable: boolean = true;\r\n  showFieldGrid: boolean = true;\r\n  getPageList: boolean = false;\r\n  disabledPages: Array<number> = [];\r\n  oldPageAccessValues: any[] = [];\r\n  grantedPages: any[] = [];\r\n  filterText: string;\r\n  filteredItems: any[] = [];\r\n  selectedPageDataFilter: any;\r\n  additionalConditions: any;\r\n  @ViewChild('validationPopup', { static: false }) private validationPopup;\r\n  modalService: NgbModal;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private formBuilder: FormBuilder,\r\n    public cdRef: ChangeDetectorRef,\r\n    private _storeservice: DataStoreService,\r\n    private router: Router,\r\n    private alert: AlertService\r\n  ) {\r\n    this.pageAccessService = injector.get<PageAccessService>(PageAccessService);\r\n    this.authService = injector.get<AuthService>(AuthService);\r\n    this.modalService = injector.get<NgbModal>(NgbModal);\r\n    this.updatePage = false;\r\n    this.showFieldValidity = false;\r\n    this.conditions = [\r\n      {\r\n        name: 'Days',\r\n        key: 'days'\r\n      },\r\n      {\r\n        name: 'Always',\r\n        key: 'always'\r\n      }\r\n    ];\r\n    this.permissions = [\r\n      {\r\n        name: 'R',\r\n        key: 'r'\r\n      },\r\n      {\r\n        name: 'RW',\r\n        key: 'rw'\r\n      },\r\n      {\r\n        name: 'None',\r\n        key: 'n'\r\n      }\r\n    ];\r\n    this.dataAccess = [\r\n      {\r\n        name: 'All',\r\n        key: 'all'\r\n      },\r\n      {\r\n        name: 'Assigned',\r\n        key: 'asg'\r\n      },\r\n      {\r\n        name: 'Owner',\r\n        key: 'cb'\r\n      }\r\n    ];\r\n    this.fieldLevelCheckCount = [];\r\n    this.pagelevelaccesscount = [];\r\n    // this.orgSubs = this.authService.orgInfo.subscribe(org => {\r\n    //   this.orgId = org;\r\n    //   if (this.orgId) {\r\n    //     this.getOrganizationPage();\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.orgSubs = this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        console.log(this.RBACORG, 'RBACORG Event Scheduler');\r\n        this.environment = this.RBACORG['environment'];\r\n        this.orgId = parseInt(this.RBACORG['orgID']);\r\n        this.httpService = res['HTTPSERVICE']\r\n        if (this.environment) {\r\n          this.getOrganizationPage();\r\n          this.loadRbacForm();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.orgSubs.unsubscribe();\r\n  }\r\n  loadRbacForm() {\r\n    this.rbacForm = this.formBuilder.group({\r\n      id: new FormControl(null),\r\n      accessBy: new FormControl(null),\r\n      userid: new FormControl(''),\r\n      policyid: new FormControl(null),\r\n      roleid: new FormControl(null),\r\n      provideAccess: new FormControl(null),\r\n      pageAccess: new FormControl('2'),\r\n      validity: new FormControl(null),\r\n      accessdata: new FormControl(null),\r\n      module: new FormControl(null),\r\n      submodule: new FormControl(null),\r\n      pageList: new FormControl(null),\r\n      ppages: new FormControl(null),\r\n      fpages: new FormControl(null),\r\n      fieldLevelData: new FormArray([]),\r\n      pageLevelData: new FormArray([])\r\n    });\r\n  }\r\n\r\n  accessBy(evt) {\r\n    this.pagesList = [];\r\n    this.rbacForm.patchValue({ accessBy: evt });\r\n    this.resetForm(evt);\r\n    this.rbacForm.patchValue({ provideAccess: '1' });\r\n  }\r\n  userDropdown(evt) {\r\n    this.userList = evt;\r\n  }\r\n  roleDropdown(evt) {\r\n    this.roleAddedData = evt;\r\n  }\r\n  policyDropdown(evt) {\r\n    this.policyGroupData = evt;\r\n  }\r\n  dropDownSelectedValues(evt) {\r\n    this.disabledPages = [];\r\n    this.getPageList = true;\r\n    this.enablesave = false;\r\n    this.selectedRole = '';\r\n    this.updatePage = false;\r\n    this.selectedAccess = evt.from;\r\n    this.selectedName = evt.name;\r\n    this.filterText = '';\r\n    this.rbacForm.patchValue({ userid: evt.userid });\r\n    this.rbacForm.patchValue({ roleid: evt.roleid });\r\n    this.rbacForm.patchValue({ policyid: evt.policyid });\r\n    if (this.pagesList.length === 0) {\r\n      this.getOrganizationPage();\r\n    }\r\n    this.getSelectedPages();\r\n    if (evt.from === 'role') {\r\n      this.selectedRole = evt.roleid;\r\n    }\r\n  }\r\n\r\n  getOrganizationPage() {\r\n    if (this.orgId) {\r\n      this.pageAccessService.getOrganizationPage(this.orgId).subscribe(res => {\r\n        const data = res['data']['data'];\r\n        if (data && data?.length) {\r\n          this.pageData = data?.filter(a => a.activeVersion);\r\n          this.loadedPagesList = this.pageData.map(x => {\r\n            return {\r\n              id: x.activeVersion.pageid,\r\n              pagename: x.isEnable ? x.activeVersion.pagename : `${x.activeVersion.pagename} (Inactive)`,\r\n              isEnable: x.isEnable,\r\n              activeVersion: x.activeVersion,\r\n              disabled: false\r\n            };\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getFallbackPermission(fAccess) {\r\n    if (fAccess?.value?.pageAccess === '2' || fAccess?.value?.access === '2') {\r\n      return this.permissions.filter(a => a.key !== 'rw');\r\n    } else {\r\n      return this.permissions;\r\n    }\r\n  }\r\n\r\n  getSelectedPages(_selectedPages?: any, _pageConfig?: any, _assetconfig?: any) {\r\n    //this.policyGroupPages = [];\r\n    this.updatePage = false;\r\n    this.getPageList = true;\r\n    this.rbacForm.get('provideAccess').setValue(null);\r\n    if (this.selectedAccess === 'user') {\r\n      this.selectedId = this.rbacForm.getRawValue().userid;\r\n    } else if (this.selectedAccess === 'role') {\r\n      this.selectedId = this.rbacForm.getRawValue().roleid;\r\n    } else {\r\n      this.selectedId = this.rbacForm.getRawValue().policyid;\r\n      this.selectedAccess = 'policygroup';\r\n    }\r\n    if (!this.fieldLevelAccess && this.permissionUpdatedPages.length) {\r\n      this.getPageList = true;\r\n    }\r\n    this.getGrantedPages();\r\n  }\r\n\r\n  getGrantedPages() {\r\n    if (this.getPageList) {\r\n      this.pageAccessService.getDynamicPage(this.selectedAccess, this.selectedId).subscribe(res => {\r\n        this.grantedPages = [];\r\n        this.getPageList = false;\r\n        if (this.selectedAccess === 'role') {\r\n          this.grantedPages = res['data'].rolePages;\r\n          this.policyGroupPages = res['data'].policyGroupPages;\r\n          const selectedPages = this.checkExistingGrantedPolicyPages(this.grantedPages, this.policyGroupPages);\r\n          this.pagesList = [...this.loadedPagesList.map(page => {\r\n            return {\r\n              ...page,\r\n              disabled: this.disabledPages.some(id => id === page.id),\r\n            };\r\n          })];\r\n          // added this below line for bug OR-1338\r\n          // this.pagesList = this.pagesList.filter(e => !e.disabled);\r\n          const enablePages = selectedPages.filter(e => !e.disabled)\r\n          this.rbacForm.patchValue({ pageList: enablePages });\r\n        }\r\n        else if (this.selectedAccess === 'policygroup') {\r\n          this.grantedPages = res['data'].policyGroupPages;\r\n          this.policyGroupRolePages = res['data'].policyGroupRolePages;\r\n          const selectedPages = this.checkExistingGrantedRolePages(this.grantedPages, this.policyGroupRolePages);\r\n          this.pagesList = this.loadedPagesList.map(page => ({\r\n            ...page,\r\n            disabled: this.disabledPages.some(id => id === page.id),\r\n          }));\r\n          // added this below line for bug OR-1338\r\n          // this.pagesList = this.pagesList.filter(e => !e.disabled);\r\n          const enablePages = selectedPages.filter(e => !e.disabled)\r\n          this.rbacForm.patchValue({ pageList: enablePages });\r\n        }\r\n        else {\r\n          this.grantedPages = res['data'];\r\n          this.pagesList = this.loadedPagesList;\r\n          const pagesArrayIds = this.grantedPages.map(granted => granted.page.id);\r\n          const enablePages = this.pagesList.filter(page => pagesArrayIds.includes(page.id));\r\n          this.rbacForm.patchValue({ pageList: enablePages });\r\n        }\r\n        // this.loadPages([], null, [], [], this.assetList);\r\n        if (this.grantedPages.length) {\r\n          this.updatePage = true;\r\n          const pageData = this.grantedPages.filter(page => page.page).map(a => a.page);\r\n          pageData.forEach(x => (x.pagename = x?.activeVersion?.pagename || ''));\r\n          const uniquePageData = [...new Map(pageData.map(item => [item['id'], item])).values()];\r\n          const pageIDs = uniquePageData.map(a => a['id']);\r\n          const pageConfigData = this.grantedPages.map(a => {\r\n            return {\r\n              id: a.id,\r\n              // isfull: a.full,\r\n              hide: a.hide,\r\n              // isread: a.read,\r\n              // isreadwrite: a.readwrite,\r\n              accessdata: a.accessData,\r\n              conditions: a.conditions,\r\n              page: a.page,\r\n              c: a?.c,\r\n              r: a?.r,\r\n              u: a?.u,\r\n              d: a?.d\r\n            };\r\n          });\r\n          this.loadPages(uniquePageData, null, pageIDs, pageConfigData, this.assetList);\r\n          //this.onControlChanges();\r\n          this.oldPageAccessValues = this.rbacForm.get('pageLevelData').value.map(x => ({ ...x }));\r\n          // } else {\r\n          //   this.removeAllPopulatePage()\r\n        }\r\n        else {\r\n          this.loadPages([], null, [], [], this.assetList);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.updatePage = true;\r\n      const pageLevelData = this.rbacForm.get('pageLevelData') as FormArray;\r\n      if (pageLevelData && pageLevelData.controls.length > 0) {\r\n        pageLevelData.controls.forEach((control, index) => {\r\n          const currentId = control.value.pageid;\r\n          const originalEntry = this.oldPageAccessValues.find(o => o.pageid === currentId);\r\n          if (originalEntry) {\r\n            control.patchValue({\r\n              pageAccess: originalEntry.pageAccess,\r\n              fallbackTo: originalEntry.fallbackTo,\r\n              condition: originalEntry.condition,\r\n              validity: originalEntry.validity,\r\n              accessdata: originalEntry.accessdata\r\n            });\r\n          }\r\n          else {\r\n            control.patchValue({\r\n              pageAccess: control?.value?.pageAccess ? control.value.pageAccess : '2',\r\n              fallbackTo: 'n',\r\n              condition: 'always',\r\n              validity: '1',\r\n              accessdata: 'all'\r\n            });\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.pageLevelAccess = false;\r\n      }\r\n    }\r\n  }\r\n  onFilterPages(event: any) {\r\n    this.filterText = event.filter;\r\n  }\r\n  removeValue(e, item) {\r\n    e.stopPropagation();\r\n    const filteredPages = this.rbacForm.value.pageList.filter((s) => s.id !== Number(item.id));\r\n    this.rbacForm.patchValue({\r\n      pageList: filteredPages\r\n    })\r\n    this.populatePage('click', true, null)\r\n    this.selectedPageData = this.rbacForm.value.pageList.filter(page => !page.disabled);\r\n  }\r\n\r\n  onControlChanges() {\r\n    const pageLevelAccessFormControl = this.rbacForm.get('pageLevelData') as FormArray;\r\n    pageLevelAccessFormControl.controls.forEach(\r\n      control => {\r\n        control.valueChanges.pipe(\r\n          map((value) => {\r\n            console.log('Value Changed')\r\n            if (this.permissionUpdatedPages.some(pageId => pageId === value.pageid)) {\r\n              this.permissionUpdatedPages = this.permissionUpdatedPages.filter(pageId => pageId !== value.pageid)\r\n              this.permissionUpdatedPages.push(value.pageid)\r\n            }\r\n            else {\r\n              this.permissionUpdatedPages.push(value.pageid)\r\n            }\r\n          }\r\n          )\r\n        ).subscribe();\r\n      }\r\n    )\r\n  }\r\n\r\n  checkExistingGrantedPolicyPages(rolePages, policyGroupPages) {\r\n    let selectedPages;\r\n    const rolePageIds = rolePages.map(page => page.page.id);\r\n    selectedPages = this.loadedPagesList.filter(key => rolePageIds.includes(key.id));\r\n    for (const page of this.loadedPagesList) {\r\n      for (const policyGroups of policyGroupPages) {\r\n        for (const pages of policyGroups.policygrouppage) {\r\n          if (pages.page[0].id === page.id) {\r\n            this.disabledPages.push(pages.page[0].id);\r\n            selectedPages.push({ ...page, disabled: true })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return selectedPages;\r\n  }\r\n\r\n  checkExistingGrantedRolePages(policyPages, policyGroupRolePages) {\r\n    let selectedPages;\r\n    const policyPageIds = policyPages.map(page => page.page.id);\r\n    selectedPages = this.loadedPagesList.filter(key => policyPageIds.includes(key.id));\r\n    for (const page of this.loadedPagesList) {\r\n      for (const policyGroups of policyGroupRolePages) {\r\n        for (const pages of policyGroups.rolepage) {\r\n          if (pages.page[0].id === page.id) {\r\n            this.disabledPages.push(pages.page[0].id);\r\n            selectedPages.push({ ...page, disabled: true })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return selectedPages;\r\n  }\r\n  policyGroupCondition(data, policyGroup) {\r\n    const policyGroupPages = data?.data && data?.data.length ? data?.data : [];\r\n    const uniquePolicyGroupPages = [...new Map(policyGroupPages.map(item => [item['page']['id'], item])).values()];\r\n    this.policyGroupData = (this.policyGroupData.length && this.policyGroupData) || uniquePolicyGroupPages;\r\n    this.policyGroupPages.push({\r\n      name: this.policyGroupData.find(pgd => pgd.policygroup.id === policyGroup.policygroupid)?.policygroup\r\n        ?.policygroupname,\r\n      data: uniquePolicyGroupPages\r\n    });\r\n  }\r\n\r\n  getConfiguredAssetData(selectedAccess, selectedId) {\r\n    this.pageAccessService.getAssetById(selectedAccess, selectedId).subscribe((res: Asset[]) => {\r\n      this.assetList = res['data'].map(a => {\r\n        return {\r\n          pageid: this.pId,\r\n          _id: a?.id,\r\n          id: a?.assetid,\r\n          // isfull: a.full,\r\n          hide: a.hide,\r\n          // isread: a.read,\r\n          // isreadwrite: a.readwrite,\r\n          conditions: a.conditions,\r\n          accessdata: a.accessData,\r\n          c: a?.c,\r\n          r: a?.r,\r\n          u: a?.u,\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  loadPages(tempPageData, action, pageids, pageConfig, fieldConfig) {\r\n    this.pageData = tempPageData || [];\r\n    this.pageData.forEach(\r\n      a => (a.pagename = tempPageData.length && tempPageData.filter(b => b.id === a.id)[0]?.activeVersion?.pagename)\r\n    );\r\n    this.populatePage(action, true, null, pageConfig, fieldConfig, pageids);\r\n  }\r\n\r\n  populatePage(action: any, selected?: any, event?: any, pageConfig?: any, fieldConfig?: any, pageids?: any) {\r\n    // if (event) {\r\n    //   if (Array.isArray(event) && selected) {\r\n    //     this.permissionUpdatedPages = event.map(page => page.id)\r\n    //   }\r\n    //   else if (!Array.isArray(event) && selected) {\r\n    //     this.permissionUpdatedPages.push(event.id);\r\n    //   }\r\n    //   else {\r\n    //     this.permissionUpdatedPages = this.permissionUpdatedPages.filter(id => id !== event.id);\r\n    //   }\r\n    // }\r\n    //if (event && event.value.length) {\r\n    //this.rbacForm.patchValue({ pageList: event.value });\r\n    //}\r\n\r\n    if (event) {\r\n      const previousSelection = this.selectedPageData;\r\n      let currentSelection = event.value;\r\n\r\n      // push value in permissionupdatedPages when new page is selected\r\n      if (event?.itemValue?.id && !this.permissionUpdatedPages.some(pageId => pageId === event.itemValue.id)) {\r\n        this.permissionUpdatedPages.push(event.itemValue.id)\r\n      }\r\n\r\n      if (!(event.hasOwnProperty('itemValue') && event.itemValue)) {\r\n        //select-all or de-select-all action\r\n        let deSelectAllPages = false;\r\n        let selectAllPages = false;\r\n\r\n        //Edge Case 1: All page options are selected from the dropdown\r\n        if (currentSelection.length === this.pagesList.length) {\r\n          selectAllPages = true;\r\n        }\r\n        //Edge Case 2: All page options were previously selected and now all of then are getting de-selected\r\n        if (currentSelection.length === 0 && previousSelection.length === this.pagesList.length) {\r\n          deSelectAllPages = true;\r\n        }\r\n        //If Edge Case 1 or Edge Case 2 happen, then this.filterText needs to be cleared\r\n        if (selectAllPages || deSelectAllPages) {\r\n          this.filterText = '';\r\n        }\r\n        if (this.filterText && this.filterText !== '') {\r\n          this.filteredItems = this.pagesList.filter(item => item.pagename.toLowerCase().includes(this.filterText.toLowerCase()));\r\n          if (currentSelection.length === 0) {\r\n            //Edge Case 3.1 : Deselect-all in filtered view\r\n            currentSelection = this.selectedPageData.filter(\r\n              selectedItem => !this.filteredItems.some(filteredItem => filteredItem.id === selectedItem.id)\r\n            );\r\n          } else {\r\n            //Edge Case 3.2 :Select-all in filtered view\r\n            const newSelections = this.filteredItems.filter((item: any) => !this.selectedPageData.some((prevItem: any) => prevItem.id === item.id));\r\n            currentSelection = [...this.selectedPageData, ...newSelections];\r\n          }\r\n        }\r\n      }\r\n      this.rbacForm.patchValue({ pageList: currentSelection });\r\n    }\r\n\r\n\r\n    const pageIds = this.rbacForm.get('pageList').value;\r\n    const id = pageIds.map(key => key.id);\r\n    let provideAccess = this.rbacForm.get('provideAccess').value;\r\n\r\n    // Logic to handle the deselected item of Pages field\r\n    if (!selected) {\r\n      this.isPageDeselectSave = true;\r\n      const newlyDeselected = this.previousSelection.filter(item => !id.includes(item));\r\n      this.deselectedItemIds = [...new Set([...this.deselectedItemIds, ...newlyDeselected])];\r\n      const fpagesValue = this.rbacForm.get('fpages').value;\r\n      if (fpagesValue && newlyDeselected.includes(fpagesValue)) {\r\n        this.rbacForm.controls['fpages'].setValue(null);\r\n        this.showFieldGrid = false;\r\n      }\r\n    }\r\n    else {\r\n      this.isPageDeselectSave = false;\r\n    }\r\n    this.previousSelection = [...id];\r\n\r\n    if (id?.length) {\r\n      this.isRemoveAllFields = false;\r\n      if (!provideAccess) {\r\n        this.rbacForm.patchValue({ provideAccess: '1' });\r\n        this.pageLevelAccess = this.multiPageAccess = true;\r\n        this.fieldLevelAccess = false;\r\n        provideAccess = '1';\r\n      }\r\n      // Filter out pages with lookup keys \"RBTP\" or \"DR\"\r\n      const hideRBTPpageIds = this.grantedPages\r\n      .filter(item => item?.page?.lookup?.key === \"RBTP\" || item?.page?.lookup?.key === \"DR\")\r\n      .map(element => element.pageid);\r\n\r\n      // Filter out pages that are not disabled and not in the hideRBTPpageIds array\r\n      this.selectedPageDataFilter = pageIds.filter(page => !page.disabled && !hideRBTPpageIds.includes(page.id));\r\n\r\n      // Pageids from api\r\n      this.selectedPageData = pageIds.filter(page => !page.disabled);\r\n      this.pagelevelaccesscount = pageIds;\r\n      if ((this.pagelevelaccesscount || this.pagelevelaccesscount.length > 0) && !this.enablesave) {\r\n        this.pagelevelaccesscountdisable = false;\r\n      }\r\n\r\n      if (provideAccess === '1') {\r\n        this.rbacForm.patchValue({ ppages: pageIds });\r\n        if (fieldConfig?.length) {\r\n          this.selectedFieldData = this.pageAccessService.setSelectedFieldPage(\r\n            fieldConfig?.map(ele => {\r\n              return {\r\n                fieldName: ele?.description,\r\n                access: this.checkAccessType(ele),\r\n                assetid: ele?.assetid,\r\n                pageId: ele?.id\r\n              };\r\n            }),\r\n            this.selectedFieldData\r\n          );\r\n        }\r\n      } else if (provideAccess === '2' && pageids && pageids.length) {\r\n        if (fieldConfig !== null) {\r\n          const pList = this.pageData.filter(key => key.id === pageids[0]);\r\n          this.rbacForm.patchValue({ fpages: pList });\r\n          this.getFieldLevelList(action, fieldConfig);\r\n        } else {\r\n          const pId = this.selectedPageData.filter(ele => ele.id === pageIds[0]?.id);\r\n          this.rbacForm.patchValue({ fpages: pId });\r\n          this.getFieldLevelList(action, fieldConfig);\r\n        }\r\n      }\r\n      this.getPageLevelList(action, pageConfig);\r\n    } else {\r\n\r\n      if (action === 'click') {\r\n        this.pagelevelaccesscountdisable = false;\r\n      }\r\n      else {\r\n        this.pagelevelaccesscountdisable = true;\r\n      }\r\n      this.removeAllPopulatePage();\r\n      this.isRemoveAllFields = true;\r\n    }\r\n  }\r\n\r\n  removeAllPopulatePage() {\r\n    this.selectedPageData = [];\r\n    this.pageLevelAccess = false;\r\n    this.fieldLevelAccess = false;\r\n    this.multiPageAccess = true;\r\n    this.pagelevelaccesscount = [];\r\n    this.pagelevelaccesssavedisable = true;\r\n    this.filterText = '';\r\n    const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n    f.controls = [];\r\n    const p = <FormArray>this.rbacForm.controls['pageLevelData'];\r\n    p.controls = [];\r\n    this.rbacForm.get('ppages').setValue(null);\r\n    this.rbacForm.get('fpages').setValue(null);\r\n    this.rbacForm.get('provideAccess').setValue(null);\r\n    this.rbacForm.get('pageLevelData').setValue([]);\r\n    this.rbacForm.get('fieldLevelData').setValue([]);\r\n  }\r\n\r\n  showLevelAccess(id) {\r\n    const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n    if (f.getRawValue()?.length) {\r\n      this.selectedFieldData = this.pageAccessService.setSelectedFieldPage(f.getRawValue(), this.selectedFieldData);\r\n    }\r\n    f.controls = [];\r\n    const pageIds = this.rbacForm.get('pageList').value;\r\n    if (pageIds != null) {\r\n      if (id === '1') {\r\n        this.pageLevelAccess = true;\r\n        this.multiPageAccess = true;\r\n        this.fieldLevelAccess = false;\r\n        this.pagelevelaccesscount = pageIds;\r\n        if (pageIds?.length) {\r\n          this.pagelevelaccesssavedisable = false;\r\n          if (!this.rbacForm.get('ppages').value) {\r\n            this.rbacForm.get('ppages').patchValue(pageIds);\r\n          }\r\n        }\r\n        this.getSelectedPages();\r\n      } else if (id === '3') {\r\n        this.pageLevelAccess = false;\r\n        this.dataLevelAccess = true;\r\n        this.multiPageAccess = true;\r\n        this.fieldLevelAccess = false;\r\n        this.pagelevelaccesscount = pageIds;\r\n        if (pageIds?.length) {\r\n          this.pagelevelaccesssavedisable = false;\r\n          if (!this.rbacForm.get('ppages').value) {\r\n            this.rbacForm.get('ppages').patchValue(pageIds);\r\n          }\r\n        }\r\n        this.getSelectedPages();\r\n      } else {\r\n        this.getConfiguredAssetData(this.selectedAccess, this.selectedId);\r\n        this.pageLevelAccess = false;\r\n        this.multiPageAccess = false;\r\n        this.fieldLevelAccess = true;\r\n        this.fieldLevelCheckCount = [];\r\n        const fpages = this.rbacForm.get('fpages').value;\r\n        this.fPagesCheckLength(fpages, pageIds);\r\n        if (this.fieldLevelCheckCount && this.fieldLevelCheckCount?.length > 0) {\r\n          this.getFieldLevelList('click');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fPagesCheckLength(fpages, pageIds) {\r\n    if (!fpages || !fpages?.length) {\r\n      if (pageIds?.length) {\r\n        const p = [pageIds];\r\n        this.rbacForm.get('fpages').setValue(p);\r\n      }\r\n    }\r\n  }\r\n  async getPageLevelList(action = null, pageConfig = null) {\r\n    const accessArray = this.rbacForm.get('pageLevelData') as FormArray;\r\n    const formValue = this.rbacForm.getRawValue();\r\n    const pAccessId = this.rbacForm.get('pageList').value.filter(page => !page.disabled);\r\n    const pId = pAccessId?.map(key => key?.pageid || key?.id);\r\n    // first check exist page config\r\n    if (pageConfig !== null) {\r\n      // check selected value length\r\n      if (formValue.pageLevelData.length) {\r\n        accessArray.clear()\r\n      }\r\n      for (const pAccessElement of pAccessId) {\r\n        const id = pAccessElement.id;\r\n        const activeVersion = pAccessElement.activeVersion;\r\n        let tableSchemaConfig = activeVersion.tableschemaconfig;\r\n        tableSchemaConfig = typeof tableSchemaConfig === 'string' ? JSON.parse(tableSchemaConfig) : tableSchemaConfig;\r\n        const objectType = tableSchemaConfig?.objectType ? tableSchemaConfig.objectType : 'table';\r\n      }\r\n      const filterdPageConfigArray = pId\r\n        .map(id => pageConfig.find(key => key?.page?.id === id))\r\n        .filter(config => config !== undefined);\r\n      for (let i = 0; i < pId.length; i++) {\r\n        let setAccess = '';\r\n        setAccess = filterdPageConfigArray[i]\r\n        const pageName = this.loadedPagesList.filter(key => key.id === pId[i]);\r\n        this.getPageAccessArray(pId, i, accessArray, pageName, setAccess, pageConfig);\r\n      }\r\n    }\r\n    this.forActionClick(action, pId, accessArray);\r\n  }\r\n  getVersionAccessArray(existSelectedPageId, pId, i, accessArray, pageName, setAccess, pageConfig) {\r\n    const checkPid = existSelectedPageId.includes(pId[i]);\r\n    if (!checkPid) {\r\n      accessArray.push(\r\n        new FormGroup({\r\n          pageName: new FormControl(pageName[0]['activeVersion']['pagename']),\r\n          pageid: new FormControl(pId[i]),\r\n          pageAccess: new FormControl(setAccess),\r\n          validity: new FormControl((pageConfig[i]?.conditions && pageConfig[i].conditions.value) || '1'),\r\n          accessdata: new FormControl((pageConfig[i]?.accessdata && pageConfig[i].accessdata.value) || 'all'),\r\n          condition: new FormControl(pageConfig[i]?.conditions ? 'days' : 'always'),\r\n          fallbackTo: new FormControl((pageConfig[i]?.conditions && pageConfig[i].conditions.fallbackTo) || 'n')\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  getPageAccessArray(pId, i, accessArray, pageName, setAccess, pageConfig) {\r\n    accessArray.push(\r\n      new FormGroup({\r\n        pageName: new FormControl(pageName[0]['pagename']),\r\n        pageid: new FormControl(pId[i]),\r\n        // pageAccess: new FormControl(setAccess),\r\n        pageAccessCreate: new FormControl(setAccess.c || false),\r\n        pageAccessRead: new FormControl(this.pageAccessService.getReadFormAccess(setAccess)),\r\n        pageAccessUpdate: new FormControl(setAccess.u || false),\r\n        pageAccessDelete: new FormControl({ value: setAccess.d || false, disabled: pageName[0]?.activeVersion?.templatejson }),\r\n        pageAccessNone: new FormControl(setAccess.hide || false),\r\n        validity: new FormControl((setAccess.conditions && setAccess.conditions !== 'always' && setAccess.conditions.value) ? setAccess.conditions.value : '1'),\r\n        condition: new FormControl(setAccess.conditions && setAccess.conditions !== 'always' ? 'days' : 'always'),\r\n        fallbackTo: new FormControl((setAccess.conditions && setAccess.conditions !== 'always' && setAccess.conditions.fallbackTo) ? setAccess.conditions.fallbackTo : 'n'),\r\n        accessdata: new FormControl((setAccess.accessdata && setAccess.accessdata) || 'all'),\r\n      })\r\n    );\r\n  }\r\n\r\n  forActionClick(action, pId, accessArray) {\r\n    if (action === 'click') {\r\n      const existingValue = this.selectedPageLevelData?.length ? this.selectedPageLevelData : accessArray.getRawValue();\r\n      let pagesFromField = Array.from(new Set([...this.selectedFieldData].map(ele => ele.pageId))).filter(ele => ele);\r\n      if (pId?.length) {\r\n        pagesFromField = pId;\r\n      }\r\n      if (pagesFromField?.length) {\r\n        for (let i = 0; i < pagesFromField?.length; i++) {\r\n          const pageName = this.pagesList.filter(key => key.id === pagesFromField[i]);\r\n          if (!existingValue[i]) {\r\n            const id = pageName[0]?.id;\r\n            const activeVersion = pageName[0]?.activeVersion;\r\n            let tableSchemaConfig = activeVersion?.tableschemaconfig;\r\n            tableSchemaConfig = typeof tableSchemaConfig === 'string' ? JSON.parse(tableSchemaConfig) : tableSchemaConfig;\r\n            const objectType = tableSchemaConfig?.objectType ? tableSchemaConfig.objectType : 'table';\r\n          }\r\n        }\r\n        accessArray.controls = [];\r\n        accessArray.controls = this.pageAccessService.getAccessArrayOnClick(\r\n          pagesFromField,\r\n          this.pagesList,\r\n          this.selectedFieldData,\r\n          this.savedPageAccessPatching,\r\n          existingValue\r\n        );\r\n        this.savedPageAccessPatching = false;\r\n      }\r\n      else {\r\n        this.savedPageAccessPatching = false;\r\n        accessArray.controls = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAccessType(data: any): any {\r\n    if (data?.isfull) {\r\n      return '2';\r\n    } else if (data?.ishide) {\r\n      return '4';\r\n    } else if (data?.isread) {\r\n      return '3';\r\n    } else if (data?.isreadwrite) {\r\n      return '2';\r\n    }\r\n  }\r\n\r\n  getFieldLevelList(action = null, fieldConfig = null) {\r\n    const accessArray = this.rbacForm.get('fieldLevelData') as FormArray;\r\n    const formValue = this.rbacForm.getRawValue();\r\n\r\n    const pAccessId = this.rbacForm.get('fpages').value;\r\n    const pageIds = this.rbacForm.get('pageList').value;\r\n    // Fieldpagelevel is a variable is the length of the form page and all page other than grid page\r\n    this.fieldLevelCheckCount = pageIds.filter(x => (x.id === (pAccessId && pAccessId[0]?.id)) || x.id === pAccessId);\r\n    const fieldLevel = pageIds.filter(x => (x.id === (pAccessId && pAccessId[0]?.id)) || x.id === pAccessId);\r\n    this.fieldPageLevel = fieldLevel.filter(a => a.activeVersion !== null && a.activeVersion.gridconfig == null)\r\n      .map(a => {\r\n        return {\r\n          id: a.activeVersion.pageid,\r\n          pagename: a.activeVersion.pagename,\r\n          activeVersion: a.activeVersion\r\n        };\r\n      });\r\n    //console.log(this.fieldPageLevel);\r\n    this.checkFieldLevelCondition(fieldLevel, pAccessId);\r\n    this.fieldConfigCheck(fieldConfig, accessArray);\r\n    if (action === 'click') {\r\n      accessArray.controls = [];\r\n      this.pageAccessService.getAssetByPageId(this.pId).subscribe(res => {\r\n        const data = res['data'];\r\n        this.getAccessArrayCheck(data, formValue, accessArray);\r\n      });\r\n    }\r\n    this.showFieldGrid = true;\r\n  }\r\n\r\n  checkFieldLevelCondition(fieldLevel, pAccessId) {\r\n    if (fieldLevel.length > 0) {\r\n      this.showFieldValidity = fieldLevel[0].templatejson ? true : false;\r\n      this.fieldVersionCheck(fieldLevel, pAccessId);\r\n    } else {\r\n      this.showFieldValidity = pAccessId[0].templatejson ? true : false;\r\n      if (pAccessId[0]['version']) {\r\n        this.pId = pAccessId[0].pageid;\r\n      } else {\r\n        this.pId = pAccessId && pAccessId?.length ? pAccessId[0]['id'] : null;\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldVersionCheck(fieldLevel, pAccessId) {\r\n    if (fieldLevel[0]['version']) {\r\n      this.pId = fieldLevel[0].pageid;\r\n    } else {\r\n      if (Array.isArray(pAccessId)) {\r\n        this.pId = pAccessId && pAccessId?.length ? pAccessId[0]['id'] : null;\r\n      } else {\r\n        this.pId = pAccessId;\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldConfigCheck(fieldConfig, accessArray) {\r\n    if (fieldConfig !== null) {\r\n      accessArray.controls = [];\r\n      this.selectedFieldData = this.pageAccessService.setSelectedFieldPage(\r\n        fieldConfig?.map(ele => {\r\n          return {\r\n            fieldName: ele?.description,\r\n            access: this.checkAccessType(ele),\r\n            assetid: ele.assetid,\r\n            pageId: ele.id\r\n          };\r\n        }),\r\n        this.selectedFieldData\r\n      );\r\n      this.existingSelectedFieldData = [...this.selectedFieldData];\r\n      this.pageAccessService.getAssetByPageId(this.pId).subscribe(res => {\r\n        const data = res['data'];\r\n\r\n        this.mergedAsset = this.mergeAsset(data, this.assetList);\r\n        if (this.mergedAsset.includes(undefined)) {\r\n          this.mergedAsset = data;\r\n          if (this.mergedAsset.length !== data?.length) {\r\n            this.mergedAsset = data;\r\n          }\r\n        }\r\n        this.fData = data;\r\n        this.getMergedAsset(accessArray);\r\n      });\r\n    }\r\n  }\r\n\r\n  getMergedAsset(accessArray) {\r\n    for (let i = 0; i < this.mergedAsset.length; i++) {\r\n      const access = this.pageAccessService.getAccess(this.mergedAsset[i], this.fieldPageLevel);\r\n      accessArray.push(\r\n        new FormGroup({\r\n          fieldName: new FormControl(access[i]['displayname']),\r\n          //access: new FormControl('2'),\r\n          assetid: new FormControl(access[i]['id']),\r\n          pageId: new FormControl(this.pId),\r\n          validity: new FormControl(this.mergedAsset[i].conditions ? this.mergedAsset[i].conditions.value : '1'),\r\n          accessdata: new FormControl((this.mergedAsset[i]?.accessdata && this.mergedAsset[i].accessdata.value) || 'all'),\r\n          condition: new FormControl(this.mergedAsset[i].conditions ? 'days' : 'always'),\r\n          fallbackTo: new FormControl(this.mergedAsset[i].conditions ? this.mergedAsset[i].conditions.fallbackTo : ''),\r\n          fieldAccessCreate: new FormControl(access[i].c),\r\n          fieldAccessRead: new FormControl(access[i].r),\r\n          fieldAccessUpdate: new FormControl(access[i].u),\r\n          fieldAccessHide: new FormControl(access[i].hide),\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  getAccessArrayCheck(data, formValue, accessArray) {\r\n    if (data?.length) {\r\n      this.mergedAsset = this.assetList ? this.mergeAsset(data, this.assetList) : data;\r\n      this.checkMergedAsset(data);\r\n      if (formValue.fieldLevelData.length) {\r\n        this.selectedFieldData = this.pageAccessService.setSelectedFieldPage(\r\n          formValue.fieldLevelData,\r\n          this.selectedFieldData\r\n        );\r\n      }\r\n      let access = null;\r\n      if (this.savedFieldPagesPatching?.length) {\r\n        access = this.savedFieldPagesPatching.find(ele => ele.pageid === this.pId)?.access;\r\n        this.savedFieldPagesPatching = this.savedFieldPagesPatching.filter(ele => ele.pageid !== this.pId);\r\n      }\r\n      this.fData = data;\r\n      const existingFieldDataMap = {};\r\n      if (!access && this.selectedFieldData?.length) {\r\n        this.assetList\r\n          ?.filter(ele => ele.pageId === this.pId)\r\n          ?.forEach(ele => {\r\n            existingFieldDataMap[ele.assetid] = ele.access;\r\n          });\r\n      }\r\n      this.getAccessByAsset(accessArray);\r\n    } else {\r\n      accessArray.controls = [];\r\n    }\r\n  }\r\n\r\n  checkMergedAsset(data) {\r\n    if (this.mergedAsset.includes(undefined)) {\r\n      this.mergedAsset = data;\r\n      if (this.mergedAsset.length !== data.length) {\r\n        this.mergedAsset = data;\r\n      }\r\n    }\r\n  }\r\n\r\n  getAccessByAsset(accessArray) {\r\n    for (const asset of this.mergedAsset) {\r\n      const assetAccess = this.pageAccessService.getAccess(asset, this.fieldPageLevel);\r\n      accessArray.push(\r\n        new FormGroup({\r\n          fieldName: new FormControl(asset['displayname']),\r\n          //access: new FormControl(assetAccess ? assetAccess : '2'),\r\n          assetid: new FormControl(asset['id']),\r\n          pageId: new FormControl(this.pId),\r\n          fieldAccessCreate: new FormControl(assetAccess?.c || false),\r\n          fieldAccessRead: new FormControl(this.pageAccessService.getReadFormAccess(assetAccess)),\r\n          fieldAccessUpdate: new FormControl(assetAccess?.u || false),\r\n          fieldAccessHide: new FormControl(assetAccess?.hide || false),\r\n          validity: new FormControl(asset.conditions ? asset.conditions.value : '1'),\r\n          //accessdata: new FormControl((asset?.accessdata && asset.accessdata) || 'all'),\r\n          condition: new FormControl(asset.conditions ? 'days' : 'always'),\r\n          fallbackTo: new FormControl(asset.conditions ? asset.conditions.fallbackTo : '')\r\n        })\r\n      );\r\n    }\r\n  }\r\n  mergeAsset(arr1: any, arr2: any) {\r\n    return arr1.map((item, _i) => {\r\n      for (const value of arr2) {\r\n        if (item.id === value.id) {\r\n          return Object.assign({}, item, value);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  submitAlert() {\r\n    if (!this.fieldLevelAccess && this.permissionUpdatedPages.length) {\r\n      $('#submitAlert').modal('show');\r\n    } else {\r\n      this.saveRbac();\r\n      //this.pagelevelaccesssavedisable = true;\r\n      //this.pagelevelaccesscountdisable = true;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  saveRbac() {\r\n    this.getPageList = true;\r\n    const access = this.rbacForm.getRawValue();\r\n    const userid = this.rbacForm.get('userid').value;\r\n    const roleId = this.rbacForm.get('roleid').value;\r\n    const policyId = this.rbacForm.get('policyid').value;\r\n\r\n    if ((this.isPageDeselectSave && this.deselectedItemIds.length > 0) || this.isRemoveAllFields) {\r\n      let selectedId: any;\r\n      if (this.selectedAccess === 'user') {\r\n        selectedId = this.rbacForm.getRawValue().userid;\r\n      } else if (this.selectedAccess === 'role') {\r\n        selectedId = this.rbacForm.getRawValue().roleid;\r\n      } else {\r\n        selectedId = this.rbacForm.getRawValue().policyid;\r\n        this.selectedAccess = 'policygroup';\r\n      }\r\n\r\n      // Collect asset id's for all deselected page id's\r\n      const deselectedAssets = forkJoin(\r\n        this.deselectedItemIds.map(id =>\r\n          this.pageAccessService.getAssetByPageId(id).pipe(\r\n            map(res => res['data'].map(item => ({ assetid: item.id })))\r\n          )\r\n        )\r\n      );\r\n      // Make a single API call with all deselected asset IDs\r\n      deselectedAssets.pipe(\r\n        map(assetIdResponses => [].concat(...assetIdResponses))\r\n      ).subscribe(allDeselectedAssetIds => {\r\n        this.pageAccessService.updateAssetOnDeselect(this.selectedAccess, selectedId, allDeselectedAssetIds).subscribe(() => {\r\n          this.getConfiguredAssetData(this.selectedAccess, selectedId);\r\n          this.deselectedItemIds = [];\r\n        });\r\n      });\r\n    }\r\n\r\n    const fieldLevelData = access.fieldLevelData;\r\n    this.getFieldLevelByAsset(fieldLevelData);\r\n    let selectedId: any;\r\n    if (this.selectedAccess === 'user') {\r\n      selectedId = this.rbacForm.getRawValue().userid;\r\n    } else if (this.selectedAccess === 'role') {\r\n      selectedId = this.rbacForm.getRawValue().roleid;\r\n    } else {\r\n      selectedId = this.rbacForm.getRawValue().policyid;\r\n      this.selectedAccess = 'policygroup';\r\n    }\r\n    const pAccess = this.rbacForm.get('provideAccess').value;\r\n    if(pAccess === '2'){\r\n      this.pageAccessService.createAsset(this.selectedAccess, selectedId, this.fullArray).subscribe(_res => {\r\n        if (this.fieldLevelAccess) {\r\n          this.getConfiguredAssetData(this.selectedAccess, selectedId);\r\n          this.alert.success('Field Access Updated Successfully');\r\n        }\r\n      });\r\n    }\r\n    this.getPageLevelByArray(access.pageLevelData);\r\n\r\n    if (this.selectedAccess === 'policy') {\r\n      this.selectedAccess = 'policygroup';\r\n    }\r\n    if(pAccess === '1'){\r\n      this.pageAccessService.updateDynamicPage(this.selectedAccess, this.selectedId, this.fullArray).subscribe(\r\n        _res => {\r\n          this.permissionUpdatedPages = [];\r\n          if (!this.fieldLevelAccess) {\r\n            this.getSelectedPages();\r\n            this.alert.success('Access Updated Successfully');\r\n          }\r\n        },\r\n        _err => this.alert.error(AppConstants.errorMessage)\r\n      );\r\n    }\r\n\r\n    //if (this.updatePage) {\r\n    //  if (this.selectedAccess === 'policy') {\r\n    //    this.selectedAccess = 'policygroup';\r\n    //  }\r\n    //  this.pageAccessService.updateDynamicPage(this.selectedAccess, this.selectedId, this.fullArray).subscribe(\r\n    //    _res => {\r\n    //      this.permissionUpdatedPages = [];\r\n    //      if (!this.fieldLevelAccess) {\r\n    //        this.getSelectedPages();\r\n    //        this.alert.success('Access Updated Successfully');\r\n    //      }\r\n    //    },\r\n    //    _err => this.alert.error(AppConstants.errorMessage)\r\n    //  );\r\n    //} else {\r\n    //  this.pageAccessService\r\n    //    .createAccess(this.fieldLevelAccess, access.accessBy, this.fullArray, userid, roleId, policyId)\r\n    //    .subscribe(\r\n    //      _result => {\r\n    //        this.permissionUpdatedPages = [];\r\n    //        this.getSelectedPages();\r\n    //        this.alert.success('Access Saved Successfully');\r\n    //      },\r\n    //      _error => this.alert.error(AppConstants.errorMessage)\r\n    //    );\r\n    //}\r\n  }\r\n\r\n  getPageLevelByArray(pageLevelData) {\r\n    this.fullArray = pageLevelData.map(x => {\r\n      return {\r\n        page: x?.pageid,\r\n        overrideAssetPermissions: this.permissionUpdatedPages.some(pageId => pageId === x?.pageid) || false,\r\n        c: x?.pageAccessCreate || false,\r\n        r: x?.pageAccessRead || false,\r\n        u: x?.pageAccessUpdate || false,\r\n        d: x?.pageAccessDelete || false,\r\n        none: x?.pageAccessNone || false,\r\n        accessdata: x?.accessdata,\r\n        conditions:\r\n          x?.condition !== 'always'\r\n            ? {\r\n              attribute: 'created',\r\n              condition: 'lte',\r\n              value: x?.validity ? x.validity : null, //days, minutes, always\r\n              value_type: 'variable', //constant, property, variable\r\n              fallbackTo: x?.fallbackTo ? x.fallbackTo : null,\r\n              type: 'timestamp'\r\n            }\r\n            : x.condition\r\n      };\r\n    });\r\n  }\r\n\r\n  getFieldLevelByAsset(fieldLevelData) {\r\n    this.fullArray = fieldLevelData.map(x => {\r\n      const assetData = this.assetList?.filter(a => a.id === x.assetid && a);\r\n      return {\r\n        pageid: this.pId,\r\n        id: assetData ? assetData[0]?._id : null,\r\n        asset: x.assetid,\r\n        // readwrite: x?.access === '2' ? true : false,\r\n        // read: x?.access === '3' ? true : false,\r\n        // none: x?.access === '4' ? true : false,\r\n        // full: x?.access === '5' ? true : false,\r\n        c: x?.fieldAccessCreate,\r\n        r: x?.fieldAccessRead,\r\n        u: x?.fieldAccessUpdate,\r\n        none: x?.fieldAccessHide,\r\n        conditions:\r\n        x.condition !== 'always'\r\n          ?\r\n          {\r\n            attribute: 'created',\r\n            condition: 'lte',\r\n            value: x?.validity ? x.validity : null, //days, minutes, always\r\n            value_type: 'variable', //constant, property, variable\r\n            fallbackTo: x?.fallbackTo ? x.fallbackTo : null,\r\n            type: 'timestamp'\r\n          } : x.condition ,\r\n        //accessdata: x?.accessdata ? x.accessdata : null,\r\n      };\r\n    });\r\n  }\r\n  // edit functionalites based on policy group\r\n  setPolicyLevelPagePatching(pageConfig, assetconfig) {\r\n    const pageIds = pageConfig.map(key => key.pageid);\r\n    const selectedModules = [];\r\n    const uniquePage = [...new Set(pageIds)];\r\n    const selectedPages = uniquePage;\r\n    this.rbacForm.patchValue({ provideAccess: '1' });\r\n    this.pageLevelAccess = this.multiPageAccess = true;\r\n    this.fieldLevelAccess = false;\r\n    const m = this.rbacForm.get('module').value;\r\n    if (m !== '' && m !== null) {\r\n      const newModule = m.concat(selectedModules);\r\n      const uniqueNewModule = [...new Set(newModule)];\r\n      this.rbacForm.get('module').setValue(uniqueNewModule);\r\n    } else {\r\n      this.rbacForm.patchValue({ module: selectedModules });\r\n    }\r\n    this.getSelectedPages(selectedPages, pageConfig, assetconfig);\r\n  }\r\n\r\n  setPolicyLevelFieldPatching(pageConfig, assetconfig, from = null) {\r\n    const mKey = assetconfig.filter(\r\n      key => key.modulekey !== null && key.modulekey !== '' && key.isactive !== '' && key.isactive !== null\r\n    );\r\n    const mmkey = mKey.map(key => key.modulekey);\r\n    const modules = this.moduleList.filter(key => mmkey.includes(key.refKey));\r\n    const pageId = assetconfig.filter(key => key.pageid !== null);\r\n    const pageIds = pageId.map(key => key.pageid);\r\n    let selectedModules: any;\r\n    selectedModules = [...new Set(modules)];\r\n    const uniquePage = [...new Set(pageIds)];\r\n    const selectedPages = uniquePage;\r\n    this.rbacForm.patchValue({ provideAccess: '2' });\r\n    this.pageLevelAccess = this.multiPageAccess = false;\r\n    this.fieldLevelAccess = true;\r\n    if (from === 'field') {\r\n      const m = this.rbacForm.get('module').value;\r\n      if (m !== '') {\r\n        const mk = selectedModules.concat(m);\r\n        selectedModules = mk;\r\n        this.rbacForm.patchValue({ module: selectedModules });\r\n      }\r\n      const sm = this.rbacForm.get('submodule').value;\r\n      if (sm !== '') {\r\n        this.rbacForm.patchValue({ module: selectedModules });\r\n      }\r\n    } else {\r\n      this.rbacForm.patchValue({ module: selectedModules });\r\n    }\r\n    this.getSelectedPages(selectedPages, pageConfig, assetconfig);\r\n  }\r\n\r\n  getDataBasedOnPolicy(from = null) {\r\n    const policyids = this.rbacForm.get('policyid').value.map(a => a.id);\r\n    if (policyids.length) {\r\n      this.editPage = true;\r\n      this.pageLevelAccess = false;\r\n      this.fieldLevelAccess = false;\r\n      const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n      f.controls = [];\r\n      const p = <FormArray>this.rbacForm.controls['pageLevelData'];\r\n      p.controls = [];\r\n      for (let j = 0; j < policyids.length; j++) {\r\n        const pageConfig = this.policyGroupData.filter(key => key.id === policyids[j]);\r\n        if (from === 'field') {\r\n          this.editPage = false;\r\n          if (pageConfig[0].assetConfigs.length) {\r\n            this.setPolicyLevelFieldPatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs, from);\r\n          } else if (policyids.length === j + 1) {\r\n            this.showLevelAccess('2');\r\n          }\r\n        } else {\r\n          this.getCheckPageConfig(pageConfig);\r\n        }\r\n      }\r\n    } else {\r\n      this.resetForm('3');\r\n      this.rbacForm.patchValue({ accessBy: '3' });\r\n    }\r\n  }\r\n\r\n  getCheckPageConfig(pageConfig) {\r\n    if (pageConfig[0].pageConfigs.length) {\r\n      this.fieldLevelClick = true;\r\n      this.setPolicyLevelPagePatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs);\r\n    } else if (pageConfig[0].assetConfigs.length) {\r\n      const pAccess = this.rbacForm.get('provideAccess').value;\r\n      if (pAccess !== '1') {\r\n        this.setPolicyLevelFieldPatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs);\r\n      }\r\n    }\r\n  }\r\n\r\n  getDataBasedOnRole(from = null) {\r\n    const roleIds = this.rbacForm.get('roleid').value.map(a => a.id);\r\n    if (roleIds.length) {\r\n      this.editPage = true;\r\n      this.pageLevelAccess = false;\r\n      this.fieldLevelAccess = false;\r\n      const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n      f.controls = [];\r\n      const p = <FormArray>this.rbacForm.controls['pageLevelData'];\r\n      p.controls = [];\r\n      // loop the role ids\r\n      for (let j = 0; j < roleIds.length; j++) {\r\n        const pageConfig = this.roleAddedData.filter(key => key.id === roleIds[j]);\r\n        this.getOrgId(pageConfig);\r\n        if (from === 'field') {\r\n          this.editPage = false;\r\n          if (pageConfig[0].assetConfigs.length) {\r\n            this.setPolicyLevelFieldPatching(pageConfig[0].rolePolicyGroupConfigs, pageConfig[0].assetConfigs, from);\r\n          } else if (roleIds.length === j + 1) {\r\n            this.showLevelAccess('2');\r\n          }\r\n        } else {\r\n          this.getCheckRolePolicyGroup(pageConfig);\r\n        }\r\n      }\r\n    } else {\r\n      this.resetForm('2');\r\n      this.rbacForm.patchValue({ accessBy: '2' });\r\n    }\r\n  }\r\n\r\n  getOrgId(pageConfig) {\r\n    if (pageConfig?.length) {\r\n      this.organisationid = pageConfig[0]?.organizationid;\r\n    }\r\n  }\r\n\r\n  getCheckRolePolicyGroup(pageConfig) {\r\n    if (pageConfig[0].rolePolicyGroupConfigs.length) {\r\n      this.setPolicyLevelPagePatching(pageConfig[0].rolePolicyGroupConfigs, pageConfig[0].assetConfigs);\r\n    } else if (pageConfig[0].assetConfigs.length) {\r\n      const pAccess = this.rbacForm.get('provideAccess').value;\r\n      if (pAccess !== '1') {\r\n        this.setPolicyLevelFieldPatching(pageConfig[0].rolePolicyGroupConfigs, pageConfig[0].assetConfigs);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRoleAndPolicyData(from = null) {\r\n    const userIds = this.rbacForm.get('userid').value.map(a => a.id);\r\n    if (userIds.length) {\r\n      this.editPage = true;\r\n      this.pageLevelAccess = false;\r\n      this.fieldLevelAccess = false;\r\n      const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n      f.controls = [];\r\n      const p = <FormArray>this.rbacForm.controls['pageLevelData'];\r\n      p.controls = [];\r\n      // loop the role ids\r\n      for (let j = 0; j < userIds.length; j++) {\r\n        const pageConfig = this.userList.filter(key => key.id === userIds[j]);\r\n        if (from === 'field') {\r\n          this.editPage = false;\r\n          if (pageConfig[0].assetConfigs.length) {\r\n            this.setPolicyLevelFieldPatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs, from);\r\n          } else if (userIds.length === j + 1) {\r\n            this.showLevelAccess('2');\r\n          }\r\n        } else {\r\n          this.getCheckPolicyLevelField(pageConfig);\r\n        }\r\n      }\r\n    } else {\r\n      this.resetForm('1');\r\n      this.rbacForm.patchValue({ accessBy: '1' });\r\n    }\r\n  }\r\n  getCheckPolicyLevelField(pageConfig) {\r\n    if (pageConfig[0].pageConfigs.length) {\r\n      this.setPolicyLevelPagePatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs);\r\n    } else if (pageConfig[0].assetConfigs.length) {\r\n      const pAccess = this.rbacForm.get('provideAccess').value;\r\n      if (pAccess !== '1') {\r\n        this.setPolicyLevelFieldPatching(pageConfig[0].pageConfigs, pageConfig[0].assetConfigs);\r\n      }\r\n    }\r\n  }\r\n\r\n  resetForm(id = null, clear = null) {\r\n    this.subModuleList = this.pageData = this.selectedPageData = [];\r\n    this.fieldLevelCheckCount = [];\r\n    this.pagelevelaccesscount = [];\r\n    this.pagelevelaccesssavedisable = true;\r\n    this.pageLevelAccess = this.fieldLevelAccess = false;\r\n    this.enablesave = true;\r\n    this.pagelevelaccesscountdisable = true;\r\n    const f = <FormArray>this.rbacForm.controls['fieldLevelData'];\r\n    f.controls = [];\r\n    const p = <FormArray>this.rbacForm.controls['pageLevelData'];\r\n    p.controls = [];\r\n    this.policyGroupPages = [];\r\n    this.selectedAccess = '';\r\n    this.selectedName = '';\r\n    this.permissionUpdatedPages = [];\r\n    this.filterText = '';\r\n    this.rbacForm.reset();\r\n    if (id !== null) {\r\n      this.rbacForm.patchValue({ accessBy: id });\r\n    } else if (clear !== null) {\r\n      this.AddComponent.resetForm();\r\n    }\r\n  }\r\n\r\n  redirectList() {\r\n    this.router.navigateByUrl('/pages/rbac/page-access/page-access-list');\r\n  }\r\n\r\n  saveAccessPatching() {\r\n    this.savedFieldPagesPatching = [];\r\n    this.savedPageAccessPatching = false;\r\n    if (this.rbacForm.get('provideAccess')?.value === '2') {\r\n      this.savedPageAccessPatching = true;\r\n    } else {\r\n      const ppId = this.rbacForm.get('pageLevelData').value;\r\n      this.savedFieldPagesPatching = [];\r\n      if (ppId?.length) {\r\n        ppId.forEach(element => {\r\n          const selectedObj = { pageid: element?.pageid, access: element?.pageAccess };\r\n          this.savedFieldPagesPatching.push(selectedObj);\r\n        });\r\n      }\r\n    }\r\n    this.alert.success('Temporarily saved Data for changes');\r\n  }\r\n\r\n  changeFieldAccess(_event: any, index: number, selectedPrivilege: string) {\r\n    const accessArray = this.rbacForm.get('pageLevelData') as FormArray;\r\n    const fieldLevelDataControl = this.rbacForm.get('fieldLevelData') as FormArray;\r\n    const selectedValue = fieldLevelDataControl.at(index).value;\r\n    if (!this.fieldPageLevel?.length) {\r\n      if (selectedPrivilege === 'r') {\r\n        selectedValue.fieldAccessRead ?\r\n          fieldLevelDataControl.controls[index].get('fieldAccessHide').patchValue(false) :\r\n          fieldLevelDataControl.controls[index].get('fieldAccessHide').patchValue(true);\r\n        ;\r\n      }\r\n      else {\r\n        selectedValue.fieldAccessHide ?\r\n          fieldLevelDataControl.controls[index].get('fieldAccessRead').patchValue(false) :\r\n          fieldLevelDataControl.controls[index].get('fieldAccessRead').patchValue(true);\r\n        ;\r\n      }\r\n    }\r\n    else {\r\n      if (selectedPrivilege === 'c' || selectedPrivilege === 'u') {\r\n        fieldLevelDataControl.controls[index].get('fieldAccessRead').patchValue(true);\r\n        fieldLevelDataControl.controls[index].get('fieldAccessHide').patchValue(false);\r\n        selectedValue.fieldAccessCreate || selectedValue.fieldAccessUpdate\r\n          ? fieldLevelDataControl.controls[index].get('fieldAccessRead').disable()\r\n          : fieldLevelDataControl.controls[index].get('fieldAccessRead').enable();\r\n      }\r\n      else if (selectedPrivilege === 'r') {\r\n        selectedValue.fieldAccessRead ?\r\n          fieldLevelDataControl.controls[index].get('fieldAccessHide').patchValue(false) :\r\n          fieldLevelDataControl.controls[index].get('fieldAccessHide').patchValue(true);\r\n        ;\r\n      }\r\n      else {\r\n        selectedValue.fieldAccessHide ?\r\n          fieldLevelDataControl.controls[index].get('fieldAccessRead').patchValue(false) :\r\n          fieldLevelDataControl.controls[index].get('fieldAccessRead').patchValue(true);\r\n        ;\r\n        fieldLevelDataControl.controls[index].get('fieldAccessCreate').patchValue(false);\r\n        fieldLevelDataControl.controls[index].get('fieldAccessUpdate').patchValue(false);\r\n        fieldLevelDataControl.controls[index].get('fieldAccessRead').enable();\r\n      }\r\n    }\r\n\r\n    // const pageIndex = this.rbacForm\r\n    //   .get('pageLevelData')\r\n    //   .value.findIndex(el => el.pageid === this.rbacForm.get('fieldLevelData').value[0].pageId);\r\n    // if (pageIndex > -1) {\r\n    //   accessArray.push(\r\n    //     new FormGroup({\r\n    //       pageName: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageName),\r\n    //       pageid: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageid),\r\n    //       validity: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].validity),\r\n    //       fallbackTo: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].fallbackTo),\r\n    //       condition: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].condition),\r\n    //       pageAccessCreate: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageAccessCreate),\r\n    //       pageAccessRead: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageAccessRead),\r\n    //       pageAccessUpdate: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageAccessUpdate),\r\n    //       pageAccessDelete: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageAccessDelete),\r\n    //       pageAccessNone: new FormControl(this.rbacForm.get('pageLevelData').value[pageIndex].pageAccessNone),\r\n    //     })\r\n    //   );\r\n    //   accessArray.removeAt(pageIndex);\r\n    //   const isExist = this.selectedPageAccessChanges.findIndex(\r\n    //     el => el.pageid === this.rbacForm.get('pageLevelData').value[pageIndex].pageid\r\n    //   );\r\n    //   if (isExist > -1) {\r\n    //     this.selectedPageAccessChanges.splice(isExist, 1);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  changePageAccess(index, selectedPrivilege) {\r\n    const pageLevelData = this.rbacForm.get('pageLevelData') as FormArray;\r\n    const selectedValue = pageLevelData.at(index).value;\r\n    const pageName = this.loadedPagesList.filter(key => key.id === selectedValue.pageid);\r\n    if (pageName[0]?.activeVersion?.templatejson) {\r\n      /*delete will be disabled for Business Driven Page */\r\n      pageLevelData.controls[index].get('pageAccessDelete').disable();\r\n\r\n      if (selectedPrivilege === 'c' || selectedPrivilege === 'u') {\r\n        pageLevelData.controls[index].get('pageAccessRead').patchValue(true);\r\n        selectedValue.pageAccessUpdate || selectedValue.pageAccessCreate\r\n          ? pageLevelData.controls[index].get('pageAccessRead').disable()\r\n          : pageLevelData.controls[index].get('pageAccessRead').enable();\r\n        pageLevelData.controls[index].get('pageAccessNone').patchValue(false);\r\n\r\n      }\r\n      else if (selectedPrivilege === 'r') {\r\n        selectedValue.pageAccessRead ?\r\n          pageLevelData.controls[index].get('pageAccessNone').patchValue(false) :\r\n          pageLevelData.controls[index].get('pageAccessNone').patchValue(true);\r\n        ;\r\n      }\r\n      else {\r\n        selectedValue.pageAccessNone\r\n          ? pageLevelData.controls[index].get('pageAccessRead').patchValue(false)\r\n          : pageLevelData.controls[index].get('pageAccessRead').patchValue(true);\r\n        pageLevelData.controls[index].get('pageAccessCreate').patchValue(false);\r\n        pageLevelData.controls[index].get('pageAccessUpdate').patchValue(false);\r\n        pageLevelData.controls[index].get('pageAccessRead').enable();\r\n      }\r\n\r\n    } else {\r\n      if (selectedPrivilege === 'c' || selectedPrivilege === 'u' || selectedPrivilege === 'd') {\r\n        pageLevelData.controls[index].get('pageAccessRead').patchValue(true);\r\n        selectedValue.pageAccessUpdate || selectedValue.pageAccessCreate || selectedValue.pageAccessDelete\r\n          ? pageLevelData.controls[index].get('pageAccessRead').disable()\r\n          : pageLevelData.controls[index].get('pageAccessRead').enable();\r\n        pageLevelData.controls[index].get('pageAccessNone').patchValue(false);\r\n\r\n      }\r\n      else if (selectedPrivilege === 'r') {\r\n        selectedValue.pageAccessRead ?\r\n          pageLevelData.controls[index].get('pageAccessNone').patchValue(false) :\r\n          pageLevelData.controls[index].get('pageAccessNone').patchValue(true);\r\n        ;\r\n      }\r\n      else {\r\n        selectedValue.pageAccessNone\r\n          ? pageLevelData.controls[index].get('pageAccessRead').patchValue(false)\r\n          : pageLevelData.controls[index].get('pageAccessRead').patchValue(true);\r\n        pageLevelData.controls[index].get('pageAccessCreate').patchValue(false);\r\n        pageLevelData.controls[index].get('pageAccessUpdate').patchValue(false);\r\n        pageLevelData.controls[index].get('pageAccessDelete').patchValue(false);\r\n        pageLevelData.controls[index].get('pageAccessRead').enable();\r\n      }\r\n\r\n    }\r\n    const isExist = this.selectedPageAccessChanges?.findIndex(el => el?.pageid === selectedValue.pageid);\r\n    if (isExist > -1) {\r\n      this.selectedPageAccessChanges[isExist].pageAccess = selectedValue.pageAccess;\r\n    } else {\r\n      this.selectedPageAccessChanges.push(selectedValue);\r\n    }\r\n    if (selectedValue.pageAccess === '4') {\r\n      this.setDefaultPageAccess(pageLevelData, index);\r\n    }\r\n\r\n    if (this.permissionUpdatedPages.some(pageId => pageId === selectedValue.pageid)) {\r\n      this.permissionUpdatedPages = this.permissionUpdatedPages.filter(pageId => pageId !== selectedValue.pageid)\r\n    }\r\n    this.permissionUpdatedPages.push(selectedValue.pageid)\r\n  }\r\n\r\n  setDefaultPageAccess(pageAccessData: FormArray, i: number) {\r\n    pageAccessData.at(i).get('condition').setValue('always');\r\n    pageAccessData.at(i).get('validity').setValue('1');\r\n    // pageAccessData.at(i).get('accessdata').setValue('all');\r\n    pageAccessData.at(i).get('fallbackTo').setValue('n');\r\n  }\r\n\r\n  checkObjectType(schema: string, table: string) {\r\n    return new Promise((resolve) => {\r\n      this.pageAccessService.checkObjectType(schema, table).subscribe(res => {\r\n        resolve(res.data);\r\n      });\r\n    })\r\n  }\r\n\r\n  showPopup() {\r\n    this.modalService.open(this.validationPopup);\r\n  }\r\n\r\n}\r\n","<app-alert></app-alert>\r\n<div class=\"row rbac-card\">\r\n  <div class=\"col-12\">\r\n    <mat-card class=\"mat-card\">\r\n      <mat-card-content class=\"p-2\">\r\n        <form [formGroup]=\"rbacForm\">\r\n          <app-manage-access-radio (accessBy)=\"accessBy($event)\" (userDropdown)=\"userDropdown($event)\"\r\n            (roleDropdown)=\"roleDropdown($event)\" (policyDropdown)=\"policyDropdown($event)\"\r\n            (dropDownSelectedValues)=\"dropDownSelectedValues($event)\"></app-manage-access-radio>\r\n          <h3 class=\"radio-title mt-1 mb-2 pa-title\">Page Access Management</h3>\r\n          <mat-card class=\"mat-card\">\r\n            <mat-card-content class=\"p-2\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-3 col-md-6 col-12 mb-3\" *ngIf=\"false\">\r\n                  <label class=\"radio-title\">Modules</label>\r\n                  <!-- <angular2-multiselect [data]=\"moduleList\" [settings]=\"moduleDropdownSettings\"\r\n                    onSelect=\"loadSubModule('click')\" onDeSelect=\"removeSubModule($event)\"\r\n                    onSelectAll=\"loadSubModule('click')\" onDeSelectAll=\"removeAllSubModule()\"\r\n                    formControlName=\"module\"></angular2-multiselect> -->\r\n                </div>\r\n                <div class=\"col-lg-3 col-md-6 col-12 mb-3\" *ngIf=\"false\">\r\n                  <label class=\"radio-title\">Sub Modules</label>\r\n                  <!-- <angular2-multiselect [data]=\"subModuleList\" [settings]=\"submoduleDropdownSettings\"\r\n                    onSelect=\"loadSubModulePage('click')\" onDeSelect=\"removeSubModulePage($event, 'submodule')\"\r\n                    onSelectAll=\"loadSubModulePage('click')\" onDeSelectAll=\"removeAllSubModulePage()\"\r\n                    formControlName=\"submodule\">\r\n                  </angular2-multiselect> -->\r\n                </div>\r\n\r\n                <div class=\"col-lg-7 mb-3\">\r\n                  <p-accordion class=\"w-full policygroup-accordion\" iconPos=\"endVal\">\r\n                    <p-accordionTab>\r\n                      <ng-template pTemplate=\"header\">\r\n                        <span class=\"flex align-items-center head-text gap-2 w-full\">\r\n                          <span class=\"font-bold\">\r\n                            <label aria-labelledby=\"policyGroupList\" for=\"policyGroupList\"\r\n                              class=\"mb-0 referral-form-labels\">Pages\r\n\r\n                              <span *ngIf=\"selectedPageData.length > 0\"\r\n                                class=\"pg-count ml-2\">{{selectedPageData.length}}</span>\r\n                            </label>\r\n                          </span>\r\n                        </span>\r\n                      </ng-template>\r\n                      <!-- <angular2-multiselect [data]=\"pagesList\" [settings]=\"pageDropdownSettings\"\r\n                        (onSelect)=\"populatePage('click',true,$event)\" fieldKey=\"SETTINGS_PAG_ACC_PAGE\"\r\n                        (onDeSelect)=\"populatePage('click',false,$event)\"\r\n                        (onSelectAll)=\"populatePage('click',true,$event)\" (onDeSelectAll)=\"removeAllPopulatePage()\"\r\n                        formControlName=\"pageList\"></angular2-multiselect> -->\r\n                      <p-multiSelect [options]=\"pagesList\" formControlName=\"pageList\" fieldKey=\"SETTINGS_PAG_ACC_PAGE\"\r\n                        defaultLabel=\"Select Pages\" display=\"chip\" optionLabel=\"pagename\" [autoDisplayFirst]=\"false\"\r\n                        styleClass=\"policygroup-v2 w-100\" (onChange)=\"populatePage('click',true,$event)\" [resetFilterOnHide]=\"true\"\r\n                        (onFilter)= \"onFilterPages($event)\">\r\n                        <ng-template let-value pTemplate=\"selectedItems\">\r\n                          <div *ngFor=\"let option of value\">\r\n                            <div #selectedpg class=\"p-multiselect-token\" [ngClass]=\"option.disabled ? 'disabled' : '' \"\r\n                              id=\"{{option.id}}\">\r\n                              <span class=\"policygroupname\" pTooltip=\"{{option?.pagename}}\" tooltipPosition=\"top\">\r\n                                {{ option.pagename }}\r\n                              </span>\r\n                              <em class=\"pi pi-times-circle ml-2 clear-icon right-sec\" *ngIf=\"!option.disabled\"\r\n                                role=\"button\" (click)=\"removeValue($event, selectedpg)\"></em>\r\n                            </div>\r\n                          </div>\r\n                          <div *ngIf=\"!value || value.length === 0\">Select Pages</div>\r\n                        </ng-template>\r\n                      </p-multiSelect>\r\n                    </p-accordionTab>\r\n                  </p-accordion>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-12 col-12 mb-3\">\r\n                  <label class=\"radio-title d-block required\">Provide Access by </label>\r\n                  <mat-radio-group formControlName=\"provideAccess\" (change)=\"showLevelAccess($event.value)\">\r\n                    <mat-radio-button value=\"1\" fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL\">Page\r\n                      Level&nbsp;&nbsp;</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" fieldKey=\"SETTINGS_PAG_ACC_PAG_FIELD_LEVEL\">Field\r\n                      Level</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div class=\"col-lg-2 col-md-6 col-12 mb-3\" *ngIf=\"fieldLevelAccess\">\r\n                  <label class=\"radio-title\">Select Page</label>\r\n                  <br />\r\n                  <p-dropdown id=\"selectpage\" ariaLabelledBy=\"selectpage\" [options]=\"selectedPageDataFilter\"\r\n                    fieldKey=\"SETTINGS_PAG_ACC_PAGE\" [filter]=\"true\"\r\n                    [showClear]=\"fieldLevelCheckCount && fieldLevelCheckCount?.length\" [resetFilterOnHide]=\"true\"\r\n                    (onChange)=\"getFieldLevelList('click')\" formControlName=\"fpages\" optionLabel=\"pagename\"\r\n                    optionValue=\"id\" placeholder=\"Select a page\" class=\"dd-stand-size\">\r\n                    <ng-template let-item pTemplate=\"selectedItem\">\r\n                      <div pTooltip=\"{{item?.pagename}}\" tooltipPosition=\"top\" class=\"text-truncate\"> {{ item?.pagename\r\n                        }}</div>\r\n                    </ng-template>\r\n                    <ng-template let-object pTemplate=\"item\">\r\n                      {{ object.pagename }}\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div *ngIf=\"pageLevelAccess\" class=\"row\">\r\n                <div class=\"col-12 mt-3 pageLevelAccessTable\">\r\n                  <table aria-describedby=\"pageLevelAccessTable\" class=\"table table-bordered\">\r\n                    <col />\r\n                    <col style=\"width: 120px\" />\r\n                    <col style=\"width: 120px\" />\r\n                    <col style=\"width: 120px\" />\r\n                    <col style=\"width: 120px\" />\r\n                    <col style=\"width: 120px\" />\r\n                    <col style=\"width: 25%\" *ngIf=\"false\" />\r\n                    <col style=\"width: 20%\" />\r\n                    <thead>\r\n                      <th class=\"text-left\">Page Name</th>\r\n                      <th scope=\"col\" class=\"text-center\">Create</th>\r\n                      <th scope=\"col\" class=\"text-center\">Read</th>\r\n                      <th scope=\"col\" class=\"text-center\">Update1</th>\r\n                      <th scope=\"col\" class=\"text-center\">Delete</th>\r\n                      <th scope=\"col\" class=\"text-center\">None</th>\r\n                      <th class=\"text-center\" *ngIf=\"false\">Validity</th>\r\n                      <th class=\"text-center\">Data Access</th>\r\n                    </thead>\r\n                    <tbody>\r\n                      <ng-container formArrayName=\"pageLevelData\"\r\n                        *ngFor=\"let fAccess of rbacForm.get('pageLevelData')['controls']; let i = index\">\r\n                        <tr [formGroup]=\"rbacForm.get('pageLevelData')['controls'][i]\">\r\n                          <td class=\"text-left\">\r\n                            <input style=\"border: none; pointer-events: none; width: 360px\" type=\"text\"\r\n                              formControlName=\"pageName\" placeholder=\"pageleveldata\" />\r\n                          </td>\r\n                          <td class=\"text-center\">\r\n                            <label class=\"g-checkbox\">\r\n                              <input (change)=\"changePageAccess(i,'c')\"\r\n                                formControlName=\"pageAccessCreate\" type=\"checkbox\" value=\"1\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_READ_WRITE\">\r\n                            </label>\r\n                          </td>\r\n                          <td class=\"text-center\">\r\n                            <label class=\"g-checkbox\">\r\n                              <input (change)=\"changePageAccess(i,'r')\" formControlName=\"pageAccessRead\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_READ\" type=\"checkbox\" value=\"2\">\r\n                            </label>\r\n                          </td>\r\n                          <td class=\"text-center\">\r\n                            <label class=\"g-checkbox\">\r\n                              <input (change)=\"changePageAccess(i,'u')\"\r\n                                formControlName=\"pageAccessUpdate\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_READ_WRITE\" type=\"checkbox\" value=\"5\">\r\n                                <a href=\"javascript:void(0)\" (click) = \"showPopup()\" >Conditional</a>\r\n                            </label>\r\n                          </td>\r\n                          <td class=\"text-center\">\r\n                            <label class=\"g-checkbox\">\r\n                              <input (change)=\"changePageAccess(i,'d')\"\r\n                                formControlName=\"pageAccessDelete\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_READ_WRITE_DELETE\" type=\"checkbox\" value=\"6\">\r\n                            </label>\r\n                          </td>\r\n                          <td class=\"text-center\">\r\n                            <label class=\"g-checkbox\">\r\n                              <input (change)=\"changePageAccess(i,'n')\" formControlName=\"pageAccessNone\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_NONE\" type=\"checkbox\" value=\"4\">\r\n                            </label>\r\n                          </td>\r\n                          <td class=\"text-center\" *ngIf=\"false\" >\r\n                            <ng-container *ngIf=\"\r\n                                  rbacForm.get('pageList')?.value[i]?.activeVersion?.gridconfig ||\r\n                                  rbacForm.get('pageList')?.value[i]?.gridconfig\r\n                                \">\r\n                              <p-dropdown [options]=\"conditions\" styleClass=\"condition\" formControlName=\"condition\"\r\n                                placeholder=\"Select a condition\" [disabled]=\"fAccess?.value?.pageAccess === '4'\"\r\n                                optionLabel=\"name\" optionValue=\"key\">\r\n                              </p-dropdown>\r\n                              <p-inputNumber type=\"number\" class=\"validity\"\r\n                                *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                [readonly]=\"fAccess?.value?.pageAccess === '4'\" [min]=\"1\"\r\n                                fieldKey=\"SETTINGS_PAG_ACC_PAGE_PAGE_LEVEL_VALIDITY\" formControlName=\"validity\"\r\n                                mode=\"decimal\"></p-inputNumber>\r\n                              <p-dropdown [options]=\"getFallbackPermission(fAccess)\" styleClass=\"condition\"\r\n                                formControlName=\"fallbackTo\" *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                placeholder=\"Select a permission\"\r\n                                [disabled]=\"fAccess?.value?.pageAccess === '3' || fAccess?.value?.pageAccess === '4'\"\r\n                                optionLabel=\"name\" optionValue=\"key\" [style]=\"{ 'margin-left': '15px' }\">\r\n                              </p-dropdown>\r\n                            </ng-container>\r\n                          </td>\r\n                          <td class=\"text-center\" >\r\n                            <ng-container *ngIf=\"\r\n                              rbacForm.get('pageList')?.value[i]?.activeVersion?.gridconfig ||\r\n                              rbacForm.get('pageList')?.value[i]?.gridconfig\r\n                              \">\r\n                              <p-dropdown [options]=\"dataAccess\" styleClass=\"condition\"\r\n                                formControlName=\"accessdata\"\r\n                                placeholder=\"Select a permission\"\r\n                                optionLabel=\"name\" optionValue=\"key\">\r\n                              </p-dropdown>\r\n                            </ng-container>\r\n                          </td>\r\n                        </tr>\r\n                      </ng-container>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\"\r\n                *ngIf=\"showFieldGrid && fieldLevelCheckCount?.length > 0 && fieldLevelAccess && fieldPageLevel?.length > 0\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table aria-describedby=\"fieldLevelAccessTable\" class=\"table table-bordered\">\r\n                      <col />\r\n                      <col style=\"width: 120px\" />\r\n                      <col style=\"width: 120px\" />\r\n                      <col style=\"width: 120px\" />\r\n                      <col style=\"width: 120px\" />\r\n                      <col *ngIf=\"false\" />\r\n                      <col />\r\n                      <thead>\r\n                        <th class=\"text-left\">Field Name</th>\r\n                        <th class=\"text-center\">Create</th>\r\n                        <th class=\"text-center\">Read</th>\r\n                        <th class=\"text-center\">Update</th>\r\n                        <th class=\"text-center\">None</th>\r\n                        <th class=\"text-center\" *ngIf=\"showFieldValidity && false\">Validity</th>\r\n                      </thead>\r\n                      <tbody>\r\n                        <ng-container formArrayName=\"fieldLevelData\"\r\n                          *ngFor=\"let fAccess of rbacForm.get('fieldLevelData')['controls']; let i = index\">\r\n                          <tr [formGroupName]=\"i\">\r\n                            <td class=\"text-left\">\r\n                              {{ fData[i]['displayname'] }}\r\n                              <span class=\"pi pi-info-circle asset-path-info\" pTooltip=\"Asset Path: {{ fData[i]['assetpath'] }}\" tooltipPosition=\"right\" ></span>\r\n                              <input type=\"hidden\" formControlName=\"assetid\" value=\"{{ fData[i]['id'] }}\" />\r\n                              <input type=\"hidden\" formControlName=\"pageId\" />\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessCreate\" (change)=\"changeFieldAccess($event, i, 'c')\"\r\n                                  type=\"checkbox\" value=\"3\">\r\n                              </label>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessRead\" (change)=\"changeFieldAccess($event, i, 'r')\"\r\n                                  type=\"checkbox\" value=\"2\">\r\n                              </label>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessUpdate\" (change)=\"changeFieldAccess($event, i, 'u')\"\r\n                                  type=\"checkbox\" value=\"\">\r\n                              </label>\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessHide\" (change)=\"changeFieldAccess($event, i, 'h')\"\r\n                                  type=\"checkbox\" value=\"4\">\r\n                              </label>\r\n                            </td>\r\n                            <td class=\"text-center\" *ngIf=\"showFieldValidity && false\">\r\n                              <p-dropdown [options]=\"conditions\" styleClass=\"condition\"\r\n                                [disabled]=\"fAccess?.value?.access === '4'\" formControlName=\"condition\"\r\n                                placeholder=\"Select a condition\" optionLabel=\"name\" optionValue=\"key\">\r\n                              </p-dropdown>\r\n                              <input type=\"number\" class=\"validity\" *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                [min]=\"1\" formControlName=\"validity\" [readonly]=\"fAccess?.value?.access === '4'\"\r\n                                style=\"width: 50px; margin-left: 15px\" pInputText />\r\n                              <p-dropdown [options]=\"getFallbackPermission(fAccess)\" styleClass=\"condition\"\r\n                                formControlName=\"fallbackTo\" *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                placeholder=\"Select a permission\"\r\n                                [disabled]=\"fAccess?.value?.access === '4' || fAccess?.value?.access === '3'\"\r\n                                optionLabel=\"name\" optionValue=\"key\" [style]=\"{ 'margin-left': '15px' }\">\r\n                              </p-dropdown>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-container>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- This code for field access for grid page -->\r\n              <div class=\"row\"\r\n                *ngIf=\"showFieldGrid && fieldLevelCheckCount?.length > 0 && fieldLevelAccess && fieldPageLevel?.length === 0\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table aria-describedby=\"fieldLevelAccessTable\" class=\"table table-bordered\">\r\n                      <col />\r\n                      <col style=\"width: 120px\" />\r\n                      <col style=\"width: 120px\" />\r\n                      <col *ngIf=\"false\" />\r\n                      <thead>\r\n                        <tr>\r\n                          <th class=\"text-left\">Field Name</th>\r\n                          <th class=\"text-center\">Read</th>\r\n                          <!-- <th class=\"text-center\">Write</th> -->\r\n                          <th class=\"text-center\">None</th>\r\n                          <th class=\"text-center\" *ngIf=\"showFieldValidity && false\">Validity</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <ng-container formArrayName=\"fieldLevelData\"\r\n                          *ngFor=\"let fAccess of rbacForm.get('fieldLevelData')['controls']; let i = index\">\r\n                          <tr [formGroupName]=\"i\">\r\n                            <td class=\"text-left\">\r\n                              {{ fData[i]['displayname'] }}\r\n                              <input type=\"hidden\" formControlName=\"assetid\" value=\"{{ fData[i]['id'] }}\" />\r\n                              <input type=\"hidden\" formControlName=\"pageId\" name=\"permissiongroup_{{i}}\" />\r\n                            </td>\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessRead\" (change)=\"changeFieldAccess($event, i,'r')\" type=\"checkbox\">\r\n                              </label>\r\n                            </td>\r\n                            <!-- <td class=\"text-center\">\r\n                              <input formControlName=\"access\" (change)=\"changeFieldAccess($event)\" type=\"radio\" value=\"2\" />\r\n                            </td> -->\r\n                            <td class=\"text-center\">\r\n                              <label class=\"g-checkbox\">\r\n                                <input formControlName=\"fieldAccessHide\" (change)=\"changeFieldAccess($event, i, 'h')\" type=\"checkbox\">\r\n                              </label>\r\n                            </td>\r\n                            <td class=\"text-center\" *ngIf=\"showFieldValidity && false\">\r\n                              <p-dropdown [options]=\"conditions\" styleClass=\"condition\"\r\n                                [disabled]=\"fAccess?.value?.access === '4'\" formControlName=\"condition\"\r\n                                placeholder=\"Select a condition\" optionLabel=\"name\" optionValue=\"key\">\r\n                              </p-dropdown>\r\n                              <input type=\"number\" class=\"validity\" *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                [min]=\"1\" formControlName=\"validity\" [readonly]=\"fAccess?.value?.access === '4'\"\r\n                                style=\"width: 50px; margin-left: 15px\" pInputText />\r\n                              <p-dropdown [options]=\"getFallbackPermission(fAccess)\" styleClass=\"condition\"\r\n                                formControlName=\"fallbackTo\" *ngIf=\"fAccess?.value?.condition !== 'always'\"\r\n                                placeholder=\"Select a permission\"\r\n                                [disabled]=\"fAccess?.value?.access === '4' || fAccess?.value?.access === '3'\"\r\n                                optionLabel=\"name\" optionValue=\"key\" [style]=\"{ 'margin-left': '15px' }\">\r\n                              </p-dropdown>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-container>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </form>\r\n        <div class=\"mt-3\" *ngIf=\"policyGroupPages.length && !fieldLevelAccess && selectedAccess === 'role'\">\r\n          <p-accordion class=\"w-full dynamic-search\" iconPos=\"endVal\">\r\n            <p-accordionTab>\r\n              <ng-template pTemplate=\"header\">\r\n                <span class=\"flex align-items-center head-text gap-2 w-full\">\r\n                  <span class=\"font-bold\">Policy Groups associated with {{ selectedName }} Role</span>\r\n                </span>\r\n              </ng-template>\r\n              <mat-card class=\"mt-2\">\r\n                <mat-card-content>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 mt-1\" *ngFor=\"let policyGroup of policyGroupPages\">\r\n                      <div class=\"radio-title mb-2\">Policy Group: {{ policyGroup?.policygroup?.policygroupname }}</div>\r\n                      <!-- It shows associated Roles -->\r\n                      <div class=\"table-responsive\">\r\n                        <table id=\"policyGroupTable\" aria-describedby=\"policyGroupTable\" class=\"table table-bordered\">\r\n                          <col />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\" class=\"text-left\">Page Name</th>\r\n                              <th scope=\"col\" class=\"text-center\">Create</th>\r\n                              <th scope=\"col\" class=\"text-center\">Read</th>\r\n                              <th scope=\"col\" class=\"text-center\">Update</th>\r\n                              <th scope=\"col\" class=\"text-center\">Delete</th>\r\n                              <th scope=\"col\" class=\"text-center\">None</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <ng-container *ngFor=\"let page of policyGroup?.policygrouppage\">\r\n                              <tr>\r\n                                <td class=\"text-left\">\r\n                                  <input style=\"border: none; pointer-events: none; width: 360px\" type=\"text\"\r\n                                    title=\"page?.page?.activeVersion?.pagename\"\r\n                                    [value]=\"page?.page[0]?.activeVersion?.pagename\" />\r\n                                </td>\r\n\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.c\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.r\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.u\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.d\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.hide\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                              </tr>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"policyGroupPages?.length === 0\">\r\n                              <tr>\r\n                                <td class=\"text-center\" colspan=\"4\">No pages associated with Policy Group.</td>\r\n                              </tr>\r\n                            </ng-container>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </p-accordionTab>\r\n          </p-accordion>\r\n\r\n        </div>\r\n        <div class=\"mt-3\" *ngIf=\"policyGroupRolePages.length && !fieldLevelAccess && selectedAccess === 'policygroup'\">\r\n          <p-accordion class=\"w-full dynamic-search\" iconPos=\"endVal\">\r\n            <p-accordionTab>\r\n              <ng-template pTemplate=\"header\">\r\n                <span class=\"flex align-items-center head-text gap-2 w-full\">\r\n                  <span class=\"font-bold\">Roles associated with {{ selectedName }} Policy Group</span>\r\n                </span>\r\n              </ng-template>\r\n              <mat-card class=\"mt-2\">\r\n                <mat-card-content>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 mt-1\" *ngFor=\"let role of policyGroupRolePages\">\r\n                      <div class=\"radio-title mb-2\">Role: {{ role?.role?.name }}</div>\r\n                      <!-- It shows associated policygroups -->\r\n                      <div class=\"table-responsive\">\r\n                        <table id=\"policyGroupTable\" aria-describedby=\"policyGroupTable\" class=\"table table-bordered\">\r\n                          <col />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <col style=\"width: 100px\" />\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\" class=\"text-left\">Page Name</th>\r\n                              <th scope=\"col\" class=\"text-center\">Create</th>\r\n                              <th scope=\"col\" class=\"text-center\">Read</th>\r\n                              <th scope=\"col\" class=\"text-center\">Update</th>\r\n                              <th scope=\"col\" class=\"text-center\">Delete</th>\r\n                              <th scope=\"col\" class=\"text-center\">None</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <ng-container *ngFor=\"let page of role?.rolepage\">\r\n                              <tr>\r\n                                <td class=\"text-left\">\r\n                                  <input style=\"border: none; pointer-events: none; width: 360px\" type=\"text\"\r\n                                    title=\"page?.page?.activeVersion?.pagename\"\r\n                                    [value]=\"page?.page[0]?.activeVersion?.pagename\" />\r\n                                </td>\r\n\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.c\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.r\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.u\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.d\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  <label class=\"g-checkbox\">\r\n                                    <input disabled [checked]=\"page?.hide\" type=\"checkbox\">\r\n                                  </label>\r\n                                </td>\r\n                              </tr>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"policyGroupRolePages?.length === 0\">\r\n                              <tr>\r\n                                <td class=\"text-center\" colspan=\"4\">No pages associated with Role.</td>\r\n                              </tr>\r\n                            </ng-container>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </mat-card-content>\r\n              </mat-card>\r\n            </p-accordionTab>\r\n          </p-accordion>\r\n\r\n        </div>\r\n        <div class=\"text-right mt-3\" *ngIf=\"multiPageAccess\">\r\n          <!-- <button class=\"btn btn-primary mr-2\" fieldKey=\"SETTINGS_PAG_ACC_BACK\" (click)=\"redirectList()\">Back</button> -->\r\n          <!-- <button class=\"btn btn-cancel mr-2\" fieldKey=\"SETTINGS_PAG_ACC_CLEAR\" (click)=\"resetForm()\">Clear</button> -->\r\n          <button class=\"btn btn-primary\" fieldKey=\"SETTINGS_PAG_ACC_SAVE\" (click)=\"submitAlert()\"\r\n            [disabled]=\"(pagelevelaccesssavedisable && pagelevelaccesscountdisable) || (enablesave && pagelevelaccesscount && pagelevelaccesscount?.length > 0)\">Save</button>\r\n        </div>\r\n        <div class=\"text-right mt-3\" *ngIf=\"!multiPageAccess\">\r\n          <!-- <button class=\"btn btn-primary mr-2\" fieldKey=\"SETTINGS_PAG_ACC_BACK\" (click)=\"redirectList()\">Back</button> -->\r\n          <!-- <button class=\"btn btn-cancel mr-2\" fieldKey=\"SETTINGS_PAG_ACC_CLEAR\" (click)=\"resetForm()\">Clear</button> -->\r\n          <button class=\"btn btn-primary\" fieldKey=\"SETTINGS_PAG_ACC_SAVE\" (click)=\"submitAlert()\"\r\n            [disabled]=\"((multiPageAccess) || (fieldLevelCheckCount && fieldLevelCheckCount?.length === 0) || (enablesave && fieldLevelCheckCount && fieldLevelCheckCount?.length > 0) || (!pagelevelaccesscount || pagelevelaccesscount?.length === 0))\">Save</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"submitAlert\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body\">\r\n        <p>Field Level Access is already present for this Page. Modifying the Page Level Access will remove all Field\r\n          Level\r\n          Access. Do you want to proceed?</p>\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"mt-2\">\r\n          <button class=\"pull-right mb-2 btn btn-primary btncommon delete\" data-dismiss=\"modal\" (click)=\"saveRbac()\">\r\n            Yes\r\n          </button>\r\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\"\r\n            (click)=\"getSelectedPages()\">Cancel</button>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #validationPopup let-modal>\r\n  <div class=\"modal-body p-3\">\r\n    <div class=\"reset-password-div\">\r\n      <textarea rows=\"3\" cols=\"30\" pInputTextarea\r\n        placeholder=\"Add Condition\" maxlength=\"4000\" class=\"form-control no-resize\"\r\n        [(ngModel)]=\"additionalConditions\">\r\n      </textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer p-3\">\r\n    <p-button label=\"Save\" styleClass=\"btn px-3 py-1 mr-2 \"> </p-button>\r\n    <p-button label=\"Cancel\" styleClass=\"btn px-3 py-1 mr-2 \"> </p-button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionStore } from './pics-rbac-pageaccess/@core/permissions/permission.store';\r\nimport { RBACINFO } from './pics-rbac-pageaccess/@core/urls/rbac-url.config';\r\nimport { DataStoreService } from './pics-rbac-pageaccess/@core/service/data-store.service';\r\n\r\n@Component({\r\n  selector: 'rbac-pageaccess',\r\n  template: `\r\n   <lib-pageaccess></lib-pageaccess>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class RbacPageaccessComponent implements OnInit {\r\n\r\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\r\n  @Input() public PERMISSION?: any;\r\n  @Input() public accessEvent!: Observable<any>;\r\n\r\n  constructor(\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n     this.accessEvent.subscribe(val => {\r\n      this.RBACORG = val.RBACORG;\r\n      this.PERMISSION = val.PERMISSION;\r\n      this._storeservice.setData('RBACORG', this.RBACORG);\r\n      this.permissionStore.setStore(this.PERMISSION);\r\n      this._storeservice.setData('HTTPSERVICE',val.httpService);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\n@Directive({\r\n  selector: '[showField]'\r\n})\r\nexport class ShowFieldDirective implements OnInit {\r\n  @Input() showField!: string;\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private dataStore: PermissionStore\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const permissions = this.dataStore.state;\r\n    if (!permissions || !permissions[this.showField]) {\r\n      this.viewContainer.clear();\r\n    } else {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n      const lookupIds = sessionStorage.getItem('LOOKUP_IDS');\r\n      if (lookupIds) {\r\n        const lookupIdArray = lookupIds.split(',');\r\n        Object.entries(permissions)\r\n          .filter(item => item[0].startsWith('GALKP_'))\r\n          .forEach(([key, value]) => {\r\n            for (const _value of <[]>value) {\r\n              const _key = key.replace('GALKP_', '');\r\n              if (\r\n                _key === this.showField &&\r\n                lookupIdArray.includes(String(_value['lookupid'])) &&\r\n                _value['action'] === 'H'\r\n              ) {\r\n                this.viewContainer.clear();\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PermissionDirective } from './permission.directive';\r\nimport { ShowFieldDirective } from './show-field.directives';\r\n\r\n@NgModule({\r\n  declarations: [PermissionDirective, ShowFieldDirective],\r\n  imports: [CommonModule],\r\n  exports: [PermissionDirective, ShowFieldDirective]\r\n})\r\nexport class DirectivesModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertService } from './alert.service';\r\nimport { DataStoreService } from './data-store.service';\r\nimport { PermissionStore } from '../permissions/permission.store';\r\n\r\ndeclare const microstrategy: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MicrostrategyService {\r\n  dossierList: any;\r\n  RBACORG: any;\r\n  environment: any;\r\n  constructor(private http: HttpClient,\r\n    private alertService: AlertService,\r\n    private permissionStore: PermissionStore,\r\n    private _storeservice: DataStoreService) {\r\n      this._storeservice.currentStore.subscribe((res: any) => {\r\n          if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n          this.RBACORG = res['RBACORG'];\r\n          this.environment = this.RBACORG['environment'] ? this.RBACORG['environment'] : '';\r\n        }\r\n      });\r\n    }\r\n\r\n  getAuthToken() {\r\n    const body = {\r\n      username: this.environment.mstrUsername,\r\n      password: this.environment.mstrPassword,\r\n      loginMode: 1\r\n    };\r\n    return this.http.post(`${this.environment.mstrURL}/api/auth/login`, body, {\r\n      withCredentials: true,\r\n      headers: { 'Content-type': 'application/json' },\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getDossier(projectId?: string, dossierId?: string, pageNo?: string) {\r\n    const permissions = this.permissionStore.state;\r\n    const projectUrl = `${this.environment.mstrURL}/app/${projectId}`;\r\n    const dossierUrl = `${projectUrl}/${dossierId}/${pageNo}`;\r\n     microstrategy.dossier\r\n      .create({\r\n        placeholder: document.getElementById('dossierContainer'),\r\n        url: dossierUrl,\r\n        navigationBar: {\r\n          enabled: true,\r\n          gotoLibrary: permissions?.ANA_LIBRARY,\r\n          title: true,\r\n          toc: true,\r\n          reset: true,\r\n          reprompt: true,\r\n          share: true,\r\n          comment: true,\r\n          notification: true,\r\n          filter: true,\r\n          options: true,\r\n          search: true,\r\n          bookmark: true\r\n        },\r\n        enableCustomAuthentication: true,\r\n        enableResponsive: false,\r\n        containerWidth: 400,\r\n        containerHeight: 400,\r\n        customAuthenticationType: microstrategy.dossier.CustomAuthenticationType.AUTH_TOKEN,\r\n        getLoginToken: async () => {\r\n          const response = await this.getAuthToken().toPromise();\r\n          return response.headers.get('x-mstr-authtoken');\r\n        }\r\n      })\r\n      .catch((_err: any) => this.alertService.error(`Failed to connect ${this.environment.mstrURL}`));\r\n  }\r\n\r\n  async getLibraryDetails() {\r\n    const token = await this.getAuthToken().toPromise();\r\n    const authtoken = token.headers.get('x-mstr-authtoken')\r\n    const headerInfo = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n      'X-MSTR-AuthToken': authtoken ? authtoken: '',\r\n      'X-MSTR-ProjectID': this.environment.mstrProjectID\r\n    };\r\n    return this.http\r\n      .get(`${this.environment.mstrURL}/api/library`, {\r\n        withCredentials: true,\r\n        headers: headerInfo\r\n      })\r\n      .toPromise()\r\n      .then((response: any) => {\r\n        return response.map((mstr: any) => ({\r\n          id: mstr.target.id,\r\n          projectId: mstr.projectId,\r\n          name: mstr.target.name\r\n        }));\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AttachmentConfig, PermissionsURL, PolicyGroupConfig, RoleConfig, UserConfig } from '../urls/rbac-url.config';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RbacService {\r\n  httpService:any;\r\n  constructor(private _storeservice: DataStoreService) {\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if(res){\r\n        this.httpService = res['HTTPSERVICE']\r\n      }\r\n    })\r\n  }\r\n  getAllUserList(key?: string): Observable<any> {\r\n    return this.httpService.get(`${UserConfig.EndPoint.User.getAllUserList}/${key}`);\r\n  }\r\n  getAllUserOrgList(orgid: any) {\r\n    return this.httpService.get(UserConfig.EndPoint.User.getAllUserOrgList + orgid);\r\n  }\r\n  saveUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.createUser, data);\r\n  }\r\n  updateUser(data: any, userid: string) {\r\n    return this.httpService.put(`${UserConfig.EndPoint.User.getAllUserList}/${userid}`, data);\r\n  }\r\n  deleteUser(id?: string) {\r\n    return this.httpService.delete(`${UserConfig.EndPoint.User.getAllUserList}/${id}`);\r\n  }\r\n  activateUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.activateUser, data);\r\n  }\r\n  addProviderUser(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.Provider.addProviderUser, data);\r\n  }\r\n  addUserRole(data: any) {\r\n    return this.httpService.post(UserConfig.EndPoint.User.userRole, data);\r\n  }\r\n  uploadKey(objparams: any) {\r\n    return this.httpService.post(AttachmentConfig.EndPoint.Attachments.UploadKey, objparams);\r\n  }\r\n  getOrgPolicyGroupList(orgid: any) {\r\n    return this.httpService.get(\r\n      PolicyGroupConfig.EndPoint.policyGroup.getOrgPolicyGroups.replace('{organizationid}', String(orgid))\r\n    );\r\n  }\r\n  getAllPolicyGroupList(policyGroupId?: number) {\r\n    const endPoint = policyGroupId\r\n      ? `${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${policyGroupId}`\r\n      : PolicyGroupConfig.EndPoint.policyGroup.getAllPolicyGroupList;\r\n    return this.httpService.get(endPoint);\r\n  }\r\n  getPolicyGroupById(id: any) {\r\n    return this.httpService.get(PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList + '/' + id);\r\n  }\r\n\r\n  getPolicyGroupsByManagementGroup(policyGroupId: number) {\r\n    return this.httpService.get(`/org/policyGroup/managementgroup/${policyGroupId}`);\r\n  }\r\n\r\n  createPolicyGroup(data: any) {\r\n    return this.httpService.post(PolicyGroupConfig.EndPoint.policyGroup.createPolicyGroup, data);\r\n  }\r\n\r\n  updatePolicyGroup(id: number, item: any) {\r\n    return this.httpService.put(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`, item);\r\n  }\r\n\r\n  deletePolicyGroup(id: string) {\r\n    return this.httpService.delete(`${PolicyGroupConfig.EndPoint.policyGroup.getPolicyGroupList}/${id}`);\r\n  }\r\n  getAllUserRole(id?: any) {\r\n    return this.httpService.get(RoleConfig.EndPoint.role.getAllOrgRole.replace('{orgid}', String(id)));\r\n  }\r\n\r\n  deleteRole(id: string) {\r\n    return this.httpService.delete(`${RoleConfig.EndPoint.role.getAllUserRole}/${id}`);\r\n  }\r\n\r\n  getRoleById(roleid: string) {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleid}`);\r\n  }\r\n\r\n  createRole(data: any) {\r\n    return this.httpService.post(RoleConfig.EndPoint.role.createRole, data);\r\n  }\r\n\r\n  updateRole(roleId: any, data: any) {\r\n    return this.httpService.put(`${RoleConfig.EndPoint.role.getAllUserRole}/${roleId}`, data);\r\n  }\r\n\r\n  getLandingPage(id: any) {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.getLandingPage}/${id}`);\r\n  }\r\n\r\n  createPolicyGroupForRole(roleId: number, data: any) {\r\n    return this.httpService.post(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\r\n  }\r\n\r\n  updatePolicyGroupForRole(roleId: number, data: any) {\r\n    return this.httpService.put(`${RoleConfig.EndPoint.role.addPolicyGroup}/${roleId}/policygroups`, data);\r\n  }\r\n  getReportDashbaord() {\r\n    return this.httpService.get(`${RoleConfig.EndPoint.role.dossier}`);\r\n  }\r\n  getPermissionRoleById(id: string) {\r\n    return this.httpService.get(PermissionsURL.EndPoints.permission.permissionRoleById.replace('{id}', id));\r\n  }\r\n  getManagementGroupTree(_organizationid: any) {\r\n    return this.httpService.get('/org/management-group/organization/tree');\r\n  }\r\n  getPermissionsTree(applicationid: any) {\r\n    return this.httpService.get(\r\n      PermissionsURL.EndPoints.permission.applicationPermissionsTree.replace('{applicationid}', applicationid)\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AlertComponent],\r\n  exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { TableModule } from 'primeng/table';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { AlertModule } from './alert/alert.module';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccordionModule,\r\n    TabMenuModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    CheckboxModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    DropdownModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    CardModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    AlertModule,\r\n    ConfirmDialogModule,\r\n    TreeSelectModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    TabViewModule,\r\n    SidebarModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    AccordionModule,\r\n    TabMenuModule,\r\n    MessageModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    CheckboxModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    DropdownModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    CardModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    AlertModule,\r\n    ConfirmDialogModule,\r\n    TreeSelectModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    TabViewModule,\r\n    SidebarModule\r\n  ]\r\n})\r\nexport class PrimengModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'FilterPipe'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(value: any, input: any): any {\r\n    if (input) {\r\n      return value.filter(val => val.toLowerCase().indexOf(input.toLowerCase()) >= 0);\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ssnMask' })\r\nexport class MaskPipe implements PipeTransform {\r\n  transform(value: string, showSsnMask: boolean): string {\r\n    if (showSsnMask === true) {\r\n      if (String(value).startsWith('*')) {\r\n        return '';\r\n      } else if (String(value).match('^d{9}$')) {\r\n        return '***-**-' + String(value).substring(String(value).length - 4);\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      const cleaned = ('' + value).replace(/\\D/g, '');\r\n      const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\r\n      if (match) {\r\n        return '(' + match[1] + ') ' + match[2] + '-' + match[3];\r\n      } else if (String(value).startsWith('*')) {\r\n        return '';\r\n      } else if (String(value).match('^d{9}$')) {\r\n        return (\r\n          String(value).substring(0, 3) + '-' + String(value).substring(3, 5) + '-' + String(value).substring(5, 9)\r\n        );\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilterPipe } from './filter.pipe';\r\nimport { MaskPipe } from './ssnMask.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [MaskPipe, FilterPipe],\r\n  exports: [MaskPipe, FilterPipe],\r\n  providers: [MaskPipe, FilterPipe]\r\n})\r\nexport class SharedPipesModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GridListService {}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../@core/service/auth.service';\r\nimport { GridListService } from '../grid-list/grid-list.service';\r\nimport { LocalService } from '../../../@core/service/local.service';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport { exportDataGrid } from 'devextreme/excel_exporter';\r\nimport { exportDataGrid as exportDataGridToPdf } from 'devextreme/pdf_exporter';\r\nimport * as ExcelJS from 'exceljs/dist/exceljs.min.js';\r\nimport { saveAs } from 'file-saver-es';\r\nimport * as jsPDF from 'jspdf';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-grid-list',\r\n  providers: [GridListService],\r\n  templateUrl: './grid-list.component.html',\r\n  styleUrls: ['./grid-list.component.scss']\r\n})\r\nexport class GridListComponent implements OnInit, OnChanges, AfterViewInit {\r\n  @ViewChild(DxDataGridComponent, { static: false }) dataGrid: DxDataGridComponent;\r\n  @Input() dataList: any[] = [];\r\n  @Input() dataSource: DataSource;\r\n  @Input() columns: any;\r\n  @Input() updateGrid: any;\r\n  @Input() totalCount: number;\r\n  @Input() page: number;\r\n  @Input() isShow: boolean;\r\n  @Input() remoteOperations: boolean;\r\n  @Input() enableExport: boolean;\r\n  @Input() showHeaderFilter: boolean;\r\n  @Input() exportPageName: string;\r\nnarrativeData: any;\r\n  @Input() set pageSize(value: number) {\r\n    if (value) {\r\n      this.currentPageSize = value;\r\n    } else {\r\n      this.currentPageSize = 20;\r\n    }\r\n  }\r\n  @Output() currentPage = new EventEmitter<number>();\r\n  @Output() pageIndex = new EventEmitter<number>();\r\n  @Output() currentSize = new EventEmitter<number>();\r\n  @Output() editTableRow = new EventEmitter<any>();\r\n  @Output() viewTableRow = new EventEmitter<any>();\r\n  @Output() deleteTableRow = new EventEmitter<any>();\r\n  @Output() openExternalLink = new EventEmitter<any>();\r\n  @Output() openpopupLink = new EventEmitter<any>();\r\n  @Output() routeTo = new EventEmitter<any>();\r\n  @Output() openPopup = new EventEmitter<any>();\r\n  @Output() duplicateRow = new EventEmitter<any>();\r\n  @Output() sortOrder = new EventEmitter<any>();\r\n  @Output() filterSearchValue = new EventEmitter<any>();\r\n  @Output() filterBuilderPopup = new EventEmitter<any>();\r\n  @Output() filterPanel = new EventEmitter<any>();\r\n  @Output() multipleFilterValues = new EventEmitter<any>();\r\n  @Output() downloadTableRow = new EventEmitter<any>();\r\n  @Output() toggleRow = new EventEmitter<any>();\r\n  @Output() outComeTableRow = new EventEmitter<any>();\r\n  @Output() downloadFormResponseFiles = new EventEmitter<any>();\r\n  @Output() deleteFormResponseFiles = new EventEmitter<any>();\r\n  @Output() rowSelection = new EventEmitter<any>();\r\n  @Output() navigate = new EventEmitter<any>();\r\n  @Output() multipleFilterValueToAPI = new EventEmitter<any>();\r\n  @Output() selectedRowsData = new EventEmitter<any>();\r\n  dataField: string[];\r\n  columnHeader: any[];\r\n  popupPosition: any;\r\n  filterValue: (string | string[])[];\r\n  customOperations: Array<any>;\r\n  fields: any;\r\n  customStore: any;\r\n  tempColumns: any[];\r\n  Organization: any;\r\n  dUrl: string;\r\n  rdUrl: string;\r\n  rUrl: any;\r\n  user: any;\r\n  displayMode: string;\r\n  currentPageSize: any;\r\n  currentFilter: any;\r\n  headerFilterData: any;\r\n  constructor(private router: Router, public auth: AuthService, private localstorage: LocalService) {\r\n    /**\r\n     * initiating the grid list\r\n     */\r\n    this.loadGWithParam();\r\n\r\n    /**\r\n     * fetching login details from local storage\r\n     */\r\n    this.user = this.localstorage.getObj('user');\r\n    this.displayMode = 'compact';\r\n    this.currentFilter = 'auto';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.rUrl = this.router.url.split('/');\r\n    this.tempColumns = this.columns;\r\n    if (this.columns && this.columns.gridConfigFormArray) {\r\n      this.columnHeader = this.columns.gridConfigFormArray.map(column => column.header);\r\n      this.columns = this.columns.gridConfigFormArray;\r\n    } else {\r\n      this.columnHeader = this.columns.map(column => column.header);\r\n    }\r\n    this.popupPosition = { of: window, at: 'top', my: 'top', offset: { y: 10 } };\r\n    this.filterValue = [];\r\n    this.customOperations = [];\r\n  }\r\n\r\n  /**\r\n   * re-render the grid when input data is changed.\r\n   */\r\n  ngOnChanges() {\r\n    this.loadGWithParam();\r\n  }\r\n\r\n  /**\r\n   * Rendering data grid condition wise that login user is admin or not\r\n   */\r\n  loadGWithParam() {\r\n    if (!this.auth.isAdmin()) {\r\n      this.loadGrid({ value: !this.Organization ? this.auth.getOrgID() : this.Organization }, false);\r\n    } else {\r\n      this.loadGrid({ value: this.Organization ? this.Organization : 'Select-ALL' }, false);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    /**\r\n     * Datagrid even listener we can customize column event\r\n     */\r\n    this.dataGrid.onRowClick.subscribe(row => {\r\n      this.selectedRowsData.emit(row);\r\n    });\r\n    this.dataGrid.onOptionChanged.subscribe(e => {\r\n      if (e.name === 'columns' && e.fullName.endsWith('filterValues')) {\r\n        const colIndex = Number(\r\n          e.fullName\r\n            .match(/\\[\\d+\\]/)[0]\r\n            .replace('[', '')\r\n            .replace(']', '')\r\n        );\r\n        e.component.columnOption(colIndex, 'filterValues');\r\n        this.multipleFilterValues.emit(e);\r\n      }\r\n\r\n      // Search\r\n      if (e.name === 'columns' && e.fullName.endsWith('filterValue')) {\r\n        console.log(e);\r\n        this.filterSearchValue.emit(e);\r\n      }\r\n\r\n      // filter Builder Popup\r\n\r\n      if (e.name === 'filterBuilderPopup') {\r\n        console.log('filterBuilderPopup');\r\n        console.log(e);\r\n        this.filterBuilderPopup.emit(e);\r\n      }\r\n\r\n      // filter Panel - enable or disable\r\n      if (e.name === 'filterPanel') {\r\n        console.log(e.value);\r\n        this.filterPanel.emit(e);\r\n      }\r\n\r\n      // Sorting\r\n      if (e.name === 'columns' && e.fullName.endsWith('sortOrder')) {\r\n        this.sortOrder.emit(e);\r\n      }\r\n\r\n      // Paging\r\n      if (e.name === 'paging') {\r\n        this.currentPage.emit(e.value);\r\n      }\r\n      // pageIndex\r\n      if (e.fullName === 'paging.pageIndex') {\r\n        this.pageIndex.emit(e.value);\r\n      }\r\n      // pageSize\r\n      if (e.fullName === 'paging.pageSize') {\r\n        this.currentSize.emit(e.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generating data grid and restructuring data for Developer grid\r\n   * @param orgID origination details\r\n   * @param load optional boolean is for checking data should load organization respective or all\r\n   */\r\n  loadGrid(orgID, load = true) {\r\n    this.Organization = orgID.value;\r\n    if (load) {\r\n      this.currentPage.emit(orgID.value === 'Select-ALL' ? 'all' : orgID.value);\r\n    }\r\n\r\n    if (this.dataList?.length && this.rUrl && this.rUrl[2] === 'view-dashboard') {\r\n      this.dUrl = 'view-dashboard/dashboard';\r\n      this.router.navigateByUrl(`pages/${this.dUrl}/${this.dataList[0]['id']}`);\r\n    }\r\n    this.customStore = new CustomStore({\r\n      load: _opts => {\r\n        this.multipleFilterValueToAPI.emit(_opts.filter);\r\n        return Promise.resolve(this.dataList);\r\n      },\r\n      totalCount: _opts => {\r\n        return Promise.resolve(this.totalCount);\r\n      }\r\n    });\r\n  }\r\n\r\n  getRouter(data) {\r\n    this.routeTo.emit(data);\r\n  }\r\n\r\n  navigateTo(data) {\r\n    this.navigate.emit(data);\r\n  }\r\n\r\n  popup(data) {\r\n    this.openPopup.emit(data);\r\n  }\r\n\r\n  downloadData(evt) {\r\n    this.downloadTableRow.emit(evt);\r\n  }\r\n\r\n  editData(evt) {\r\n    this.editTableRow.emit(evt);\r\n  }\r\n  editDataMyApplciation(evt) {\r\n    this.editTableRow.emit(evt);\r\n  }\r\n  editAppeal(evt) {\r\n    this.editTableRow.emit(evt);\r\n  }\r\n  onSelectionChanged(evt) {\r\n    this.rowSelection.emit(evt);\r\n  }\r\n\r\n  viewData(evt) {\r\n    this.viewTableRow.emit(evt);\r\n  }\r\n\r\n  deleteData(evt) {\r\n    this.deleteTableRow.emit(evt);\r\n  }\r\n\r\n  duplicateDate(evt) {\r\n    this.duplicateRow.emit(evt);\r\n  }\r\n\r\n  openLink(evt) {\r\n    this.openExternalLink.emit(evt);\r\n  }\r\n\r\n  openPopupLink(evt) {\r\n    this.openpopupLink.emit(evt);\r\n  }\r\n\r\n  activeUser(evt) {\r\n    this.toggleRow.emit(evt);\r\n  }\r\n  getVisabilityByChoosableProp(chooser, visible) {\r\n    if (chooser) {\r\n      return visible;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getSortOrder(defaultSortColumn, defaultSortType, columnDef) {\r\n    if (defaultSortColumn && defaultSortType) {\r\n      return defaultSortColumn === columnDef ? defaultSortType : '';\r\n    }\r\n    return '';\r\n  }\r\n  outComeData(evt) {\r\n    this.outComeTableRow.emit(evt);\r\n  }\r\n\r\n  downloadFormResponseAttachments(evt) {\r\n    this.downloadFormResponseFiles.emit(evt);\r\n  }\r\n\r\n  deleteFormResponseAttachments(evt) {\r\n    this.deleteFormResponseFiles.emit(evt);\r\n  }\r\n\r\n  onRowPrepared(e) {\r\n    if (e.rowType == 'data' && e.data.isnew) {\r\n      const element = e.rowElement;\r\n      element.classList.add('isnew');\r\n    }\r\n  }\r\n\r\n  onCellPrepared(e) {\r\n    if (e.rowType == 'data') {\r\n      if (e.column.dataField === 'notice') {\r\n        const element = e.cellElement;\r\n        e.cellElement.innerHTML = '';\r\n        const livetext = document.createElement('div');\r\n        this.checkOncellprepare(e, livetext);\r\n        element.appendChild(livetext);\r\n      } else if (e.column.dataField === 'notificationEventChannels') {\r\n        const element = e.cellElement;\r\n        e.cellElement.innerHTML = '';\r\n        const livetext = document.createElement('div');\r\n        let ele = '';\r\n        e.data.notificationEventChannels.map(t => {\r\n          if (t.templatename) {\r\n            ele += `<label>${t.templatename}&nbsp;(<b>${t.templatechannel}</b>)</label>,`;\r\n          }\r\n        });\r\n        livetext.innerHTML = ele;\r\n        element.appendChild(livetext);\r\n      } else if (e.column.dataField === 'link') {\r\n        const element = e.cellElement;\r\n        e.cellElement.innerHTML = '';\r\n        const livetext = document.createElement('div');\r\n        livetext.innerHTML = `<img  src=\"${\r\n          e.data.link ? e.data?.link?.split('?')[0] : ''\r\n        }\"style=\"max-width: 45px; cursor: pointer\"/>`;\r\n        element.appendChild(livetext);\r\n      }\r\n      this.checkCellprepare(e);\r\n    }\r\n  }\r\n  checkCellprepare(e) {\r\n    if (e.column.dataField === 'status' && e.data['tabname'] === 'RECORDS' && e.data['status'] === 'NO MATCH') {\r\n      const element = e.cellElement;\r\n      const livetext = document.createElement('span');\r\n      livetext.classList.add('ml-2');\r\n      livetext.innerHTML = `<em class=\"fa fa-info-circle\" aria-hidden=\"true\" title=\"${e.data?.execution_error?.error}\" ></em>`;\r\n      if (e.data?.execution_error?.error) {\r\n        element.appendChild(livetext);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkOncellprepare(e, livetext) {\r\n    if (e.value !== 'No Data Found') {\r\n      livetext.innerHTML = `<a class=\"btn-link loginLabel\" href=\"${e.value}\" target=\"_blank\">Click Here<a>`;\r\n    } else {\r\n      livetext.innerHTML = 'No Data Found';\r\n    }\r\n  }\r\n\r\n  onExporting(e) {\r\n    const pageName = this.localstorage.getObj('FILE EXPORT NAME');\r\n    const currentDate = moment().format('YYYY-MM-DD');\r\n    let fileName: string;\r\n    if (pageName) {\r\n      fileName = `${pageName} Versions ${currentDate}`;\r\n    } else if (this.exportPageName) {\r\n      fileName = `${this.exportPageName}-${currentDate}`;\r\n    } else {\r\n      fileName = `Dynamic-Pages ${currentDate}`;\r\n    }\r\n    if (e.format === 'pdf') {\r\n      const doc = new jsPDF.jsPDF();\r\n      exportDataGridToPdf({\r\n        jsPDFDocument: doc,\r\n        component: e.component\r\n      }).then(() => {\r\n        doc.save(`${fileName}.pdf`);\r\n      });\r\n    } else if (e.format === 'xlsx') {\r\n      e.fileName = fileName;\r\n    } else if (e.format === 'csv') {\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet('Main sheet');\r\n      exportDataGrid({\r\n        component: e.component,\r\n        worksheet: worksheet\r\n      }).then(function () {\r\n        workbook.csv.writeBuffer().then(function (buffer) {\r\n          saveAs(new Blob([buffer], { type: 'application/octet-stream' }), `${fileName}.csv`);\r\n        });\r\n      });\r\n\r\n      e.cancel = true;\r\n    }\r\n  }\r\n  contentReady = e => {\r\n    const reorderColumns = e.component.instance().getVisibleColumns();\r\n    console.log(reorderColumns, 'reorderColumns');\r\n  };\r\n  customizeHeaderFilterData(options) {\r\n    options.dataSource.postProcess = results => {\r\n      results.map(x => {\r\n        x.text = x[options.dataSource.group[0].selector];\r\n        x.value = [options.dataSource.group[0].selector, '=', x[options.dataSource.group[0].selector]];\r\n        return x;\r\n      });\r\n      console.log(results, 'update customizeHeaderFilterData');\r\n      return results;\r\n    };\r\n  }\r\n}\r\n","<dx-data-grid\r\n  id=\"gridContainer\"\r\n  [dataSource]=\"customStore\"\r\n  [allowColumnReordering]=\"true\"\r\n  [allowColumnResizing]=\"true\"\r\n  [columnAutoWidth]=\"true\"\r\n  [showBorders]=\"true\"\r\n  [rowAlternationEnabled]=\"updateGrid?.rowSelection ? false : true\"\r\n  [showColumnLines]=\"true\"\r\n  [showRowLines]=\"true\"\r\n  [filterValue]=\"filterValue\"\r\n  [remoteOperations]=\"remoteOperations ? remoteOperations : false\"\r\n  [hoverStateEnabled]=\"updateGrid?.rowSelection\"\r\n  (onSelectionChanged)=\"onSelectionChanged($event)\"\r\n  (onRowPrepared)=\"onRowPrepared($event)\"\r\n  (onCellPrepared)=\"onCellPrepared($event)\"\r\n  (onContentReady)=\"contentReady($event)\"\r\n  (onExporting)=\"onExporting($event)\">\r\n  <dxo-load-panel [enabled]=\"false\"></dxo-load-panel>\r\n  <dxo-filter-panel [visible]=\"false\"></dxo-filter-panel>\r\n  <dxo-paging [pageSize]=\"currentPageSize\"></dxo-paging>\r\n  <dxo-pager\r\n    [visible]=\"true\"\r\n    [allowedPageSizes]=\"[10, 25, 50, 100]\"\r\n    [showPageSizeSelector]=\"true\"\r\n    [showInfo]=\"true\"\r\n    [showNavigationButtons]=\"true\"></dxo-pager>\r\n  <!--end pagination-->\r\n\r\n  <dxo-export [enabled]=\"enableExport\" [formats]=\"['xlsx', 'csv']\"></dxo-export>\r\n\r\n  <dxo-filter-builder [customOperations]=\"customOperations\"> </dxo-filter-builder>\r\n  <dxo-filter-builder-popup [position]=\"popupPosition\"> </dxo-filter-builder-popup>\r\n\r\n  <dxo-filter-row [visible]=\"showHeaderFilter\" [applyFilter]=\"currentFilter\"></dxo-filter-row>\r\n  <dxo-header-filter [visible]=\"true\" [allowSearch]=\"false\"></dxo-header-filter>\r\n  <dxo-selection mode=\"single\" *ngIf=\"updateGrid?.rowSelection\"></dxo-selection>\r\n  <ng-container *ngFor=\"let column of columns; let i = index\">\r\n    <ng-container *ngIf=\"column?.hide !== true\">\r\n      <ng-container *ngIf=\"column?.link; else noLink\">\r\n        <dxi-column\r\n          [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n          [allowHiding]=\"!column?.Choosable\"\r\n          [fixed]=\"column?.fixed\"\r\n          [dataField]=\"column?.columnDef\"\r\n          [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n          [caption]=\"column?.header\"\r\n          [allowFiltering]=\"column?.filter\"\r\n          cellTemplate=\"cellTemplate\"\r\n          [allowSorting]=\"column?.sort\"\r\n          [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n          <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n        </dxi-column>\r\n      </ng-container>\r\n      <ng-template #noLink>\r\n        <ng-container *ngIf=\"column?.icon; else noIcon\">\r\n          <dxi-column\r\n            [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n            [allowHiding]=\"!column?.Choosable\"\r\n            [fixed]=\"column?.fixed\"\r\n            [dataField]=\"column?.columnDef\"\r\n            [caption]=\"column?.header\"\r\n            [allowFiltering]=\"column?.filter\"\r\n            [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n            cellTemplate=\"iconTemplate\"\r\n            [allowSorting]=\"column?.sort\"\r\n            [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n            <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n          </dxi-column>\r\n        </ng-container>\r\n      </ng-template>\r\n      <ng-template #noIcon>\r\n        <ng-container *ngIf=\"column?.dateFormat; else noDate\">\r\n          <dxi-column\r\n            [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n            [allowHiding]=\"!column?.Choosable\"\r\n            [fixed]=\"column?.fixed\"\r\n            *ngIf=\"column?.datetext === 'MMDD24'\"\r\n            [dataField]=\"column?.columnDef\"\r\n            [caption]=\"column?.header\"\r\n            [allowFiltering]=\"column?.filter\"\r\n            [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n            dataType=\"date\"\r\n            format=\"MM/dd/yyyy, HH:mm\"\r\n            [allowSorting]=\"column?.sort\"\r\n            [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n            <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n          </dxi-column>\r\n          <dxi-column\r\n            [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n            [allowHiding]=\"!column?.Choosable\"\r\n            [fixed]=\"column?.fixed\"\r\n            *ngIf=\"column?.datetext === 'MDY'\"\r\n            [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n            [dataField]=\"column?.columnDef\"\r\n            [caption]=\"column?.header\"\r\n            [allowFiltering]=\"column?.filter\"\r\n            dataType=\"date\"\r\n            format=\"MM/dd/yyyy\"\r\n            [allowSorting]=\"column?.sort\"\r\n            [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n            <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n          </dxi-column>\r\n          <dxi-column\r\n            [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n            [allowHiding]=\"!column?.Choosable\"\r\n            [fixed]=\"column?.fixed\"\r\n            *ngIf=\"column?.datetext !== 'MDY' && column?.datetext !== 'MMDD24'\"\r\n            [dataField]=\"column?.columnDef\"\r\n            [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n            [caption]=\"column?.header\"\r\n            [allowFiltering]=\"column?.filter\"\r\n            dataType=\"date\"\r\n            [format]=\"column?.removeTime ? 'MM/dd/yyyy' : 'MM/dd/yyyy, hh:mm a'\"\r\n            [allowSorting]=\"column?.sort\"\r\n            [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n            <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n          </dxi-column>\r\n        </ng-container>\r\n      </ng-template>\r\n      <ng-template #noDate>\r\n        <dxi-column\r\n          [dataField]=\"column.columnDef\"\r\n          [caption]=\"column.header\"\r\n          [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n          [allowFiltering]=\"column.filter\">\r\n          <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n        </dxi-column>\r\n        <ng-container *ngIf=\"column?.header.toLowerCase().trim() === 'status';\">\r\n          <dxi-column\r\n            [visible]=\"getVisabilityByChoosableProp(updateGrid?.chooser, column?.visible)\"\r\n            [allowHiding]=\"!column?.Choosable\"\r\n            [fixed]=\"column?.fixed\"\r\n            [dataField]=\"column?.columnDef\"\r\n            [filterOperations]=\"column?.filterOperations ? column?.filterOperations : ''\"\r\n            [caption]=\"column?.header\"\r\n            [allowFiltering]=\"column?.filter\"\r\n            cellTemplate=\"statusTemplate\"\r\n            [allowSorting]=\"column?.sort\"\r\n            [sortOrder]=\"getSortOrder(updateGrid?.defaultSortColumn, updateGrid?.defaultSortType, column?.columnDef)\">\r\n            <dxo-header-filter [dataSource]=\"customizeHeaderFilterData\"></dxo-header-filter>\r\n          </dxi-column>\r\n        </ng-container>\r\n      </ng-template>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"\r\n      updateGrid &&\r\n      (updateGrid?.externalLink ||\r\n        updateGrid?.openPopup ||\r\n        updateGrid?.edit ||\r\n        updateGrid?.editMyApplication ||\r\n        updateGrid?.editAppeal ||\r\n        updateGrid?.editBilling ||\r\n        updateGrid?.delete ||\r\n        updateGrid?.delete ||\r\n        updateGrid?.download ||\r\n        updateGrid?.showDownload ||\r\n        updateGrid?.showDelete ||\r\n        updateGrid?.pdf)\r\n    \">\r\n    <dxi-column\r\n      [width]=\"100\"\r\n      [allowFiltering]=\"false\"\r\n      [allowSorting]=\"false\"\r\n      caption=\"Action\"\r\n      cellTemplate=\"editCellTemplate\"></dxi-column>\r\n    <!-- Action label added for admin grid -->\r\n\r\n    <div *dxTemplate=\"let d of 'editCellTemplate'\">\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.externalLink\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"Open\"\r\n        (click)=\"openLink(d)\">\r\n        <em class=\"fa fa-external-link\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"Appeal\"\r\n        *ngIf=\"updateGrid?.appeal\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"Appeal\"\r\n        (click)=\"navigateTo(d)\">\r\n        <em class=\"fa fa-external-link\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.showDownload && !updateGrid?.isNewlyUploaded\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"Download File\"\r\n        (click)=\"downloadFormResponseAttachments(d)\">\r\n        <em class=\"fa fa-download\" aria-hidden=\"true\"></em> </a\r\n      >&nbsp;&nbsp;\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.showDelete\"\r\n        class=\"no-bg text-danger\"\r\n        matTooltip=\"Delete File\"\r\n        (click)=\"deleteFormResponseAttachments(d)\">\r\n        <em class=\"fa fa-trash\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.openPopup\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"Open\"\r\n        (click)=\"openPopupLink(d)\">\r\n        <em class=\"fa fa-newspaper-o\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.duplicate\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"Copy\"\r\n        (click)=\"duplicateDate(d)\">\r\n        <em class=\"fa fa-copy\" aria-hidden=\"true\" fieldKey=\"PAG_DES_GRID_LIST_COPY\"\r\n          ><span class=\"sr-only\">Copy</span></em\r\n        >\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.download\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"Download\"\r\n        (click)=\"downloadData(d)\">\r\n        <em class=\"fa fa-download\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"Edit\"\r\n        *ngIf=\"updateGrid?.edit && !d.data?.extendedProps?.outcome\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"Edit\"\r\n        (click)=\"editData(d)\">\r\n        <em class=\"fa fa-pencil\" title=\"Edit\" aria-hidden=\"true\" style=\"font-size: 13px\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"Edit\"\r\n        *ngIf=\"updateGrid?.editMyApplication && d?.data?.application_status === 'In Progress'\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"Edit\"\r\n        (click)=\"editDataMyApplciation(d)\">\r\n        <em class=\"fa fa-pencil\" title=\"Edit\" aria-hidden=\"true\" style=\"font-size: 13px\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"Edit\"\r\n        *ngIf=\"updateGrid?.editAppeal && d?.data?.status === 'In Progress'\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"Edit\"\r\n        (click)=\"editAppeal(d)\">\r\n        <em class=\"fa fa-pencil\" title=\"Edit\" aria-hidden=\"true\" style=\"font-size: 13px\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"Edit\"\r\n        *ngIf=\"updateGrid?.editBilling && d?.data?.status === 'Waiting for approval'\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"Edit\"\r\n        (click)=\"editAppeal(d)\">\r\n        <em class=\"fa fa-pencil\" title=\"Edit\" aria-hidden=\"true\" style=\"font-size: 13px\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"View\"\r\n        *ngIf=\"updateGrid?.view\"\r\n        class=\"no-bg mr-2\"\r\n        matTooltip=\"View\"\r\n        (click)=\"viewData(d)\">\r\n        <em class=\"fa fa-eye\" title=\"View\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        title=\"delete\"\r\n        *ngIf=\"updateGrid?.delete\"\r\n        class=\"no-bg text-danger\"\r\n        matTooltip=\"Delete\"\r\n        (click)=\"deleteData(d)\">\r\n        <em class=\"fa fa-trash\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"updateGrid?.outcome && d.data?.extendedProps?.outcome\"\r\n        class=\"no-bg\"\r\n        matTooltip=\"View\"\r\n        (click)=\"outComeData(d)\">\r\n        <em class=\"fa fa-eye\" title=\"View\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <a href=\"javascript:void(0)\" title=\"pdf\" *ngIf=\"updateGrid?.pdf\" class=\"no-bg\" matTooltip=\"PDF\">\r\n        <em class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></em>\r\n      </a>\r\n      <button\r\n        *ngIf=\"updateGrid?.toggle\"\r\n        class=\"no-bg\"\r\n        [matTooltip]=\"d.data.isactive === true ? 'Deactivate' : 'Activate'\"\r\n        (click)=\"activeUser(d)\">\r\n        <em *ngIf=\"updateGrid?.toggle && d.data.isactive === true\" class=\"fa fa-toggle-on\"></em>\r\n        <em *ngIf=\"updateGrid?.toggle && d.data.isactive === false\" class=\"fa fa-toggle-off\"></em>\r\n      </button>\r\n      <button *ngIf=\"updateGrid?.activeordeactive\" class=\"no-bg\" (click)=\"deleteData(d)\">\r\n        <em *ngIf=\"updateGrid?.activeordeactive && d.data.activeflag === 1\" class=\"fa fa-toggle-on\"></em>\r\n        <em *ngIf=\"updateGrid?.activeordeactive && d.data.activeflag === 0\" class=\"fa fa-toggle-off\"></em>\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n  <div *dxTemplate=\"let d of 'cellTemplate'\">\r\n    <a href=\"javascript:void(0)\" *ngIf=\"d.value && d.value !== 'null'\" (click)=\"getRouter(d)\">{{\r\n      d.value !== 'null' ? d.value : ''\r\n    }}</a>\r\n  </div>\r\n  <div *dxTemplate=\"let d of 'iconTemplate'\">\r\n    <em class=\"fa fa-book\" (click)=\"popup(d.value)\" aria-hidden=\"true\"></em>\r\n  </div>\r\n</dx-data-grid>\r\n<!-- <ng-template #callNarrativePopup>\r\n  <h2 matDialogTitle>Narrative</h2>\r\n  <div [innerHTML]=\"narrativeData\"></div>\r\n  <div class=\"text-right\">\r\n    <button mat-button (click)=\"closeNarrativePopup()\" class=\"btn btn-cancel mr-2\">Close</button>\r\n  </div>\r\n</ng-template> -->\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatFormFieldModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialUIModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedPipesModule } from '../../../@core/pipe/shared-pipes.module';\r\nimport { DxDataGridModule } from 'devextreme-angular';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxfUploaderModule } from 'ngxf-uploader';\r\nimport { GridListComponent } from './grid-list.component';\r\nimport { MaterialUIModule } from '../../../@shared/material-ui/material-ui.module';\r\n\r\n@NgModule({\r\n  declarations: [GridListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    DxDataGridModule,\r\n    MaterialUIModule,\r\n    SharedPipesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxfUploaderModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  exports: [GridListComponent]\r\n})\r\nexport class GridListModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AuthService } from '../../../@core/service/auth.service';\r\nimport { AccessManagementCommonService } from '../../../@core/urls/access-management-common.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-dropdown',\r\n  templateUrl: './organization-dropdown.component.html',\r\n  styleUrls: ['./organization-dropdown.component.scss']\r\n})\r\nexport class OrganizationDropdownComponent implements OnInit {\r\n  @Input() isShow: boolean;\r\n  @Input() Organization: any;\r\n  @Output() changeOrganization = new EventEmitter();\r\n  orgList: any[];\r\n\r\n  constructor(public accessManagementService: AccessManagementCommonService, public auth: AuthService) {\r\n     // This is intentional\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getOrgList();\r\n  }\r\n\r\n  /**\r\n   * @description returning selected organization details on event emitter\r\n   * @param orgID organization id\r\n   */\r\n  onSelectionChange(orgID) {\r\n    this.changeOrganization.emit(orgID);\r\n  }\r\n\r\n  /**\r\n   * @description fetch organization list from backend\r\n   */\r\n  getOrgList() {\r\n    this.accessManagementService.getOrganizationList().subscribe(res => {\r\n      if (res['data'] && res['data'].length) {\r\n        this.orgList = res['data'].sort((a, b) => a.organizationname?.localeCompare(b.organizationname));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description check isAdmin or not\r\n   */\r\n  get displayCondn(): boolean {\r\n    return this.auth.isAdmin() && this.isShow;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <ng-container *ngIf=\"displayCondn\">\r\n      <div class=\"d-block pull-left w-100 my-2\">\r\n        <p class=\"org-title\">Organization Name</p>\r\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n          <mat-select\r\n            placeholder=\"Organization\"\r\n            [(ngModel)]=\"Organization\"\r\n            (selectionChange)=\"onSelectionChange($event)\">\r\n            <mat-option value=\"Select-ALL\"> Select-ALL </mat-option>\r\n            <mat-option *ngFor=\"let org of orgList\" value=\"{{ org.id }}\">\r\n              {{ org.organizationname }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedPipesModule } from '../../../@core/pipe/shared-pipes.module';\r\nimport { DxDataGridModule } from 'devextreme-angular';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxfUploaderModule } from 'ngxf-uploader';\r\nimport { OrganizationDropdownComponent } from './organization-dropdown.component';\r\nimport { MaterialUIModule } from '../../../@shared/material-ui/material-ui.module';\r\n\r\n@NgModule({\r\n  declarations: [OrganizationDropdownComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialUIModule,\r\n    NgxPaginationModule,\r\n    DxDataGridModule,\r\n    SharedPipesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxfUploaderModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  exports: [OrganizationDropdownComponent]\r\n})\r\nexport class OrganizationDropdownModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DirectivesModule } from '../../../@core/directives/directives.module';\r\nimport { SharedPipesModule } from '../../../@core/pipe/shared-pipes.module';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { DxDataGridModule } from 'devextreme-angular';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxfUploaderModule } from 'ngxf-uploader';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ManageAccessRadioComponent } from './manage-access-radio.component';\r\nimport { MaterialUIModule } from '../../../@shared/material-ui/material-ui.module';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ManageAccessRadioComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    DxDataGridModule,\r\n    MaterialUIModule,\r\n    SharedPipesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxfUploaderModule,\r\n    NgxMatSelectSearchModule,\r\n    // AngularMultiSelectModule,\r\n    DirectivesModule,\r\n    NgxMaskModule.forRoot(),\r\n    DropdownModule,\r\n    TooltipModule\r\n  ],\r\n  exports: [ManageAccessRadioComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class ManageAccessRadioModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShareDataService {\r\n\r\n  public data = new BehaviorSubject<string>('');\r\n\r\n  constructor() {}\r\n}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PageaccessComponent } from './pageaccess/pageaccess.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { DirectivesModule } from './@core/directives/directives.module';\r\nimport { PermissionStore } from './@core/permissions/permission.store';\r\nimport { AlertService } from './@core/service/alert.service';\r\nimport { DataStoreService } from './@core/service/data-store.service';\r\nimport { MicrostrategyService } from './@core/service/microstrategy.service';\r\nimport { RbacService } from './@core/service/rbac.service';\r\nimport { AlertModule } from './@shared/alert/alert.module';\r\nimport {AngularMultiSelectModule} from 'angular2-multiselect-dropdown'\r\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search'\r\nimport {PrimengModule} from '../pics-rbac-pageaccess/@shared/primeng.module'\r\nimport { GridListModule } from './@shared/common-components/grid-list/grid-list.module';\r\nimport { OrganizationDropdownModule } from './@shared/common-components/organization-dropdown/organization-dropdown.module';\r\nimport { MaterialUIModule } from './@shared/material-ui/material-ui.module';\r\nimport { ManageAccessRadioModule } from './@shared/common-components/manage-access-radio/manage-access-radio.module';\r\nimport { PageAccessService } from './@core/urls/page-access.service';\r\nimport { AuthService } from './@core/service/auth.service';\r\nimport { AuthStore } from './@core/auth/auth.store';\r\nimport { DynamicTabPageService } from './@core/service/dynamic-tab-page-service';\r\nimport { ShareDataService } from './@core/service/share-data.service';\r\nimport { PageHeaderService } from './@core/service/page-header.service';\r\nimport { AccessManagementCommonService } from './@core/urls/access-management-common.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PageaccessComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TreeSelectModule,\r\n    // HttpClientModule,\r\n    CheckboxModule,\r\n    DropdownModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    AccordionModule,\r\n    MessageModule,\r\n    GridListModule,\r\n    TableModule,\r\n    InputTextModule,\r\n    InputNumberModule,\r\n    CalendarModule,\r\n    EditorModule,\r\n    FieldsetModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    InputMaskModule,\r\n    StepsModule,\r\n    ToastModule,\r\n    RippleModule,\r\n    AvatarModule,\r\n    BadgeModule,\r\n    MultiSelectModule,\r\n    InputSwitchModule,\r\n    ProgressSpinnerModule,\r\n    SpeedDialModule,\r\n    OrderListModule,\r\n    FileUploadModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    KnobModule,\r\n    SidebarModule,\r\n    ContextMenuModule,\r\n    ConfirmPopupModule,\r\n    DirectivesModule,\r\n    AlertModule,\r\n    MaterialUIModule,\r\n    // AngularMultiSelectModule,\r\n    NgxMatSelectSearchModule,\r\n    PrimengModule,\r\n    OrganizationDropdownModule,\r\n    ManageAccessRadioModule,\r\n  ],\r\n  exports: [PageaccessComponent],\r\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [RbacService, MicrostrategyService, HttpClient, AuthService,AuthStore, AlertService, \r\n    ConfirmationService, PermissionStore, DataStoreService,PageHeaderService,\r\n    PageAccessService,DynamicTabPageService,ShareDataService,AccessManagementCommonService]\r\n})\r\nexport class PicsRbacPageaccessModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RbacPageaccessComponent } from './rbac-pageaccess.component';\r\nimport { PicsRbacPageaccessModule } from './pics-rbac-pageaccess/pics-rbac-pageaccess.module';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RbacPageaccessComponent,\r\n  ],\r\n  imports: [\r\n    PicsRbacPageaccessModule,\r\n  ],\r\n  exports: [\r\n    RbacPageaccessComponent\r\n  ]\r\n})\r\nexport class CardiRbacPageaccessModule { }\r\n","/*\r\n * Public API Surface of rbac-pageaccess\r\n */\r\n\r\nexport * from './lib/rbac-pageaccess.service';\r\nexport * from './lib/rbac-pageaccess.component';\r\nexport * from './lib/rbac-pageaccess.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.DataStoreService","i1.DataStoreService","i1","i2.AuthStore","i4.CredentialsService","i5.LocalService","i1.PermissionStore","i2.AccessManagementCommonService","i3.DataStoreService","i4","i5","i6.PermissionDirective","i1.AlertService","i2","i4.AlertService","i6","i7","i8","i9","i15.PermissionDirective","i16.AlertComponent","i18","i19.ManageAccessRadioComponent","i3.PageaccessComponent","i2.AlertService","i3.PermissionStore","i4.DataStoreService","exportDataGridToPdf","exportDataGrid","i2.AuthService","i3.LocalService","i1.AccessManagementCommonService","i3"],"mappings":"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"}