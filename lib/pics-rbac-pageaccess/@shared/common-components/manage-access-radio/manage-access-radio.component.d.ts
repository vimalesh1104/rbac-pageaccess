import { AfterViewChecked, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AccessManagementCommonService } from '../../../@core/urls/access-management-common.service';
import { Subscription } from 'rxjs';
import { DataStoreService } from '../../../@core/service/data-store.service';
import { RBACINFO } from '../../../@core/urls/rbac-url.config';
import * as i0 from "@angular/core";
export declare class ManageAccessRadioComponent implements OnInit, AfterViewChecked, OnDestroy {
    private formBuilder;
    cdRef: ChangeDetectorRef;
    accessManagementService: AccessManagementCommonService;
    private _storeservice;
    rbacForm: FormGroup;
    userList: any[];
    policyGroupData: any[];
    roleAddedData: any[];
    userDropDown: boolean;
    roleDropDown: boolean;
    policyDropDown: boolean;
    accessBy: EventEmitter<any>;
    policyDropdown: EventEmitter<any>;
    roleDropdown: EventEmitter<any>;
    userDropdown: EventEmitter<any>;
    dropDownSelectedValues: EventEmitter<any>;
    reloadForm: boolean;
    userDropdownSettings: {};
    roleDropdownSettings: {};
    policyDropdownSettings: {};
    orgSubs: Subscription;
    orgId: any;
    environment: any;
    RBACORG: RBACINFO;
    constructor(formBuilder: FormBuilder, cdRef: ChangeDetectorRef, accessManagementService: AccessManagementCommonService, _storeservice: DataStoreService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewChecked(): void;
    loadDropdowns(): void;
    loadForm(): void;
    loadUsername(): void;
    getPolicyGroup(): void;
    getPersona(): void;
    showDorpdowns(id: any): void;
    getDataBasedOnPolicy(): void;
    getDataBasedOnRole(): void;
    getRoleAndPolicyData(): void;
    resetForm(id?: any): void;
    getOrgPages(type: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManageAccessRadioComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ManageAccessRadioComponent, "app-manage-access-radio", never, { "reloadForm": { "alias": "reloadForm"; "required": false; }; }, { "accessBy": "accessBy"; "policyDropdown": "policyDropdown"; "roleDropdown": "roleDropdown"; "userDropdown": "userDropdown"; "dropDownSelectedValues": "dropDownSelectedValues"; }, never, never, false, never>;
}
